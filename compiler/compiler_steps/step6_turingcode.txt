6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 1 0 0 1 1 1 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 1 1 1 1 0 1 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 1 0 1 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 1 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 1 0 0 0 6 0 0 0 1 0 1 1 0 6 !5 2 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 10

# Original program

#p let a = (22 - 8) * 4 + 5;
#p let b = a == 61;
#p let c = 0;
#p if b {
#p     c = a + 39;
#p } else {
#p     c = 0;
#p };
#p let d = c + a;

START 5 5 S 0END

#
### LOAD S1 A
#


0END 5 5 S 1START

# Start of loading
1START 5 5 R 1TO_A_END_R
# To end of number A
1TO_A_END_R 0 0 R 1TO_A_END_R
1TO_A_END_R 1 1 R 1TO_A_END_R
1TO_A_END_R 2 2 R 1TO_A_END_R
1TO_A_END_R 3 3 L 1SET_TO_7

# Move to the start of number A, and set all values to 7
1SET_TO_7 0 7 L 1SET_TO_7
1SET_TO_7 1 7 L 1SET_TO_7
1SET_TO_7 2 2 L 1TO_MIDDLE_L
# Find the middle
1TO_MIDDLE_L 1 1 L 1TO_MIDDLE_L
1TO_MIDDLE_L 0 0 L 1TO_MIDDLE_L
1TO_MIDDLE_L 7 7 L 1TO_MIDDLE_L
1TO_MIDDLE_L 2 2 L 1TO_MIDDLE_L
1TO_MIDDLE_L 3 3 L 1TO_MIDDLE_L
1TO_MIDDLE_L 4 4 L 1TO_MIDDLE_L
1TO_MIDDLE_L 5 5 L 1TO_S1_END
# To end of S1
1TO_S1_END 6 6 L 1COPY_VALUE
# Move Left until start of S1
# Copy the first non-7/8 value
1COPY_VALUE 0 7 R 1MOVE_ZERO
1COPY_VALUE 1 8 R 1MOVE_ONE
1COPY_VALUE 7 7 L 1COPY_VALUE
1COPY_VALUE 8 8 L 1COPY_VALUE
1COPY_VALUE 6 6 R 1RESTORE_VALUE

# Move a 0 to number A
1MOVE_ZERO 0 0 R 1MOVE_ZERO
1MOVE_ZERO 1 1 R 1MOVE_ZERO
1MOVE_ZERO 2 2 R 1MOVE_ZERO
1MOVE_ZERO 3 3 L 1MOVE_ZERO_2
1MOVE_ZERO 4 4 R 1MOVE_ZERO
1MOVE_ZERO 5 5 R 1MOVE_ZERO
1MOVE_ZERO 6 6 R 1MOVE_ZERO
1MOVE_ZERO 7 7 R 1MOVE_ZERO
1MOVE_ZERO 8 8 R 1MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
1MOVE_ZERO_2 0 0 L 1MOVE_ZERO_2
1MOVE_ZERO_2 1 1 L 1MOVE_ZERO_2
1MOVE_ZERO_2 7 0 S 1TO_MIDDLE_L
# Move a 1 to number A
1MOVE_ONE 0 0 R 1MOVE_ONE
1MOVE_ONE 1 1 R 1MOVE_ONE
1MOVE_ONE 2 2 R 1MOVE_ONE
1MOVE_ONE 3 3 L 1MOVE_ONE_2
1MOVE_ONE 4 4 R 1MOVE_ONE
1MOVE_ONE 5 5 R 1MOVE_ONE
1MOVE_ONE 6 6 R 1MOVE_ONE
1MOVE_ONE 7 7 R 1MOVE_ONE
1MOVE_ONE 8 8 R 1MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
1MOVE_ONE_2 0 0 L 1MOVE_ONE_2
1MOVE_ONE_2 1 1 L 1MOVE_ONE_2
1MOVE_ONE_2 7 1 S 1TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
1RESTORE_VALUE 7 0 R 1RESTORE_VALUE
1RESTORE_VALUE 8 1 R 1RESTORE_VALUE
1RESTORE_VALUE 6 6 S 1TO_START
# Go back to the start
1TO_START 0 0 R 1TO_START
1TO_START 1 1 R 1TO_START
1TO_START 6 6 R 1TO_START
1TO_START 5 5 S 1END



#
### LOAD S2 B
#


1END 5 5 S 2START

# Start of loading
2START 5 5 R 2TO_B_END_R
# To end of number B
2TO_B_END_R 0 0 R 2TO_B_END_R
2TO_B_END_R 1 1 R 2TO_B_END_R
2TO_B_END_R 2 2 R 2TO_B_END_R
2TO_B_END_R 3 3 R 2TO_B_END_R
2TO_B_END_R 4 4 L 2SET_TO_7

# Move to the start of number B, and set all values to 7
2SET_TO_7 0 7 L 2SET_TO_7
2SET_TO_7 1 7 L 2SET_TO_7
2SET_TO_7 3 3 L 2TO_MIDDLE_L
# Find the middle
2TO_MIDDLE_L 1 1 L 2TO_MIDDLE_L
2TO_MIDDLE_L 0 0 L 2TO_MIDDLE_L
2TO_MIDDLE_L 7 7 L 2TO_MIDDLE_L
2TO_MIDDLE_L 2 2 L 2TO_MIDDLE_L
2TO_MIDDLE_L 3 3 L 2TO_MIDDLE_L
2TO_MIDDLE_L 4 4 L 2TO_MIDDLE_L
2TO_MIDDLE_L 5 5 L 2TO_S1_END
# To end of S1
2TO_S1_END 6 6 L 2TO_S2_END
# To end of S2
2TO_S2_END 0 0 L 2TO_S2_END
2TO_S2_END 1 1 L 2TO_S2_END
2TO_S2_END 6 6 L 2COPY_VALUE
# Move Left until start of S2
# Copy the first non-7/8 value
2COPY_VALUE 0 7 R 2MOVE_ZERO
2COPY_VALUE 1 8 R 2MOVE_ONE
2COPY_VALUE 7 7 L 2COPY_VALUE
2COPY_VALUE 8 8 L 2COPY_VALUE
2COPY_VALUE 6 6 R 2RESTORE_VALUE

# Move a 0 to number B
2MOVE_ZERO 0 0 R 2MOVE_ZERO
2MOVE_ZERO 1 1 R 2MOVE_ZERO
2MOVE_ZERO 2 2 R 2MOVE_ZERO
2MOVE_ZERO 3 3 R 2MOVE_ZERO
2MOVE_ZERO 4 4 L 2MOVE_ZERO_2
2MOVE_ZERO 5 5 R 2MOVE_ZERO
2MOVE_ZERO 6 6 R 2MOVE_ZERO
2MOVE_ZERO 7 7 R 2MOVE_ZERO
2MOVE_ZERO 8 8 R 2MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
2MOVE_ZERO_2 0 0 L 2MOVE_ZERO_2
2MOVE_ZERO_2 1 1 L 2MOVE_ZERO_2
2MOVE_ZERO_2 7 0 S 2TO_MIDDLE_L
# Move a 1 to number B
2MOVE_ONE 0 0 R 2MOVE_ONE
2MOVE_ONE 1 1 R 2MOVE_ONE
2MOVE_ONE 2 2 R 2MOVE_ONE
2MOVE_ONE 3 3 R 2MOVE_ONE
2MOVE_ONE 4 4 L 2MOVE_ONE_2
2MOVE_ONE 5 5 R 2MOVE_ONE
2MOVE_ONE 6 6 R 2MOVE_ONE
2MOVE_ONE 7 7 R 2MOVE_ONE
2MOVE_ONE 8 8 R 2MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
2MOVE_ONE_2 0 0 L 2MOVE_ONE_2
2MOVE_ONE_2 1 1 L 2MOVE_ONE_2
2MOVE_ONE_2 7 1 S 2TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
2RESTORE_VALUE 7 0 R 2RESTORE_VALUE
2RESTORE_VALUE 8 1 R 2RESTORE_VALUE
2RESTORE_VALUE 6 6 S 2TO_START
# Go back to the start
2TO_START 0 0 R 2TO_START
2TO_START 1 1 R 2TO_START
2TO_START 6 6 R 2TO_START
2TO_START 5 5 S 2END



#
### SUB
#


2END 5 5 S 3START

 5 2 1 0 1 0 0 1 1 0 3 0 0 0 0 1 1 1 0 4

# Start of the subtraction program
3START 5 5 R 3FIND_B_END

# Find the end of the second number
3FIND_B_END 0 0 R 3FIND_B_END
3FIND_B_END 1 1 R 3FIND_B_END
3FIND_B_END 2 2 R 3FIND_B_END
3FIND_B_END 3 3 R 3FIND_B_END
3FIND_B_END 7 7 R 3FIND_B_END
3FIND_B_END 8 8 R 3FIND_B_END
3FIND_B_END 4 4 L 3SUB_DIGIT

# Find first non-subtracted digit
3SUB_DIGIT 7 7 L 3SUB_DIGIT
3SUB_DIGIT 8 8 L 3SUB_DIGIT
3SUB_DIGIT 0 7 L 3SUB_DIGIT_ZERO
3SUB_DIGIT 1 7 L 3SUB_DIGIT_ONE
3SUB_DIGIT 3 3 R 3RESTORE

# Subtract a zero
3SUB_DIGIT_ZERO 0 0 L 3SUB_DIGIT_ZERO
3SUB_DIGIT_ZERO 1 1 L 3SUB_DIGIT_ZERO
3SUB_DIGIT_ZERO 3 3 L 3SUB_DIGIT_ZERO_1

3SUB_DIGIT_ZERO_1 7 7 L 3SUB_DIGIT_ZERO_1
3SUB_DIGIT_ZERO_1 8 8 L 3SUB_DIGIT_ZERO_1
3SUB_DIGIT_ZERO_1 0 7 L 3FIND_B_END
3SUB_DIGIT_ZERO_1 1 8 R 3FIND_B_END

# Subtract a one
3SUB_DIGIT_ONE 0 0 L 3SUB_DIGIT_ONE
3SUB_DIGIT_ONE 1 1 L 3SUB_DIGIT_ONE
3SUB_DIGIT_ONE 3 3 L 3SUB_DIGIT_ONE_1

3SUB_DIGIT_ONE_1 7 7 L 3SUB_DIGIT_ONE_1
3SUB_DIGIT_ONE_1 8 8 L 3SUB_DIGIT_ONE_1
3SUB_DIGIT_ONE_1 0 8 L 3SUB_DIGIT_ONE_2
3SUB_DIGIT_ONE_1 1 7 R 3FIND_B_END

3SUB_DIGIT_ONE_2 1 0 R 3FIND_B_END
3SUB_DIGIT_ONE_2 0 1 L 3SUB_DIGIT_ONE_2

# Return to the middle of the tape
3RESTORE 7 0 R 3RESTORE
3RESTORE 8 1 R 3RESTORE
3RESTORE 4 4 L 3RESTORE_1

3RESTORE_1 0 0 L 3RESTORE_1
3RESTORE_1 1 1 L 3RESTORE_1
3RESTORE_1 3 3 L 3RESTORE_1
3RESTORE_1 2 2 L 3RESTORE_1
3RESTORE_1 7 0 L 3RESTORE_1
3RESTORE_1 8 1 L 3RESTORE_1
3RESTORE_1 5 5 S 3END


#
### STORE S3 A
#


3END 5 5 S 4START

4START 5 5 L 4TO_S1_END
# To end of S1
4TO_S1_END 6 6 L 4TO_S2_END
# To end of S2
4TO_S2_END 0 0 L 4TO_S2_END
4TO_S2_END 1 1 L 4TO_S2_END
4TO_S2_END 6 6 L 4TO_S3_END
# To end of S3
4TO_S3_END 0 0 L 4TO_S3_END
4TO_S3_END 1 1 L 4TO_S3_END
4TO_S3_END 6 6 L 4SET_TO_7

# Set all the values to 7 untill the start of S1
4SET_TO_7 0 7 L 4SET_TO_7
4SET_TO_7 1 7 L 4SET_TO_7
4SET_TO_7 6 9 R 4TO_MIDDLE_R
# Find the middle
4TO_MIDDLE_R 1 1 R 4TO_MIDDLE_R
4TO_MIDDLE_R 0 0 R 4TO_MIDDLE_R
4TO_MIDDLE_R 7 7 R 4TO_MIDDLE_R
4TO_MIDDLE_R 2 2 R 4TO_MIDDLE_R
4TO_MIDDLE_R 6 6 R 4TO_MIDDLE_R
4TO_MIDDLE_R 5 5 R 4COPY_VALUE
# Move Left until start of A
# Copy the first non-7/MovH8 value
4COPY_VALUE 0 7 L 4MOVE_ZERO
4COPY_VALUE 1 8 L 4MOVE_ONE
4COPY_VALUE 2 2 R 4COPY_VALUE
4COPY_VALUE 7 7 R 4COPY_VALUE
4COPY_VALUE 8 8 R 4COPY_VALUE
4COPY_VALUE 3 3 L 4RESTORE_VALUE

# Move a 0 to number 9
4MOVE_ZERO 0 0 L 4MOVE_ZERO
4MOVE_ZERO 1 1 L 4MOVE_ZERO
4MOVE_ZERO 2 2 L 4MOVE_ZERO
4MOVE_ZERO 3 3 L 4MOVE_ZERO
4MOVE_ZERO 4 4 L 4MOVE_ZERO
4MOVE_ZERO 9 9 R 4MOVE_ZERO_2
4MOVE_ZERO 5 5 L 4MOVE_ZERO
4MOVE_ZERO 6 6 L 4MOVE_ZERO
4MOVE_ZERO 7 7 L 4MOVE_ZERO
4MOVE_ZERO 8 8 L 4MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
4MOVE_ZERO_2 0 0 R 4MOVE_ZERO_2
4MOVE_ZERO_2 1 1 R 4MOVE_ZERO_2
4MOVE_ZERO_2 7 0 S 4TO_MIDDLE_R
# Move a 1 to number 9
4MOVE_ONE 0 0 L 4MOVE_ONE
4MOVE_ONE 1 1 L 4MOVE_ONE
4MOVE_ONE 2 2 L 4MOVE_ONE
4MOVE_ONE 3 3 L 4MOVE_ONE
4MOVE_ONE 4 4 L 4MOVE_ONE
4MOVE_ONE 9 9 R 4MOVE_ONE_2
4MOVE_ONE 5 5 L 4MOVE_ONE
4MOVE_ONE 6 6 L 4MOVE_ONE
4MOVE_ONE 7 7 L 4MOVE_ONE
4MOVE_ONE 8 8 L 4MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
4MOVE_ONE_2 0 0 R 4MOVE_ONE_2
4MOVE_ONE_2 1 1 R 4MOVE_ONE_2
4MOVE_ONE_2 7 1 S 4TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
4RESTORE_VALUE 7 0 L 4RESTORE_VALUE
4RESTORE_VALUE 8 1 L 4RESTORE_VALUE
4RESTORE_VALUE 2 2 L 4RESET_STORAGE_MARKER
# Reset 9 to 6
4RESET_STORAGE_MARKER 0 0 L 4RESET_STORAGE_MARKER
4RESET_STORAGE_MARKER 1 1 L 4RESET_STORAGE_MARKER
4RESET_STORAGE_MARKER 5 5 L 4RESET_STORAGE_MARKER
4RESET_STORAGE_MARKER 6 6 L 4RESET_STORAGE_MARKER
4RESET_STORAGE_MARKER 9 6 R 4RETURN_TO_MIDDLE
# Return to middle
4RETURN_TO_MIDDLE 0 0 R 4RETURN_TO_MIDDLE
4RETURN_TO_MIDDLE 1 1 R 4RETURN_TO_MIDDLE
4RETURN_TO_MIDDLE 6 6 R 4RETURN_TO_MIDDLE
4RETURN_TO_MIDDLE 5 5 S 4END


#
### LOAD S3 B
#


4END 5 5 S 5START

# Start of loading
5START 5 5 R 5TO_B_END_R
# To end of number B
5TO_B_END_R 0 0 R 5TO_B_END_R
5TO_B_END_R 1 1 R 5TO_B_END_R
5TO_B_END_R 2 2 R 5TO_B_END_R
5TO_B_END_R 3 3 R 5TO_B_END_R
5TO_B_END_R 4 4 L 5SET_TO_7

# Move to the start of number B, and set all values to 7
5SET_TO_7 0 7 L 5SET_TO_7
5SET_TO_7 1 7 L 5SET_TO_7
5SET_TO_7 3 3 L 5TO_MIDDLE_L
# Find the middle
5TO_MIDDLE_L 1 1 L 5TO_MIDDLE_L
5TO_MIDDLE_L 0 0 L 5TO_MIDDLE_L
5TO_MIDDLE_L 7 7 L 5TO_MIDDLE_L
5TO_MIDDLE_L 2 2 L 5TO_MIDDLE_L
5TO_MIDDLE_L 3 3 L 5TO_MIDDLE_L
5TO_MIDDLE_L 4 4 L 5TO_MIDDLE_L
5TO_MIDDLE_L 5 5 L 5TO_S1_END
# To end of S1
5TO_S1_END 6 6 L 5TO_S2_END
# To end of S2
5TO_S2_END 0 0 L 5TO_S2_END
5TO_S2_END 1 1 L 5TO_S2_END
5TO_S2_END 6 6 L 5TO_S3_END
# To end of S3
5TO_S3_END 0 0 L 5TO_S3_END
5TO_S3_END 1 1 L 5TO_S3_END
5TO_S3_END 6 6 L 5COPY_VALUE
# Move Left until start of S3
# Copy the first non-7/8 value
5COPY_VALUE 0 7 R 5MOVE_ZERO
5COPY_VALUE 1 8 R 5MOVE_ONE
5COPY_VALUE 7 7 L 5COPY_VALUE
5COPY_VALUE 8 8 L 5COPY_VALUE
5COPY_VALUE 6 6 R 5RESTORE_VALUE

# Move a 0 to number B
5MOVE_ZERO 0 0 R 5MOVE_ZERO
5MOVE_ZERO 1 1 R 5MOVE_ZERO
5MOVE_ZERO 2 2 R 5MOVE_ZERO
5MOVE_ZERO 3 3 R 5MOVE_ZERO
5MOVE_ZERO 4 4 L 5MOVE_ZERO_2
5MOVE_ZERO 5 5 R 5MOVE_ZERO
5MOVE_ZERO 6 6 R 5MOVE_ZERO
5MOVE_ZERO 7 7 R 5MOVE_ZERO
5MOVE_ZERO 8 8 R 5MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
5MOVE_ZERO_2 0 0 L 5MOVE_ZERO_2
5MOVE_ZERO_2 1 1 L 5MOVE_ZERO_2
5MOVE_ZERO_2 7 0 S 5TO_MIDDLE_L
# Move a 1 to number B
5MOVE_ONE 0 0 R 5MOVE_ONE
5MOVE_ONE 1 1 R 5MOVE_ONE
5MOVE_ONE 2 2 R 5MOVE_ONE
5MOVE_ONE 3 3 R 5MOVE_ONE
5MOVE_ONE 4 4 L 5MOVE_ONE_2
5MOVE_ONE 5 5 R 5MOVE_ONE
5MOVE_ONE 6 6 R 5MOVE_ONE
5MOVE_ONE 7 7 R 5MOVE_ONE
5MOVE_ONE 8 8 R 5MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
5MOVE_ONE_2 0 0 L 5MOVE_ONE_2
5MOVE_ONE_2 1 1 L 5MOVE_ONE_2
5MOVE_ONE_2 7 1 S 5TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
5RESTORE_VALUE 7 0 R 5RESTORE_VALUE
5RESTORE_VALUE 8 1 R 5RESTORE_VALUE
5RESTORE_VALUE 6 6 S 5TO_START
# Go back to the start
5TO_START 0 0 R 5TO_START
5TO_START 1 1 R 5TO_START
5TO_START 6 6 R 5TO_START
5TO_START 5 5 S 5END



#
### LOAD S4 C
#


5END 5 5 S 6START

# Start of loading
6START 5 5 R 6TO_C_END_R
# To end of number C
6TO_C_END_R 0 0 R 6TO_C_END_R
6TO_C_END_R 1 1 R 6TO_C_END_R
6TO_C_END_R 2 2 R 6TO_C_END_R
6TO_C_END_R 3 3 R 6TO_C_END_R
6TO_C_END_R 4 4 R 6TO_C_END_R
6TO_C_END_R 10 10 L 6SET_TO_7

# Move to the start of number C, and set all values to 7
6SET_TO_7 0 7 L 6SET_TO_7
6SET_TO_7 1 7 L 6SET_TO_7
6SET_TO_7 4 4 L 6TO_MIDDLE_L
# Find the middle
6TO_MIDDLE_L 1 1 L 6TO_MIDDLE_L
6TO_MIDDLE_L 0 0 L 6TO_MIDDLE_L
6TO_MIDDLE_L 7 7 L 6TO_MIDDLE_L
6TO_MIDDLE_L 2 2 L 6TO_MIDDLE_L
6TO_MIDDLE_L 3 3 L 6TO_MIDDLE_L
6TO_MIDDLE_L 4 4 L 6TO_MIDDLE_L
6TO_MIDDLE_L 5 5 L 6TO_S1_END
# To end of S1
6TO_S1_END 6 6 L 6TO_S2_END
# To end of S2
6TO_S2_END 0 0 L 6TO_S2_END
6TO_S2_END 1 1 L 6TO_S2_END
6TO_S2_END 6 6 L 6TO_S3_END
# To end of S3
6TO_S3_END 0 0 L 6TO_S3_END
6TO_S3_END 1 1 L 6TO_S3_END
6TO_S3_END 6 6 L 6TO_S4_END
# To end of S4
6TO_S4_END 0 0 L 6TO_S4_END
6TO_S4_END 1 1 L 6TO_S4_END
6TO_S4_END 6 6 L 6COPY_VALUE
# Move Left until start of S4
# Copy the first non-7/8 value
6COPY_VALUE 0 7 R 6MOVE_ZERO
6COPY_VALUE 1 8 R 6MOVE_ONE
6COPY_VALUE 7 7 L 6COPY_VALUE
6COPY_VALUE 8 8 L 6COPY_VALUE
6COPY_VALUE 6 6 R 6RESTORE_VALUE

# Move a 0 to number C
6MOVE_ZERO 0 0 R 6MOVE_ZERO
6MOVE_ZERO 1 1 R 6MOVE_ZERO
6MOVE_ZERO 2 2 R 6MOVE_ZERO
6MOVE_ZERO 3 3 R 6MOVE_ZERO
6MOVE_ZERO 4 4 R 6MOVE_ZERO
6MOVE_ZERO 10 10 L 6MOVE_ZERO_2
6MOVE_ZERO 5 5 R 6MOVE_ZERO
6MOVE_ZERO 6 6 R 6MOVE_ZERO
6MOVE_ZERO 7 7 R 6MOVE_ZERO
6MOVE_ZERO 8 8 R 6MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
6MOVE_ZERO_2 0 0 L 6MOVE_ZERO_2
6MOVE_ZERO_2 1 1 L 6MOVE_ZERO_2
6MOVE_ZERO_2 7 0 S 6TO_MIDDLE_L
# Move a 1 to number C
6MOVE_ONE 0 0 R 6MOVE_ONE
6MOVE_ONE 1 1 R 6MOVE_ONE
6MOVE_ONE 2 2 R 6MOVE_ONE
6MOVE_ONE 3 3 R 6MOVE_ONE
6MOVE_ONE 4 4 R 6MOVE_ONE
6MOVE_ONE 10 10 L 6MOVE_ONE_2
6MOVE_ONE 5 5 R 6MOVE_ONE
6MOVE_ONE 6 6 R 6MOVE_ONE
6MOVE_ONE 7 7 R 6MOVE_ONE
6MOVE_ONE 8 8 R 6MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
6MOVE_ONE_2 0 0 L 6MOVE_ONE_2
6MOVE_ONE_2 1 1 L 6MOVE_ONE_2
6MOVE_ONE_2 7 1 S 6TO_MIDDLE_L
# Restore number C, translate 7 to 0 and 8 to 1
6RESTORE_VALUE 7 0 R 6RESTORE_VALUE
6RESTORE_VALUE 8 1 R 6RESTORE_VALUE
6RESTORE_VALUE 6 6 S 6TO_START
# Go back to the start
6TO_START 0 0 R 6TO_START
6TO_START 1 1 R 6TO_START
6TO_START 6 6 R 6TO_START
6TO_START 5 5 S 6END



#
### MUL
#


6END 5 5 S 7START

# Start of the binary multiplication
7START 5 5 R 7CLEAR_A

# Clear A
7CLEAR_A 1 0 R 7CLEAR_A
7CLEAR_A 0 0 R 7CLEAR_A
7CLEAR_A 2 2 R 7CLEAR_A
7CLEAR_A 3 3 R 7FIND_B_END

# Find the end of the B
7FIND_B_END 0 0 R 7FIND_B_END
7FIND_B_END 1 1 R 7FIND_B_END
7FIND_B_END 2 2 R 7FIND_B_END
7FIND_B_END 3 3 R 7FIND_B_END
7FIND_B_END 7 7 R 7FIND_B_END
7FIND_B_END 8 8 R 7FIND_B_END
7FIND_B_END 4 4 L 7CHECK_B

# Check last digit of B
# If last digit is 0, multiply C by 2
# If last digit is 1, Add C to A and then multiply C by 2
7CHECK_B 11 11 L 7CHECK_B
7CHECK_B 0 11 R 7SHIFT_C
7CHECK_B 1 11 R 7ADD_C_TO_A_0
7CHECK_B 3 3 R 7CLEAR_B

## Multiply C by shifting each bit to the left

# First go to end of C
7SHIFT_C 0 0 R 7SHIFT_C
7SHIFT_C 1 1 R 7SHIFT_C
7SHIFT_C 11 11 R 7SHIFT_C
7SHIFT_C 4 4 R 7SHIFT_C
7SHIFT_C 10 10 L 7SHIFT_C_ZERO

# Place a 0 and shift left
7SHIFT_C_ZERO 0 0 L 7SHIFT_C_ZERO
7SHIFT_C_ZERO 1 0 L 7SHIFT_C_ONE
7SHIFT_C_ZERO 4 4 L 7CHECK_B

# Place a 1 and shift left
7SHIFT_C_ONE 0 1 L 7SHIFT_C_ZERO
7SHIFT_C_ONE 1 1 L 7SHIFT_C_ONE
7SHIFT_C_ONE 4 4 L 7CHECK_B

## Add C to A

# First go to end of C
7ADD_C_TO_A_0 0 0 R 7ADD_C_TO_A_0
7ADD_C_TO_A_0 1 1 R 7ADD_C_TO_A_0
7ADD_C_TO_A_0 3 3 R 7ADD_C_TO_A_0
7ADD_C_TO_A_0 4 4 R 7ADD_C_TO_A_0
7ADD_C_TO_A_0 7 7 R 7ADD_C_TO_A_0
7ADD_C_TO_A_0 8 8 R 7ADD_C_TO_A_0
7ADD_C_TO_A_0 11 11 R 7ADD_C_TO_A_0
7ADD_C_TO_A_0 10 10 L 7ADD_C_TO_A_1

# Find first non-moved digit of C, and replace 0 with 7 and 1 with 8
7ADD_C_TO_A_1 0 7 L 7ADD_C_TO_A_ZERO
7ADD_C_TO_A_1 1 8 L 7ADD_C_TO_A_ONE
7ADD_C_TO_A_1 7 7 L 7ADD_C_TO_A_1
7ADD_C_TO_A_1 8 8 L 7ADD_C_TO_A_1
7ADD_C_TO_A_1 4 4 R 7ADD_C_TO_A_RESTORE_0

# Move a 0 from C to end of A
7ADD_C_TO_A_ZERO 0 0 L 7ADD_C_TO_A_ZERO
7ADD_C_TO_A_ZERO 1 1 L 7ADD_C_TO_A_ZERO
7ADD_C_TO_A_ZERO 4 4 L 7ADD_C_TO_A_ZERO
7ADD_C_TO_A_ZERO 7 7 L 7ADD_C_TO_A_ZERO
7ADD_C_TO_A_ZERO 8 8 L 7ADD_C_TO_A_ZERO
7ADD_C_TO_A_ZERO 11 11 L 7ADD_C_TO_A_ZERO
7ADD_C_TO_A_ZERO 3 3 L 7ADD_C_TO_A_ZERO_1

# Set the 0 in A to 7, except if its a 1
7ADD_C_TO_A_ZERO_1 7 7 L 7ADD_C_TO_A_ZERO_1
7ADD_C_TO_A_ZERO_1 8 8 L 7ADD_C_TO_A_ZERO_1
7ADD_C_TO_A_ZERO_1 0 7 R 7ADD_C_TO_A_0
7ADD_C_TO_A_ZERO_1 1 8 R 7ADD_C_TO_A_0

# Move a 1 from C to end of A
7ADD_C_TO_A_ONE 0 0 L 7ADD_C_TO_A_ONE
7ADD_C_TO_A_ONE 1 1 L 7ADD_C_TO_A_ONE
7ADD_C_TO_A_ONE 4 4 L 7ADD_C_TO_A_ONE
7ADD_C_TO_A_ONE 7 7 L 7ADD_C_TO_A_ONE
7ADD_C_TO_A_ONE 8 8 L 7ADD_C_TO_A_ONE
7ADD_C_TO_A_ONE 11 11 L 7ADD_C_TO_A_ONE
7ADD_C_TO_A_ONE 3 3 L 7ADD_C_TO_A_ONE_1

# Set the 1 in A to 8, unless if its already a 1
7ADD_C_TO_A_ONE_1 7 7 L 7ADD_C_TO_A_ONE_1
7ADD_C_TO_A_ONE_1 8 8 L 7ADD_C_TO_A_ONE_1
7ADD_C_TO_A_ONE_1 0 8 R 7ADD_C_TO_A_0
7ADD_C_TO_A_ONE_1 1 7 L 7ADD_C_TO_A_ONE_1_MOVE

# Move the 1 to the next digit, if its a 1, make it 0 and move to the next digit
7ADD_C_TO_A_ONE_1_MOVE 0 1 R 7ADD_C_TO_A_0
7ADD_C_TO_A_ONE_1_MOVE 1 0 L 7ADD_C_TO_A_ONE_1_MOVE

# Restore the number in C
7ADD_C_TO_A_RESTORE_0 7 0 R 7ADD_C_TO_A_RESTORE_0
7ADD_C_TO_A_RESTORE_0 8 1 R 7ADD_C_TO_A_RESTORE_0
7ADD_C_TO_A_RESTORE_0 10 10 L 7ADD_C_TO_A_RESTORE_1

# Move to the start of A
7ADD_C_TO_A_RESTORE_1 0 0 L 7ADD_C_TO_A_RESTORE_1
7ADD_C_TO_A_RESTORE_1 1 1 L 7ADD_C_TO_A_RESTORE_1
7ADD_C_TO_A_RESTORE_1 3 3 L 7ADD_C_TO_A_RESTORE_1
7ADD_C_TO_A_RESTORE_1 4 4 L 7ADD_C_TO_A_RESTORE_1
7ADD_C_TO_A_RESTORE_1 7 7 L 7ADD_C_TO_A_RESTORE_1
7ADD_C_TO_A_RESTORE_1 8 8 L 7ADD_C_TO_A_RESTORE_1
7ADD_C_TO_A_RESTORE_1 11 11 L 7ADD_C_TO_A_RESTORE_1
7ADD_C_TO_A_RESTORE_1 2 2 R 7ADD_C_TO_A_RESTORE_2

# Restore the number in A, and move to the end of B
7ADD_C_TO_A_RESTORE_2 0 0 R 7ADD_C_TO_A_RESTORE_2
7ADD_C_TO_A_RESTORE_2 1 1 R 7ADD_C_TO_A_RESTORE_2
7ADD_C_TO_A_RESTORE_2 11 11 R 7ADD_C_TO_A_RESTORE_2
7ADD_C_TO_A_RESTORE_2 3 3 R 7ADD_C_TO_A_RESTORE_2
7ADD_C_TO_A_RESTORE_2 7 0 R 7ADD_C_TO_A_RESTORE_2
7ADD_C_TO_A_RESTORE_2 8 1 R 7ADD_C_TO_A_RESTORE_2
7ADD_C_TO_A_RESTORE_2 4 4 L 7SHIFT_C

# Clear B, set all to 0
7CLEAR_B 11 0 R 7CLEAR_B
7CLEAR_B 4 4 L 7RETURN

# Return to the start of the program
7RETURN 0 0 L 7RETURN
7RETURN 1 1 L 7RETURN
7RETURN 2 2 L 7RETURN
7RETURN 3 3 L 7RETURN
7RETURN 5 5 S 7END


#
### STORE S5 A
#


7END 5 5 S 8START

8START 5 5 L 8TO_S1_END
# To end of S1
8TO_S1_END 6 6 L 8TO_S2_END
# To end of S2
8TO_S2_END 0 0 L 8TO_S2_END
8TO_S2_END 1 1 L 8TO_S2_END
8TO_S2_END 6 6 L 8TO_S3_END
# To end of S3
8TO_S3_END 0 0 L 8TO_S3_END
8TO_S3_END 1 1 L 8TO_S3_END
8TO_S3_END 6 6 L 8TO_S4_END
# To end of S4
8TO_S4_END 0 0 L 8TO_S4_END
8TO_S4_END 1 1 L 8TO_S4_END
8TO_S4_END 6 6 L 8TO_S5_END
# To end of S5
8TO_S5_END 0 0 L 8TO_S5_END
8TO_S5_END 1 1 L 8TO_S5_END
8TO_S5_END 6 6 L 8SET_TO_7

# Set all the values to 7 untill the start of S1
8SET_TO_7 0 7 L 8SET_TO_7
8SET_TO_7 1 7 L 8SET_TO_7
8SET_TO_7 6 9 R 8TO_MIDDLE_R
# Find the middle
8TO_MIDDLE_R 1 1 R 8TO_MIDDLE_R
8TO_MIDDLE_R 0 0 R 8TO_MIDDLE_R
8TO_MIDDLE_R 7 7 R 8TO_MIDDLE_R
8TO_MIDDLE_R 2 2 R 8TO_MIDDLE_R
8TO_MIDDLE_R 6 6 R 8TO_MIDDLE_R
8TO_MIDDLE_R 5 5 R 8COPY_VALUE
# Move Left until start of A
# Copy the first non-7/MovH8 value
8COPY_VALUE 0 7 L 8MOVE_ZERO
8COPY_VALUE 1 8 L 8MOVE_ONE
8COPY_VALUE 2 2 R 8COPY_VALUE
8COPY_VALUE 7 7 R 8COPY_VALUE
8COPY_VALUE 8 8 R 8COPY_VALUE
8COPY_VALUE 3 3 L 8RESTORE_VALUE

# Move a 0 to number 9
8MOVE_ZERO 0 0 L 8MOVE_ZERO
8MOVE_ZERO 1 1 L 8MOVE_ZERO
8MOVE_ZERO 2 2 L 8MOVE_ZERO
8MOVE_ZERO 3 3 L 8MOVE_ZERO
8MOVE_ZERO 4 4 L 8MOVE_ZERO
8MOVE_ZERO 9 9 R 8MOVE_ZERO_2
8MOVE_ZERO 5 5 L 8MOVE_ZERO
8MOVE_ZERO 6 6 L 8MOVE_ZERO
8MOVE_ZERO 7 7 L 8MOVE_ZERO
8MOVE_ZERO 8 8 L 8MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
8MOVE_ZERO_2 0 0 R 8MOVE_ZERO_2
8MOVE_ZERO_2 1 1 R 8MOVE_ZERO_2
8MOVE_ZERO_2 7 0 S 8TO_MIDDLE_R
# Move a 1 to number 9
8MOVE_ONE 0 0 L 8MOVE_ONE
8MOVE_ONE 1 1 L 8MOVE_ONE
8MOVE_ONE 2 2 L 8MOVE_ONE
8MOVE_ONE 3 3 L 8MOVE_ONE
8MOVE_ONE 4 4 L 8MOVE_ONE
8MOVE_ONE 9 9 R 8MOVE_ONE_2
8MOVE_ONE 5 5 L 8MOVE_ONE
8MOVE_ONE 6 6 L 8MOVE_ONE
8MOVE_ONE 7 7 L 8MOVE_ONE
8MOVE_ONE 8 8 L 8MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
8MOVE_ONE_2 0 0 R 8MOVE_ONE_2
8MOVE_ONE_2 1 1 R 8MOVE_ONE_2
8MOVE_ONE_2 7 1 S 8TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
8RESTORE_VALUE 7 0 L 8RESTORE_VALUE
8RESTORE_VALUE 8 1 L 8RESTORE_VALUE
8RESTORE_VALUE 2 2 L 8RESET_STORAGE_MARKER
# Reset 9 to 6
8RESET_STORAGE_MARKER 0 0 L 8RESET_STORAGE_MARKER
8RESET_STORAGE_MARKER 1 1 L 8RESET_STORAGE_MARKER
8RESET_STORAGE_MARKER 5 5 L 8RESET_STORAGE_MARKER
8RESET_STORAGE_MARKER 6 6 L 8RESET_STORAGE_MARKER
8RESET_STORAGE_MARKER 9 6 R 8RETURN_TO_MIDDLE
# Return to middle
8RETURN_TO_MIDDLE 0 0 R 8RETURN_TO_MIDDLE
8RETURN_TO_MIDDLE 1 1 R 8RETURN_TO_MIDDLE
8RETURN_TO_MIDDLE 6 6 R 8RETURN_TO_MIDDLE
8RETURN_TO_MIDDLE 5 5 S 8END


#
### LOAD S5 A
#


8END 5 5 S 9START

# Start of loading
9START 5 5 R 9TO_A_END_R
# To end of number A
9TO_A_END_R 0 0 R 9TO_A_END_R
9TO_A_END_R 1 1 R 9TO_A_END_R
9TO_A_END_R 2 2 R 9TO_A_END_R
9TO_A_END_R 3 3 L 9SET_TO_7

# Move to the start of number A, and set all values to 7
9SET_TO_7 0 7 L 9SET_TO_7
9SET_TO_7 1 7 L 9SET_TO_7
9SET_TO_7 2 2 L 9TO_MIDDLE_L
# Find the middle
9TO_MIDDLE_L 1 1 L 9TO_MIDDLE_L
9TO_MIDDLE_L 0 0 L 9TO_MIDDLE_L
9TO_MIDDLE_L 7 7 L 9TO_MIDDLE_L
9TO_MIDDLE_L 2 2 L 9TO_MIDDLE_L
9TO_MIDDLE_L 3 3 L 9TO_MIDDLE_L
9TO_MIDDLE_L 4 4 L 9TO_MIDDLE_L
9TO_MIDDLE_L 5 5 L 9TO_S1_END
# To end of S1
9TO_S1_END 6 6 L 9TO_S2_END
# To end of S2
9TO_S2_END 0 0 L 9TO_S2_END
9TO_S2_END 1 1 L 9TO_S2_END
9TO_S2_END 6 6 L 9TO_S3_END
# To end of S3
9TO_S3_END 0 0 L 9TO_S3_END
9TO_S3_END 1 1 L 9TO_S3_END
9TO_S3_END 6 6 L 9TO_S4_END
# To end of S4
9TO_S4_END 0 0 L 9TO_S4_END
9TO_S4_END 1 1 L 9TO_S4_END
9TO_S4_END 6 6 L 9TO_S5_END
# To end of S5
9TO_S5_END 0 0 L 9TO_S5_END
9TO_S5_END 1 1 L 9TO_S5_END
9TO_S5_END 6 6 L 9COPY_VALUE
# Move Left until start of S5
# Copy the first non-7/8 value
9COPY_VALUE 0 7 R 9MOVE_ZERO
9COPY_VALUE 1 8 R 9MOVE_ONE
9COPY_VALUE 7 7 L 9COPY_VALUE
9COPY_VALUE 8 8 L 9COPY_VALUE
9COPY_VALUE 6 6 R 9RESTORE_VALUE

# Move a 0 to number A
9MOVE_ZERO 0 0 R 9MOVE_ZERO
9MOVE_ZERO 1 1 R 9MOVE_ZERO
9MOVE_ZERO 2 2 R 9MOVE_ZERO
9MOVE_ZERO 3 3 L 9MOVE_ZERO_2
9MOVE_ZERO 4 4 R 9MOVE_ZERO
9MOVE_ZERO 5 5 R 9MOVE_ZERO
9MOVE_ZERO 6 6 R 9MOVE_ZERO
9MOVE_ZERO 7 7 R 9MOVE_ZERO
9MOVE_ZERO 8 8 R 9MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
9MOVE_ZERO_2 0 0 L 9MOVE_ZERO_2
9MOVE_ZERO_2 1 1 L 9MOVE_ZERO_2
9MOVE_ZERO_2 7 0 S 9TO_MIDDLE_L
# Move a 1 to number A
9MOVE_ONE 0 0 R 9MOVE_ONE
9MOVE_ONE 1 1 R 9MOVE_ONE
9MOVE_ONE 2 2 R 9MOVE_ONE
9MOVE_ONE 3 3 L 9MOVE_ONE_2
9MOVE_ONE 4 4 R 9MOVE_ONE
9MOVE_ONE 5 5 R 9MOVE_ONE
9MOVE_ONE 6 6 R 9MOVE_ONE
9MOVE_ONE 7 7 R 9MOVE_ONE
9MOVE_ONE 8 8 R 9MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
9MOVE_ONE_2 0 0 L 9MOVE_ONE_2
9MOVE_ONE_2 1 1 L 9MOVE_ONE_2
9MOVE_ONE_2 7 1 S 9TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
9RESTORE_VALUE 7 0 R 9RESTORE_VALUE
9RESTORE_VALUE 8 1 R 9RESTORE_VALUE
9RESTORE_VALUE 6 6 S 9TO_START
# Go back to the start
9TO_START 0 0 R 9TO_START
9TO_START 1 1 R 9TO_START
9TO_START 6 6 R 9TO_START
9TO_START 5 5 S 9END



#
### LOAD S6 B
#


9END 5 5 S 10START

# Start of loading
10START 5 5 R 10TO_B_END_R
# To end of number B
10TO_B_END_R 0 0 R 10TO_B_END_R
10TO_B_END_R 1 1 R 10TO_B_END_R
10TO_B_END_R 2 2 R 10TO_B_END_R
10TO_B_END_R 3 3 R 10TO_B_END_R
10TO_B_END_R 4 4 L 10SET_TO_7

# Move to the start of number B, and set all values to 7
10SET_TO_7 0 7 L 10SET_TO_7
10SET_TO_7 1 7 L 10SET_TO_7
10SET_TO_7 3 3 L 10TO_MIDDLE_L
# Find the middle
10TO_MIDDLE_L 1 1 L 10TO_MIDDLE_L
10TO_MIDDLE_L 0 0 L 10TO_MIDDLE_L
10TO_MIDDLE_L 7 7 L 10TO_MIDDLE_L
10TO_MIDDLE_L 2 2 L 10TO_MIDDLE_L
10TO_MIDDLE_L 3 3 L 10TO_MIDDLE_L
10TO_MIDDLE_L 4 4 L 10TO_MIDDLE_L
10TO_MIDDLE_L 5 5 L 10TO_S1_END
# To end of S1
10TO_S1_END 6 6 L 10TO_S2_END
# To end of S2
10TO_S2_END 0 0 L 10TO_S2_END
10TO_S2_END 1 1 L 10TO_S2_END
10TO_S2_END 6 6 L 10TO_S3_END
# To end of S3
10TO_S3_END 0 0 L 10TO_S3_END
10TO_S3_END 1 1 L 10TO_S3_END
10TO_S3_END 6 6 L 10TO_S4_END
# To end of S4
10TO_S4_END 0 0 L 10TO_S4_END
10TO_S4_END 1 1 L 10TO_S4_END
10TO_S4_END 6 6 L 10TO_S5_END
# To end of S5
10TO_S5_END 0 0 L 10TO_S5_END
10TO_S5_END 1 1 L 10TO_S5_END
10TO_S5_END 6 6 L 10TO_S6_END
# To end of S6
10TO_S6_END 0 0 L 10TO_S6_END
10TO_S6_END 1 1 L 10TO_S6_END
10TO_S6_END 6 6 L 10COPY_VALUE
# Move Left until start of S6
# Copy the first non-7/8 value
10COPY_VALUE 0 7 R 10MOVE_ZERO
10COPY_VALUE 1 8 R 10MOVE_ONE
10COPY_VALUE 7 7 L 10COPY_VALUE
10COPY_VALUE 8 8 L 10COPY_VALUE
10COPY_VALUE 6 6 R 10RESTORE_VALUE

# Move a 0 to number B
10MOVE_ZERO 0 0 R 10MOVE_ZERO
10MOVE_ZERO 1 1 R 10MOVE_ZERO
10MOVE_ZERO 2 2 R 10MOVE_ZERO
10MOVE_ZERO 3 3 R 10MOVE_ZERO
10MOVE_ZERO 4 4 L 10MOVE_ZERO_2
10MOVE_ZERO 5 5 R 10MOVE_ZERO
10MOVE_ZERO 6 6 R 10MOVE_ZERO
10MOVE_ZERO 7 7 R 10MOVE_ZERO
10MOVE_ZERO 8 8 R 10MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
10MOVE_ZERO_2 0 0 L 10MOVE_ZERO_2
10MOVE_ZERO_2 1 1 L 10MOVE_ZERO_2
10MOVE_ZERO_2 7 0 S 10TO_MIDDLE_L
# Move a 1 to number B
10MOVE_ONE 0 0 R 10MOVE_ONE
10MOVE_ONE 1 1 R 10MOVE_ONE
10MOVE_ONE 2 2 R 10MOVE_ONE
10MOVE_ONE 3 3 R 10MOVE_ONE
10MOVE_ONE 4 4 L 10MOVE_ONE_2
10MOVE_ONE 5 5 R 10MOVE_ONE
10MOVE_ONE 6 6 R 10MOVE_ONE
10MOVE_ONE 7 7 R 10MOVE_ONE
10MOVE_ONE 8 8 R 10MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
10MOVE_ONE_2 0 0 L 10MOVE_ONE_2
10MOVE_ONE_2 1 1 L 10MOVE_ONE_2
10MOVE_ONE_2 7 1 S 10TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
10RESTORE_VALUE 7 0 R 10RESTORE_VALUE
10RESTORE_VALUE 8 1 R 10RESTORE_VALUE
10RESTORE_VALUE 6 6 S 10TO_START
# Go back to the start
10TO_START 0 0 R 10TO_START
10TO_START 1 1 R 10TO_START
10TO_START 6 6 R 10TO_START
10TO_START 5 5 S 10END



#
### ADD
#


10END 5 5 S 11START

# Start of the addition program
11START 5 5 R 11FIND_B_END

# Find the end of the second number
11FIND_B_END 0 0 R 11FIND_B_END
11FIND_B_END 1 1 R 11FIND_B_END
11FIND_B_END 2 2 R 11FIND_B_END
11FIND_B_END 3 3 R 11FIND_B_END
11FIND_B_END 7 7 R 11FIND_B_END
11FIND_B_END 8 8 R 11FIND_B_END
11FIND_B_END 4 4 L 11ADD_DIGIT

# Find first non-added digit
11ADD_DIGIT 7 7 L 11ADD_DIGIT
11ADD_DIGIT 8 8 L 11ADD_DIGIT
11ADD_DIGIT 0 7 L 11ADD_DIGIT_ZERO
11ADD_DIGIT 1 7 L 11ADD_DIGIT_ONE
11ADD_DIGIT 3 3 R 11RESTORE

# Add a zero
11ADD_DIGIT_ZERO 0 0 L 11ADD_DIGIT_ZERO
11ADD_DIGIT_ZERO 1 1 L 11ADD_DIGIT_ZERO
11ADD_DIGIT_ZERO 3 3 L 11ADD_DIGIT_ZERO_1
11ADD_DIGIT_ZERO_1 7 7 L 11ADD_DIGIT_ZERO_1
11ADD_DIGIT_ZERO_1 8 8 L 11ADD_DIGIT_ZERO_1
11ADD_DIGIT_ZERO_1 0 7 L 11FIND_B_END
11ADD_DIGIT_ZERO_1 1 8 L 11FIND_B_END

# Add a one
11ADD_DIGIT_ONE 0 0 L 11ADD_DIGIT_ONE
11ADD_DIGIT_ONE 1 1 L 11ADD_DIGIT_ONE
11ADD_DIGIT_ONE 3 3 L 11ADD_DIGIT_ONE_1
11ADD_DIGIT_ONE_1 7 7 L 11ADD_DIGIT_ONE_1
11ADD_DIGIT_ONE_1 8 8 L 11ADD_DIGIT_ONE_1
11ADD_DIGIT_ONE_1 0 8 L 11FIND_B_END
11ADD_DIGIT_ONE_1 1 7 L 11ADD_DIGIT_ONE_2

11ADD_DIGIT_ONE_2 0 1 R 11FIND_B_END
11ADD_DIGIT_ONE_2 1 0 L 11ADD_DIGIT_ONE_2

# Return to the middle of the tape
11RESTORE 7 0 R 11RESTORE
11RESTORE 8 1 R 11RESTORE
11RESTORE 4 4 L 11RESTORE_1

11RESTORE_1 0 0 L 11RESTORE_1
11RESTORE_1 1 1 L 11RESTORE_1
11RESTORE_1 2 2 L 11RESTORE_1
11RESTORE_1 3 3 L 11RESTORE_1
11RESTORE_1 7 0 L 11RESTORE_1
11RESTORE_1 8 1 L 11RESTORE_1
11RESTORE_1 5 5 S 11END



#
### STORE S7 A
#


11END 5 5 S 12START

12START 5 5 L 12TO_S1_END
# To end of S1
12TO_S1_END 6 6 L 12TO_S2_END
# To end of S2
12TO_S2_END 0 0 L 12TO_S2_END
12TO_S2_END 1 1 L 12TO_S2_END
12TO_S2_END 6 6 L 12TO_S3_END
# To end of S3
12TO_S3_END 0 0 L 12TO_S3_END
12TO_S3_END 1 1 L 12TO_S3_END
12TO_S3_END 6 6 L 12TO_S4_END
# To end of S4
12TO_S4_END 0 0 L 12TO_S4_END
12TO_S4_END 1 1 L 12TO_S4_END
12TO_S4_END 6 6 L 12TO_S5_END
# To end of S5
12TO_S5_END 0 0 L 12TO_S5_END
12TO_S5_END 1 1 L 12TO_S5_END
12TO_S5_END 6 6 L 12TO_S6_END
# To end of S6
12TO_S6_END 0 0 L 12TO_S6_END
12TO_S6_END 1 1 L 12TO_S6_END
12TO_S6_END 6 6 L 12TO_S7_END
# To end of S7
12TO_S7_END 0 0 L 12TO_S7_END
12TO_S7_END 1 1 L 12TO_S7_END
12TO_S7_END 6 6 L 12SET_TO_7

# Set all the values to 7 untill the start of S1
12SET_TO_7 0 7 L 12SET_TO_7
12SET_TO_7 1 7 L 12SET_TO_7
12SET_TO_7 6 9 R 12TO_MIDDLE_R
# Find the middle
12TO_MIDDLE_R 1 1 R 12TO_MIDDLE_R
12TO_MIDDLE_R 0 0 R 12TO_MIDDLE_R
12TO_MIDDLE_R 7 7 R 12TO_MIDDLE_R
12TO_MIDDLE_R 2 2 R 12TO_MIDDLE_R
12TO_MIDDLE_R 6 6 R 12TO_MIDDLE_R
12TO_MIDDLE_R 5 5 R 12COPY_VALUE
# Move Left until start of A
# Copy the first non-7/MovH8 value
12COPY_VALUE 0 7 L 12MOVE_ZERO
12COPY_VALUE 1 8 L 12MOVE_ONE
12COPY_VALUE 2 2 R 12COPY_VALUE
12COPY_VALUE 7 7 R 12COPY_VALUE
12COPY_VALUE 8 8 R 12COPY_VALUE
12COPY_VALUE 3 3 L 12RESTORE_VALUE

# Move a 0 to number 9
12MOVE_ZERO 0 0 L 12MOVE_ZERO
12MOVE_ZERO 1 1 L 12MOVE_ZERO
12MOVE_ZERO 2 2 L 12MOVE_ZERO
12MOVE_ZERO 3 3 L 12MOVE_ZERO
12MOVE_ZERO 4 4 L 12MOVE_ZERO
12MOVE_ZERO 9 9 R 12MOVE_ZERO_2
12MOVE_ZERO 5 5 L 12MOVE_ZERO
12MOVE_ZERO 6 6 L 12MOVE_ZERO
12MOVE_ZERO 7 7 L 12MOVE_ZERO
12MOVE_ZERO 8 8 L 12MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
12MOVE_ZERO_2 0 0 R 12MOVE_ZERO_2
12MOVE_ZERO_2 1 1 R 12MOVE_ZERO_2
12MOVE_ZERO_2 7 0 S 12TO_MIDDLE_R
# Move a 1 to number 9
12MOVE_ONE 0 0 L 12MOVE_ONE
12MOVE_ONE 1 1 L 12MOVE_ONE
12MOVE_ONE 2 2 L 12MOVE_ONE
12MOVE_ONE 3 3 L 12MOVE_ONE
12MOVE_ONE 4 4 L 12MOVE_ONE
12MOVE_ONE 9 9 R 12MOVE_ONE_2
12MOVE_ONE 5 5 L 12MOVE_ONE
12MOVE_ONE 6 6 L 12MOVE_ONE
12MOVE_ONE 7 7 L 12MOVE_ONE
12MOVE_ONE 8 8 L 12MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
12MOVE_ONE_2 0 0 R 12MOVE_ONE_2
12MOVE_ONE_2 1 1 R 12MOVE_ONE_2
12MOVE_ONE_2 7 1 S 12TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
12RESTORE_VALUE 7 0 L 12RESTORE_VALUE
12RESTORE_VALUE 8 1 L 12RESTORE_VALUE
12RESTORE_VALUE 2 2 L 12RESET_STORAGE_MARKER
# Reset 9 to 6
12RESET_STORAGE_MARKER 0 0 L 12RESET_STORAGE_MARKER
12RESET_STORAGE_MARKER 1 1 L 12RESET_STORAGE_MARKER
12RESET_STORAGE_MARKER 5 5 L 12RESET_STORAGE_MARKER
12RESET_STORAGE_MARKER 6 6 L 12RESET_STORAGE_MARKER
12RESET_STORAGE_MARKER 9 6 R 12RETURN_TO_MIDDLE
# Return to middle
12RETURN_TO_MIDDLE 0 0 R 12RETURN_TO_MIDDLE
12RETURN_TO_MIDDLE 1 1 R 12RETURN_TO_MIDDLE
12RETURN_TO_MIDDLE 6 6 R 12RETURN_TO_MIDDLE
12RETURN_TO_MIDDLE 5 5 S 12END


#
### LOAD S7 A
#


12END 5 5 S 13START

# Start of loading
13START 5 5 R 13TO_A_END_R
# To end of number A
13TO_A_END_R 0 0 R 13TO_A_END_R
13TO_A_END_R 1 1 R 13TO_A_END_R
13TO_A_END_R 2 2 R 13TO_A_END_R
13TO_A_END_R 3 3 L 13SET_TO_7

# Move to the start of number A, and set all values to 7
13SET_TO_7 0 7 L 13SET_TO_7
13SET_TO_7 1 7 L 13SET_TO_7
13SET_TO_7 2 2 L 13TO_MIDDLE_L
# Find the middle
13TO_MIDDLE_L 1 1 L 13TO_MIDDLE_L
13TO_MIDDLE_L 0 0 L 13TO_MIDDLE_L
13TO_MIDDLE_L 7 7 L 13TO_MIDDLE_L
13TO_MIDDLE_L 2 2 L 13TO_MIDDLE_L
13TO_MIDDLE_L 3 3 L 13TO_MIDDLE_L
13TO_MIDDLE_L 4 4 L 13TO_MIDDLE_L
13TO_MIDDLE_L 5 5 L 13TO_S1_END
# To end of S1
13TO_S1_END 6 6 L 13TO_S2_END
# To end of S2
13TO_S2_END 0 0 L 13TO_S2_END
13TO_S2_END 1 1 L 13TO_S2_END
13TO_S2_END 6 6 L 13TO_S3_END
# To end of S3
13TO_S3_END 0 0 L 13TO_S3_END
13TO_S3_END 1 1 L 13TO_S3_END
13TO_S3_END 6 6 L 13TO_S4_END
# To end of S4
13TO_S4_END 0 0 L 13TO_S4_END
13TO_S4_END 1 1 L 13TO_S4_END
13TO_S4_END 6 6 L 13TO_S5_END
# To end of S5
13TO_S5_END 0 0 L 13TO_S5_END
13TO_S5_END 1 1 L 13TO_S5_END
13TO_S5_END 6 6 L 13TO_S6_END
# To end of S6
13TO_S6_END 0 0 L 13TO_S6_END
13TO_S6_END 1 1 L 13TO_S6_END
13TO_S6_END 6 6 L 13TO_S7_END
# To end of S7
13TO_S7_END 0 0 L 13TO_S7_END
13TO_S7_END 1 1 L 13TO_S7_END
13TO_S7_END 6 6 L 13COPY_VALUE
# Move Left until start of S7
# Copy the first non-7/8 value
13COPY_VALUE 0 7 R 13MOVE_ZERO
13COPY_VALUE 1 8 R 13MOVE_ONE
13COPY_VALUE 7 7 L 13COPY_VALUE
13COPY_VALUE 8 8 L 13COPY_VALUE
13COPY_VALUE 6 6 R 13RESTORE_VALUE

# Move a 0 to number A
13MOVE_ZERO 0 0 R 13MOVE_ZERO
13MOVE_ZERO 1 1 R 13MOVE_ZERO
13MOVE_ZERO 2 2 R 13MOVE_ZERO
13MOVE_ZERO 3 3 L 13MOVE_ZERO_2
13MOVE_ZERO 4 4 R 13MOVE_ZERO
13MOVE_ZERO 5 5 R 13MOVE_ZERO
13MOVE_ZERO 6 6 R 13MOVE_ZERO
13MOVE_ZERO 7 7 R 13MOVE_ZERO
13MOVE_ZERO 8 8 R 13MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
13MOVE_ZERO_2 0 0 L 13MOVE_ZERO_2
13MOVE_ZERO_2 1 1 L 13MOVE_ZERO_2
13MOVE_ZERO_2 7 0 S 13TO_MIDDLE_L
# Move a 1 to number A
13MOVE_ONE 0 0 R 13MOVE_ONE
13MOVE_ONE 1 1 R 13MOVE_ONE
13MOVE_ONE 2 2 R 13MOVE_ONE
13MOVE_ONE 3 3 L 13MOVE_ONE_2
13MOVE_ONE 4 4 R 13MOVE_ONE
13MOVE_ONE 5 5 R 13MOVE_ONE
13MOVE_ONE 6 6 R 13MOVE_ONE
13MOVE_ONE 7 7 R 13MOVE_ONE
13MOVE_ONE 8 8 R 13MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
13MOVE_ONE_2 0 0 L 13MOVE_ONE_2
13MOVE_ONE_2 1 1 L 13MOVE_ONE_2
13MOVE_ONE_2 7 1 S 13TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
13RESTORE_VALUE 7 0 R 13RESTORE_VALUE
13RESTORE_VALUE 8 1 R 13RESTORE_VALUE
13RESTORE_VALUE 6 6 S 13TO_START
# Go back to the start
13TO_START 0 0 R 13TO_START
13TO_START 1 1 R 13TO_START
13TO_START 6 6 R 13TO_START
13TO_START 5 5 S 13END



#
### LOAD S8 B
#


13END 5 5 S 14START

# Start of loading
14START 5 5 R 14TO_B_END_R
# To end of number B
14TO_B_END_R 0 0 R 14TO_B_END_R
14TO_B_END_R 1 1 R 14TO_B_END_R
14TO_B_END_R 2 2 R 14TO_B_END_R
14TO_B_END_R 3 3 R 14TO_B_END_R
14TO_B_END_R 4 4 L 14SET_TO_7

# Move to the start of number B, and set all values to 7
14SET_TO_7 0 7 L 14SET_TO_7
14SET_TO_7 1 7 L 14SET_TO_7
14SET_TO_7 3 3 L 14TO_MIDDLE_L
# Find the middle
14TO_MIDDLE_L 1 1 L 14TO_MIDDLE_L
14TO_MIDDLE_L 0 0 L 14TO_MIDDLE_L
14TO_MIDDLE_L 7 7 L 14TO_MIDDLE_L
14TO_MIDDLE_L 2 2 L 14TO_MIDDLE_L
14TO_MIDDLE_L 3 3 L 14TO_MIDDLE_L
14TO_MIDDLE_L 4 4 L 14TO_MIDDLE_L
14TO_MIDDLE_L 5 5 L 14TO_S1_END
# To end of S1
14TO_S1_END 6 6 L 14TO_S2_END
# To end of S2
14TO_S2_END 0 0 L 14TO_S2_END
14TO_S2_END 1 1 L 14TO_S2_END
14TO_S2_END 6 6 L 14TO_S3_END
# To end of S3
14TO_S3_END 0 0 L 14TO_S3_END
14TO_S3_END 1 1 L 14TO_S3_END
14TO_S3_END 6 6 L 14TO_S4_END
# To end of S4
14TO_S4_END 0 0 L 14TO_S4_END
14TO_S4_END 1 1 L 14TO_S4_END
14TO_S4_END 6 6 L 14TO_S5_END
# To end of S5
14TO_S5_END 0 0 L 14TO_S5_END
14TO_S5_END 1 1 L 14TO_S5_END
14TO_S5_END 6 6 L 14TO_S6_END
# To end of S6
14TO_S6_END 0 0 L 14TO_S6_END
14TO_S6_END 1 1 L 14TO_S6_END
14TO_S6_END 6 6 L 14TO_S7_END
# To end of S7
14TO_S7_END 0 0 L 14TO_S7_END
14TO_S7_END 1 1 L 14TO_S7_END
14TO_S7_END 6 6 L 14TO_S8_END
# To end of S8
14TO_S8_END 0 0 L 14TO_S8_END
14TO_S8_END 1 1 L 14TO_S8_END
14TO_S8_END 6 6 L 14COPY_VALUE
# Move Left until start of S8
# Copy the first non-7/8 value
14COPY_VALUE 0 7 R 14MOVE_ZERO
14COPY_VALUE 1 8 R 14MOVE_ONE
14COPY_VALUE 7 7 L 14COPY_VALUE
14COPY_VALUE 8 8 L 14COPY_VALUE
14COPY_VALUE 6 6 R 14RESTORE_VALUE

# Move a 0 to number B
14MOVE_ZERO 0 0 R 14MOVE_ZERO
14MOVE_ZERO 1 1 R 14MOVE_ZERO
14MOVE_ZERO 2 2 R 14MOVE_ZERO
14MOVE_ZERO 3 3 R 14MOVE_ZERO
14MOVE_ZERO 4 4 L 14MOVE_ZERO_2
14MOVE_ZERO 5 5 R 14MOVE_ZERO
14MOVE_ZERO 6 6 R 14MOVE_ZERO
14MOVE_ZERO 7 7 R 14MOVE_ZERO
14MOVE_ZERO 8 8 R 14MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
14MOVE_ZERO_2 0 0 L 14MOVE_ZERO_2
14MOVE_ZERO_2 1 1 L 14MOVE_ZERO_2
14MOVE_ZERO_2 7 0 S 14TO_MIDDLE_L
# Move a 1 to number B
14MOVE_ONE 0 0 R 14MOVE_ONE
14MOVE_ONE 1 1 R 14MOVE_ONE
14MOVE_ONE 2 2 R 14MOVE_ONE
14MOVE_ONE 3 3 R 14MOVE_ONE
14MOVE_ONE 4 4 L 14MOVE_ONE_2
14MOVE_ONE 5 5 R 14MOVE_ONE
14MOVE_ONE 6 6 R 14MOVE_ONE
14MOVE_ONE 7 7 R 14MOVE_ONE
14MOVE_ONE 8 8 R 14MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
14MOVE_ONE_2 0 0 L 14MOVE_ONE_2
14MOVE_ONE_2 1 1 L 14MOVE_ONE_2
14MOVE_ONE_2 7 1 S 14TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
14RESTORE_VALUE 7 0 R 14RESTORE_VALUE
14RESTORE_VALUE 8 1 R 14RESTORE_VALUE
14RESTORE_VALUE 6 6 S 14TO_START
# Go back to the start
14TO_START 0 0 R 14TO_START
14TO_START 1 1 R 14TO_START
14TO_START 6 6 R 14TO_START
14TO_START 5 5 S 14END



#
### SUB
#


14END 5 5 S 15START

 5 2 1 0 1 0 0 1 1 0 3 0 0 0 0 1 1 1 0 4

# Start of the subtraction program
15START 5 5 R 15FIND_B_END

# Find the end of the second number
15FIND_B_END 0 0 R 15FIND_B_END
15FIND_B_END 1 1 R 15FIND_B_END
15FIND_B_END 2 2 R 15FIND_B_END
15FIND_B_END 3 3 R 15FIND_B_END
15FIND_B_END 7 7 R 15FIND_B_END
15FIND_B_END 8 8 R 15FIND_B_END
15FIND_B_END 4 4 L 15SUB_DIGIT

# Find first non-subtracted digit
15SUB_DIGIT 7 7 L 15SUB_DIGIT
15SUB_DIGIT 8 8 L 15SUB_DIGIT
15SUB_DIGIT 0 7 L 15SUB_DIGIT_ZERO
15SUB_DIGIT 1 7 L 15SUB_DIGIT_ONE
15SUB_DIGIT 3 3 R 15RESTORE

# Subtract a zero
15SUB_DIGIT_ZERO 0 0 L 15SUB_DIGIT_ZERO
15SUB_DIGIT_ZERO 1 1 L 15SUB_DIGIT_ZERO
15SUB_DIGIT_ZERO 3 3 L 15SUB_DIGIT_ZERO_1

15SUB_DIGIT_ZERO_1 7 7 L 15SUB_DIGIT_ZERO_1
15SUB_DIGIT_ZERO_1 8 8 L 15SUB_DIGIT_ZERO_1
15SUB_DIGIT_ZERO_1 0 7 L 15FIND_B_END
15SUB_DIGIT_ZERO_1 1 8 R 15FIND_B_END

# Subtract a one
15SUB_DIGIT_ONE 0 0 L 15SUB_DIGIT_ONE
15SUB_DIGIT_ONE 1 1 L 15SUB_DIGIT_ONE
15SUB_DIGIT_ONE 3 3 L 15SUB_DIGIT_ONE_1

15SUB_DIGIT_ONE_1 7 7 L 15SUB_DIGIT_ONE_1
15SUB_DIGIT_ONE_1 8 8 L 15SUB_DIGIT_ONE_1
15SUB_DIGIT_ONE_1 0 8 L 15SUB_DIGIT_ONE_2
15SUB_DIGIT_ONE_1 1 7 R 15FIND_B_END

15SUB_DIGIT_ONE_2 1 0 R 15FIND_B_END
15SUB_DIGIT_ONE_2 0 1 L 15SUB_DIGIT_ONE_2

# Return to the middle of the tape
15RESTORE 7 0 R 15RESTORE
15RESTORE 8 1 R 15RESTORE
15RESTORE 4 4 L 15RESTORE_1

15RESTORE_1 0 0 L 15RESTORE_1
15RESTORE_1 1 1 L 15RESTORE_1
15RESTORE_1 3 3 L 15RESTORE_1
15RESTORE_1 2 2 L 15RESTORE_1
15RESTORE_1 7 0 L 15RESTORE_1
15RESTORE_1 8 1 L 15RESTORE_1
15RESTORE_1 5 5 S 15END


#
### ISZERO
#


15END 5 5 S 16START

# Start of the ISZERO program
16START 5 5 R 16START
16START 2 2 R 16CHECK_A

# Check for ones in A
16CHECK_A 0 0 R 16CHECK_A
16CHECK_A 1 0 R 16FOUND_ONE
16CHECK_A 3 3 L 16CHECK_A_1

# no ones found in A, set last digit of A to 1
16CHECK_A_1 0 1 L 16RETURN

# Found a 1 in A
16FOUND_ONE 0 0 R 16FOUND_ONE
16FOUND_ONE 1 0 R 16FOUND_ONE
16FOUND_ONE 3 3 L 16FOUND_ONE_1

# Found a 1 in A, return
16FOUND_ONE_1 0 0 L 16RETURN

# Return to middle
16RETURN 0 0 L 16RETURN
16RETURN 1 1 L 16RETURN
16RETURN 2 2 L 16RETURN
16RETURN 5 5 S 16END


#
### STORE S9 A
#


16END 5 5 S 17START

17START 5 5 L 17TO_S1_END
# To end of S1
17TO_S1_END 6 6 L 17TO_S2_END
# To end of S2
17TO_S2_END 0 0 L 17TO_S2_END
17TO_S2_END 1 1 L 17TO_S2_END
17TO_S2_END 6 6 L 17TO_S3_END
# To end of S3
17TO_S3_END 0 0 L 17TO_S3_END
17TO_S3_END 1 1 L 17TO_S3_END
17TO_S3_END 6 6 L 17TO_S4_END
# To end of S4
17TO_S4_END 0 0 L 17TO_S4_END
17TO_S4_END 1 1 L 17TO_S4_END
17TO_S4_END 6 6 L 17TO_S5_END
# To end of S5
17TO_S5_END 0 0 L 17TO_S5_END
17TO_S5_END 1 1 L 17TO_S5_END
17TO_S5_END 6 6 L 17TO_S6_END
# To end of S6
17TO_S6_END 0 0 L 17TO_S6_END
17TO_S6_END 1 1 L 17TO_S6_END
17TO_S6_END 6 6 L 17TO_S7_END
# To end of S7
17TO_S7_END 0 0 L 17TO_S7_END
17TO_S7_END 1 1 L 17TO_S7_END
17TO_S7_END 6 6 L 17TO_S8_END
# To end of S8
17TO_S8_END 0 0 L 17TO_S8_END
17TO_S8_END 1 1 L 17TO_S8_END
17TO_S8_END 6 6 L 17TO_S9_END
# To end of S9
17TO_S9_END 0 0 L 17TO_S9_END
17TO_S9_END 1 1 L 17TO_S9_END
17TO_S9_END 6 6 L 17SET_TO_7

# Set all the values to 7 untill the start of S1
17SET_TO_7 0 7 L 17SET_TO_7
17SET_TO_7 1 7 L 17SET_TO_7
17SET_TO_7 6 9 R 17TO_MIDDLE_R
# Find the middle
17TO_MIDDLE_R 1 1 R 17TO_MIDDLE_R
17TO_MIDDLE_R 0 0 R 17TO_MIDDLE_R
17TO_MIDDLE_R 7 7 R 17TO_MIDDLE_R
17TO_MIDDLE_R 2 2 R 17TO_MIDDLE_R
17TO_MIDDLE_R 6 6 R 17TO_MIDDLE_R
17TO_MIDDLE_R 5 5 R 17COPY_VALUE
# Move Left until start of A
# Copy the first non-7/MovH8 value
17COPY_VALUE 0 7 L 17MOVE_ZERO
17COPY_VALUE 1 8 L 17MOVE_ONE
17COPY_VALUE 2 2 R 17COPY_VALUE
17COPY_VALUE 7 7 R 17COPY_VALUE
17COPY_VALUE 8 8 R 17COPY_VALUE
17COPY_VALUE 3 3 L 17RESTORE_VALUE

# Move a 0 to number 9
17MOVE_ZERO 0 0 L 17MOVE_ZERO
17MOVE_ZERO 1 1 L 17MOVE_ZERO
17MOVE_ZERO 2 2 L 17MOVE_ZERO
17MOVE_ZERO 3 3 L 17MOVE_ZERO
17MOVE_ZERO 4 4 L 17MOVE_ZERO
17MOVE_ZERO 9 9 R 17MOVE_ZERO_2
17MOVE_ZERO 5 5 L 17MOVE_ZERO
17MOVE_ZERO 6 6 L 17MOVE_ZERO
17MOVE_ZERO 7 7 L 17MOVE_ZERO
17MOVE_ZERO 8 8 L 17MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
17MOVE_ZERO_2 0 0 R 17MOVE_ZERO_2
17MOVE_ZERO_2 1 1 R 17MOVE_ZERO_2
17MOVE_ZERO_2 7 0 S 17TO_MIDDLE_R
# Move a 1 to number 9
17MOVE_ONE 0 0 L 17MOVE_ONE
17MOVE_ONE 1 1 L 17MOVE_ONE
17MOVE_ONE 2 2 L 17MOVE_ONE
17MOVE_ONE 3 3 L 17MOVE_ONE
17MOVE_ONE 4 4 L 17MOVE_ONE
17MOVE_ONE 9 9 R 17MOVE_ONE_2
17MOVE_ONE 5 5 L 17MOVE_ONE
17MOVE_ONE 6 6 L 17MOVE_ONE
17MOVE_ONE 7 7 L 17MOVE_ONE
17MOVE_ONE 8 8 L 17MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
17MOVE_ONE_2 0 0 R 17MOVE_ONE_2
17MOVE_ONE_2 1 1 R 17MOVE_ONE_2
17MOVE_ONE_2 7 1 S 17TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
17RESTORE_VALUE 7 0 L 17RESTORE_VALUE
17RESTORE_VALUE 8 1 L 17RESTORE_VALUE
17RESTORE_VALUE 2 2 L 17RESET_STORAGE_MARKER
# Reset 9 to 6
17RESET_STORAGE_MARKER 0 0 L 17RESET_STORAGE_MARKER
17RESET_STORAGE_MARKER 1 1 L 17RESET_STORAGE_MARKER
17RESET_STORAGE_MARKER 5 5 L 17RESET_STORAGE_MARKER
17RESET_STORAGE_MARKER 6 6 L 17RESET_STORAGE_MARKER
17RESET_STORAGE_MARKER 9 6 R 17RETURN_TO_MIDDLE
# Return to middle
17RETURN_TO_MIDDLE 0 0 R 17RETURN_TO_MIDDLE
17RETURN_TO_MIDDLE 1 1 R 17RETURN_TO_MIDDLE
17RETURN_TO_MIDDLE 6 6 R 17RETURN_TO_MIDDLE
17RETURN_TO_MIDDLE 5 5 S 17END


#
### LOAD S9 A
#


17END 5 5 S 18START

# Start of loading
18START 5 5 R 18TO_A_END_R
# To end of number A
18TO_A_END_R 0 0 R 18TO_A_END_R
18TO_A_END_R 1 1 R 18TO_A_END_R
18TO_A_END_R 2 2 R 18TO_A_END_R
18TO_A_END_R 3 3 L 18SET_TO_7

# Move to the start of number A, and set all values to 7
18SET_TO_7 0 7 L 18SET_TO_7
18SET_TO_7 1 7 L 18SET_TO_7
18SET_TO_7 2 2 L 18TO_MIDDLE_L
# Find the middle
18TO_MIDDLE_L 1 1 L 18TO_MIDDLE_L
18TO_MIDDLE_L 0 0 L 18TO_MIDDLE_L
18TO_MIDDLE_L 7 7 L 18TO_MIDDLE_L
18TO_MIDDLE_L 2 2 L 18TO_MIDDLE_L
18TO_MIDDLE_L 3 3 L 18TO_MIDDLE_L
18TO_MIDDLE_L 4 4 L 18TO_MIDDLE_L
18TO_MIDDLE_L 5 5 L 18TO_S1_END
# To end of S1
18TO_S1_END 6 6 L 18TO_S2_END
# To end of S2
18TO_S2_END 0 0 L 18TO_S2_END
18TO_S2_END 1 1 L 18TO_S2_END
18TO_S2_END 6 6 L 18TO_S3_END
# To end of S3
18TO_S3_END 0 0 L 18TO_S3_END
18TO_S3_END 1 1 L 18TO_S3_END
18TO_S3_END 6 6 L 18TO_S4_END
# To end of S4
18TO_S4_END 0 0 L 18TO_S4_END
18TO_S4_END 1 1 L 18TO_S4_END
18TO_S4_END 6 6 L 18TO_S5_END
# To end of S5
18TO_S5_END 0 0 L 18TO_S5_END
18TO_S5_END 1 1 L 18TO_S5_END
18TO_S5_END 6 6 L 18TO_S6_END
# To end of S6
18TO_S6_END 0 0 L 18TO_S6_END
18TO_S6_END 1 1 L 18TO_S6_END
18TO_S6_END 6 6 L 18TO_S7_END
# To end of S7
18TO_S7_END 0 0 L 18TO_S7_END
18TO_S7_END 1 1 L 18TO_S7_END
18TO_S7_END 6 6 L 18TO_S8_END
# To end of S8
18TO_S8_END 0 0 L 18TO_S8_END
18TO_S8_END 1 1 L 18TO_S8_END
18TO_S8_END 6 6 L 18TO_S9_END
# To end of S9
18TO_S9_END 0 0 L 18TO_S9_END
18TO_S9_END 1 1 L 18TO_S9_END
18TO_S9_END 6 6 L 18COPY_VALUE
# Move Left until start of S9
# Copy the first non-7/8 value
18COPY_VALUE 0 7 R 18MOVE_ZERO
18COPY_VALUE 1 8 R 18MOVE_ONE
18COPY_VALUE 7 7 L 18COPY_VALUE
18COPY_VALUE 8 8 L 18COPY_VALUE
18COPY_VALUE 6 6 R 18RESTORE_VALUE

# Move a 0 to number A
18MOVE_ZERO 0 0 R 18MOVE_ZERO
18MOVE_ZERO 1 1 R 18MOVE_ZERO
18MOVE_ZERO 2 2 R 18MOVE_ZERO
18MOVE_ZERO 3 3 L 18MOVE_ZERO_2
18MOVE_ZERO 4 4 R 18MOVE_ZERO
18MOVE_ZERO 5 5 R 18MOVE_ZERO
18MOVE_ZERO 6 6 R 18MOVE_ZERO
18MOVE_ZERO 7 7 R 18MOVE_ZERO
18MOVE_ZERO 8 8 R 18MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
18MOVE_ZERO_2 0 0 L 18MOVE_ZERO_2
18MOVE_ZERO_2 1 1 L 18MOVE_ZERO_2
18MOVE_ZERO_2 7 0 S 18TO_MIDDLE_L
# Move a 1 to number A
18MOVE_ONE 0 0 R 18MOVE_ONE
18MOVE_ONE 1 1 R 18MOVE_ONE
18MOVE_ONE 2 2 R 18MOVE_ONE
18MOVE_ONE 3 3 L 18MOVE_ONE_2
18MOVE_ONE 4 4 R 18MOVE_ONE
18MOVE_ONE 5 5 R 18MOVE_ONE
18MOVE_ONE 6 6 R 18MOVE_ONE
18MOVE_ONE 7 7 R 18MOVE_ONE
18MOVE_ONE 8 8 R 18MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
18MOVE_ONE_2 0 0 L 18MOVE_ONE_2
18MOVE_ONE_2 1 1 L 18MOVE_ONE_2
18MOVE_ONE_2 7 1 S 18TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
18RESTORE_VALUE 7 0 R 18RESTORE_VALUE
18RESTORE_VALUE 8 1 R 18RESTORE_VALUE
18RESTORE_VALUE 6 6 S 18TO_START
# Go back to the start
18TO_START 0 0 R 18TO_START
18TO_START 1 1 R 18TO_START
18TO_START 6 6 R 18TO_START
18TO_START 5 5 S 18END



#
### JNZ L1
#


18END 5 5 S 19START
19START 5 5 S LABEL_L1

#
### JMP L2
#


19END 5 5 S 20START
20START 5 5 S LABEL_L2

#
### L1:
#

LABEL_L1 5 5 S END_21

#
### LOAD S7 A
#


21END 5 5 S 22START

# Start of loading
22START 5 5 R 22TO_A_END_R
# To end of number A
22TO_A_END_R 0 0 R 22TO_A_END_R
22TO_A_END_R 1 1 R 22TO_A_END_R
22TO_A_END_R 2 2 R 22TO_A_END_R
22TO_A_END_R 3 3 L 22SET_TO_7

# Move to the start of number A, and set all values to 7
22SET_TO_7 0 7 L 22SET_TO_7
22SET_TO_7 1 7 L 22SET_TO_7
22SET_TO_7 2 2 L 22TO_MIDDLE_L
# Find the middle
22TO_MIDDLE_L 1 1 L 22TO_MIDDLE_L
22TO_MIDDLE_L 0 0 L 22TO_MIDDLE_L
22TO_MIDDLE_L 7 7 L 22TO_MIDDLE_L
22TO_MIDDLE_L 2 2 L 22TO_MIDDLE_L
22TO_MIDDLE_L 3 3 L 22TO_MIDDLE_L
22TO_MIDDLE_L 4 4 L 22TO_MIDDLE_L
22TO_MIDDLE_L 5 5 L 22TO_S1_END
# To end of S1
22TO_S1_END 6 6 L 22TO_S2_END
# To end of S2
22TO_S2_END 0 0 L 22TO_S2_END
22TO_S2_END 1 1 L 22TO_S2_END
22TO_S2_END 6 6 L 22TO_S3_END
# To end of S3
22TO_S3_END 0 0 L 22TO_S3_END
22TO_S3_END 1 1 L 22TO_S3_END
22TO_S3_END 6 6 L 22TO_S4_END
# To end of S4
22TO_S4_END 0 0 L 22TO_S4_END
22TO_S4_END 1 1 L 22TO_S4_END
22TO_S4_END 6 6 L 22TO_S5_END
# To end of S5
22TO_S5_END 0 0 L 22TO_S5_END
22TO_S5_END 1 1 L 22TO_S5_END
22TO_S5_END 6 6 L 22TO_S6_END
# To end of S6
22TO_S6_END 0 0 L 22TO_S6_END
22TO_S6_END 1 1 L 22TO_S6_END
22TO_S6_END 6 6 L 22TO_S7_END
# To end of S7
22TO_S7_END 0 0 L 22TO_S7_END
22TO_S7_END 1 1 L 22TO_S7_END
22TO_S7_END 6 6 L 22COPY_VALUE
# Move Left until start of S7
# Copy the first non-7/8 value
22COPY_VALUE 0 7 R 22MOVE_ZERO
22COPY_VALUE 1 8 R 22MOVE_ONE
22COPY_VALUE 7 7 L 22COPY_VALUE
22COPY_VALUE 8 8 L 22COPY_VALUE
22COPY_VALUE 6 6 R 22RESTORE_VALUE

# Move a 0 to number A
22MOVE_ZERO 0 0 R 22MOVE_ZERO
22MOVE_ZERO 1 1 R 22MOVE_ZERO
22MOVE_ZERO 2 2 R 22MOVE_ZERO
22MOVE_ZERO 3 3 L 22MOVE_ZERO_2
22MOVE_ZERO 4 4 R 22MOVE_ZERO
22MOVE_ZERO 5 5 R 22MOVE_ZERO
22MOVE_ZERO 6 6 R 22MOVE_ZERO
22MOVE_ZERO 7 7 R 22MOVE_ZERO
22MOVE_ZERO 8 8 R 22MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
22MOVE_ZERO_2 0 0 L 22MOVE_ZERO_2
22MOVE_ZERO_2 1 1 L 22MOVE_ZERO_2
22MOVE_ZERO_2 7 0 S 22TO_MIDDLE_L
# Move a 1 to number A
22MOVE_ONE 0 0 R 22MOVE_ONE
22MOVE_ONE 1 1 R 22MOVE_ONE
22MOVE_ONE 2 2 R 22MOVE_ONE
22MOVE_ONE 3 3 L 22MOVE_ONE_2
22MOVE_ONE 4 4 R 22MOVE_ONE
22MOVE_ONE 5 5 R 22MOVE_ONE
22MOVE_ONE 6 6 R 22MOVE_ONE
22MOVE_ONE 7 7 R 22MOVE_ONE
22MOVE_ONE 8 8 R 22MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
22MOVE_ONE_2 0 0 L 22MOVE_ONE_2
22MOVE_ONE_2 1 1 L 22MOVE_ONE_2
22MOVE_ONE_2 7 1 S 22TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
22RESTORE_VALUE 7 0 R 22RESTORE_VALUE
22RESTORE_VALUE 8 1 R 22RESTORE_VALUE
22RESTORE_VALUE 6 6 S 22TO_START
# Go back to the start
22TO_START 0 0 R 22TO_START
22TO_START 1 1 R 22TO_START
22TO_START 6 6 R 22TO_START
22TO_START 5 5 S 22END



#
### LOAD S11 B
#


22END 5 5 S 23START

# Start of loading
23START 5 5 R 23TO_B_END_R
# To end of number B
23TO_B_END_R 0 0 R 23TO_B_END_R
23TO_B_END_R 1 1 R 23TO_B_END_R
23TO_B_END_R 2 2 R 23TO_B_END_R
23TO_B_END_R 3 3 R 23TO_B_END_R
23TO_B_END_R 4 4 L 23SET_TO_7

# Move to the start of number B, and set all values to 7
23SET_TO_7 0 7 L 23SET_TO_7
23SET_TO_7 1 7 L 23SET_TO_7
23SET_TO_7 3 3 L 23TO_MIDDLE_L
# Find the middle
23TO_MIDDLE_L 1 1 L 23TO_MIDDLE_L
23TO_MIDDLE_L 0 0 L 23TO_MIDDLE_L
23TO_MIDDLE_L 7 7 L 23TO_MIDDLE_L
23TO_MIDDLE_L 2 2 L 23TO_MIDDLE_L
23TO_MIDDLE_L 3 3 L 23TO_MIDDLE_L
23TO_MIDDLE_L 4 4 L 23TO_MIDDLE_L
23TO_MIDDLE_L 5 5 L 23TO_S1_END
# To end of S1
23TO_S1_END 6 6 L 23TO_S2_END
# To end of S2
23TO_S2_END 0 0 L 23TO_S2_END
23TO_S2_END 1 1 L 23TO_S2_END
23TO_S2_END 6 6 L 23TO_S3_END
# To end of S3
23TO_S3_END 0 0 L 23TO_S3_END
23TO_S3_END 1 1 L 23TO_S3_END
23TO_S3_END 6 6 L 23TO_S4_END
# To end of S4
23TO_S4_END 0 0 L 23TO_S4_END
23TO_S4_END 1 1 L 23TO_S4_END
23TO_S4_END 6 6 L 23TO_S5_END
# To end of S5
23TO_S5_END 0 0 L 23TO_S5_END
23TO_S5_END 1 1 L 23TO_S5_END
23TO_S5_END 6 6 L 23TO_S6_END
# To end of S6
23TO_S6_END 0 0 L 23TO_S6_END
23TO_S6_END 1 1 L 23TO_S6_END
23TO_S6_END 6 6 L 23TO_S7_END
# To end of S7
23TO_S7_END 0 0 L 23TO_S7_END
23TO_S7_END 1 1 L 23TO_S7_END
23TO_S7_END 6 6 L 23TO_S8_END
# To end of S8
23TO_S8_END 0 0 L 23TO_S8_END
23TO_S8_END 1 1 L 23TO_S8_END
23TO_S8_END 6 6 L 23TO_S9_END
# To end of S9
23TO_S9_END 0 0 L 23TO_S9_END
23TO_S9_END 1 1 L 23TO_S9_END
23TO_S9_END 6 6 L 23TO_S10_END
# To end of S10
23TO_S10_END 0 0 L 23TO_S10_END
23TO_S10_END 1 1 L 23TO_S10_END
23TO_S10_END 6 6 L 23TO_S11_END
# To end of S11
23TO_S11_END 0 0 L 23TO_S11_END
23TO_S11_END 1 1 L 23TO_S11_END
23TO_S11_END 6 6 L 23COPY_VALUE
# Move Left until start of S11
# Copy the first non-7/8 value
23COPY_VALUE 0 7 R 23MOVE_ZERO
23COPY_VALUE 1 8 R 23MOVE_ONE
23COPY_VALUE 7 7 L 23COPY_VALUE
23COPY_VALUE 8 8 L 23COPY_VALUE
23COPY_VALUE 6 6 R 23RESTORE_VALUE

# Move a 0 to number B
23MOVE_ZERO 0 0 R 23MOVE_ZERO
23MOVE_ZERO 1 1 R 23MOVE_ZERO
23MOVE_ZERO 2 2 R 23MOVE_ZERO
23MOVE_ZERO 3 3 R 23MOVE_ZERO
23MOVE_ZERO 4 4 L 23MOVE_ZERO_2
23MOVE_ZERO 5 5 R 23MOVE_ZERO
23MOVE_ZERO 6 6 R 23MOVE_ZERO
23MOVE_ZERO 7 7 R 23MOVE_ZERO
23MOVE_ZERO 8 8 R 23MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
23MOVE_ZERO_2 0 0 L 23MOVE_ZERO_2
23MOVE_ZERO_2 1 1 L 23MOVE_ZERO_2
23MOVE_ZERO_2 7 0 S 23TO_MIDDLE_L
# Move a 1 to number B
23MOVE_ONE 0 0 R 23MOVE_ONE
23MOVE_ONE 1 1 R 23MOVE_ONE
23MOVE_ONE 2 2 R 23MOVE_ONE
23MOVE_ONE 3 3 R 23MOVE_ONE
23MOVE_ONE 4 4 L 23MOVE_ONE_2
23MOVE_ONE 5 5 R 23MOVE_ONE
23MOVE_ONE 6 6 R 23MOVE_ONE
23MOVE_ONE 7 7 R 23MOVE_ONE
23MOVE_ONE 8 8 R 23MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
23MOVE_ONE_2 0 0 L 23MOVE_ONE_2
23MOVE_ONE_2 1 1 L 23MOVE_ONE_2
23MOVE_ONE_2 7 1 S 23TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
23RESTORE_VALUE 7 0 R 23RESTORE_VALUE
23RESTORE_VALUE 8 1 R 23RESTORE_VALUE
23RESTORE_VALUE 6 6 S 23TO_START
# Go back to the start
23TO_START 0 0 R 23TO_START
23TO_START 1 1 R 23TO_START
23TO_START 6 6 R 23TO_START
23TO_START 5 5 S 23END



#
### ADD
#


23END 5 5 S 24START

# Start of the addition program
24START 5 5 R 24FIND_B_END

# Find the end of the second number
24FIND_B_END 0 0 R 24FIND_B_END
24FIND_B_END 1 1 R 24FIND_B_END
24FIND_B_END 2 2 R 24FIND_B_END
24FIND_B_END 3 3 R 24FIND_B_END
24FIND_B_END 7 7 R 24FIND_B_END
24FIND_B_END 8 8 R 24FIND_B_END
24FIND_B_END 4 4 L 24ADD_DIGIT

# Find first non-added digit
24ADD_DIGIT 7 7 L 24ADD_DIGIT
24ADD_DIGIT 8 8 L 24ADD_DIGIT
24ADD_DIGIT 0 7 L 24ADD_DIGIT_ZERO
24ADD_DIGIT 1 7 L 24ADD_DIGIT_ONE
24ADD_DIGIT 3 3 R 24RESTORE

# Add a zero
24ADD_DIGIT_ZERO 0 0 L 24ADD_DIGIT_ZERO
24ADD_DIGIT_ZERO 1 1 L 24ADD_DIGIT_ZERO
24ADD_DIGIT_ZERO 3 3 L 24ADD_DIGIT_ZERO_1
24ADD_DIGIT_ZERO_1 7 7 L 24ADD_DIGIT_ZERO_1
24ADD_DIGIT_ZERO_1 8 8 L 24ADD_DIGIT_ZERO_1
24ADD_DIGIT_ZERO_1 0 7 L 24FIND_B_END
24ADD_DIGIT_ZERO_1 1 8 L 24FIND_B_END

# Add a one
24ADD_DIGIT_ONE 0 0 L 24ADD_DIGIT_ONE
24ADD_DIGIT_ONE 1 1 L 24ADD_DIGIT_ONE
24ADD_DIGIT_ONE 3 3 L 24ADD_DIGIT_ONE_1
24ADD_DIGIT_ONE_1 7 7 L 24ADD_DIGIT_ONE_1
24ADD_DIGIT_ONE_1 8 8 L 24ADD_DIGIT_ONE_1
24ADD_DIGIT_ONE_1 0 8 L 24FIND_B_END
24ADD_DIGIT_ONE_1 1 7 L 24ADD_DIGIT_ONE_2

24ADD_DIGIT_ONE_2 0 1 R 24FIND_B_END
24ADD_DIGIT_ONE_2 1 0 L 24ADD_DIGIT_ONE_2

# Return to the middle of the tape
24RESTORE 7 0 R 24RESTORE
24RESTORE 8 1 R 24RESTORE
24RESTORE 4 4 L 24RESTORE_1

24RESTORE_1 0 0 L 24RESTORE_1
24RESTORE_1 1 1 L 24RESTORE_1
24RESTORE_1 2 2 L 24RESTORE_1
24RESTORE_1 3 3 L 24RESTORE_1
24RESTORE_1 7 0 L 24RESTORE_1
24RESTORE_1 8 1 L 24RESTORE_1
24RESTORE_1 5 5 S 24END



#
### STORE S12 A
#


24END 5 5 S 25START

25START 5 5 L 25TO_S1_END
# To end of S1
25TO_S1_END 6 6 L 25TO_S2_END
# To end of S2
25TO_S2_END 0 0 L 25TO_S2_END
25TO_S2_END 1 1 L 25TO_S2_END
25TO_S2_END 6 6 L 25TO_S3_END
# To end of S3
25TO_S3_END 0 0 L 25TO_S3_END
25TO_S3_END 1 1 L 25TO_S3_END
25TO_S3_END 6 6 L 25TO_S4_END
# To end of S4
25TO_S4_END 0 0 L 25TO_S4_END
25TO_S4_END 1 1 L 25TO_S4_END
25TO_S4_END 6 6 L 25TO_S5_END
# To end of S5
25TO_S5_END 0 0 L 25TO_S5_END
25TO_S5_END 1 1 L 25TO_S5_END
25TO_S5_END 6 6 L 25TO_S6_END
# To end of S6
25TO_S6_END 0 0 L 25TO_S6_END
25TO_S6_END 1 1 L 25TO_S6_END
25TO_S6_END 6 6 L 25TO_S7_END
# To end of S7
25TO_S7_END 0 0 L 25TO_S7_END
25TO_S7_END 1 1 L 25TO_S7_END
25TO_S7_END 6 6 L 25TO_S8_END
# To end of S8
25TO_S8_END 0 0 L 25TO_S8_END
25TO_S8_END 1 1 L 25TO_S8_END
25TO_S8_END 6 6 L 25TO_S9_END
# To end of S9
25TO_S9_END 0 0 L 25TO_S9_END
25TO_S9_END 1 1 L 25TO_S9_END
25TO_S9_END 6 6 L 25TO_S10_END
# To end of S10
25TO_S10_END 0 0 L 25TO_S10_END
25TO_S10_END 1 1 L 25TO_S10_END
25TO_S10_END 6 6 L 25TO_S11_END
# To end of S11
25TO_S11_END 0 0 L 25TO_S11_END
25TO_S11_END 1 1 L 25TO_S11_END
25TO_S11_END 6 6 L 25TO_S12_END
# To end of S12
25TO_S12_END 0 0 L 25TO_S12_END
25TO_S12_END 1 1 L 25TO_S12_END
25TO_S12_END 6 6 L 25SET_TO_7

# Set all the values to 7 untill the start of S1
25SET_TO_7 0 7 L 25SET_TO_7
25SET_TO_7 1 7 L 25SET_TO_7
25SET_TO_7 6 9 R 25TO_MIDDLE_R
# Find the middle
25TO_MIDDLE_R 1 1 R 25TO_MIDDLE_R
25TO_MIDDLE_R 0 0 R 25TO_MIDDLE_R
25TO_MIDDLE_R 7 7 R 25TO_MIDDLE_R
25TO_MIDDLE_R 2 2 R 25TO_MIDDLE_R
25TO_MIDDLE_R 6 6 R 25TO_MIDDLE_R
25TO_MIDDLE_R 5 5 R 25COPY_VALUE
# Move Left until start of A
# Copy the first non-7/MovH8 value
25COPY_VALUE 0 7 L 25MOVE_ZERO
25COPY_VALUE 1 8 L 25MOVE_ONE
25COPY_VALUE 2 2 R 25COPY_VALUE
25COPY_VALUE 7 7 R 25COPY_VALUE
25COPY_VALUE 8 8 R 25COPY_VALUE
25COPY_VALUE 3 3 L 25RESTORE_VALUE

# Move a 0 to number 9
25MOVE_ZERO 0 0 L 25MOVE_ZERO
25MOVE_ZERO 1 1 L 25MOVE_ZERO
25MOVE_ZERO 2 2 L 25MOVE_ZERO
25MOVE_ZERO 3 3 L 25MOVE_ZERO
25MOVE_ZERO 4 4 L 25MOVE_ZERO
25MOVE_ZERO 9 9 R 25MOVE_ZERO_2
25MOVE_ZERO 5 5 L 25MOVE_ZERO
25MOVE_ZERO 6 6 L 25MOVE_ZERO
25MOVE_ZERO 7 7 L 25MOVE_ZERO
25MOVE_ZERO 8 8 L 25MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
25MOVE_ZERO_2 0 0 R 25MOVE_ZERO_2
25MOVE_ZERO_2 1 1 R 25MOVE_ZERO_2
25MOVE_ZERO_2 7 0 S 25TO_MIDDLE_R
# Move a 1 to number 9
25MOVE_ONE 0 0 L 25MOVE_ONE
25MOVE_ONE 1 1 L 25MOVE_ONE
25MOVE_ONE 2 2 L 25MOVE_ONE
25MOVE_ONE 3 3 L 25MOVE_ONE
25MOVE_ONE 4 4 L 25MOVE_ONE
25MOVE_ONE 9 9 R 25MOVE_ONE_2
25MOVE_ONE 5 5 L 25MOVE_ONE
25MOVE_ONE 6 6 L 25MOVE_ONE
25MOVE_ONE 7 7 L 25MOVE_ONE
25MOVE_ONE 8 8 L 25MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
25MOVE_ONE_2 0 0 R 25MOVE_ONE_2
25MOVE_ONE_2 1 1 R 25MOVE_ONE_2
25MOVE_ONE_2 7 1 S 25TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
25RESTORE_VALUE 7 0 L 25RESTORE_VALUE
25RESTORE_VALUE 8 1 L 25RESTORE_VALUE
25RESTORE_VALUE 2 2 L 25RESET_STORAGE_MARKER
# Reset 9 to 6
25RESET_STORAGE_MARKER 0 0 L 25RESET_STORAGE_MARKER
25RESET_STORAGE_MARKER 1 1 L 25RESET_STORAGE_MARKER
25RESET_STORAGE_MARKER 5 5 L 25RESET_STORAGE_MARKER
25RESET_STORAGE_MARKER 6 6 L 25RESET_STORAGE_MARKER
25RESET_STORAGE_MARKER 9 6 R 25RETURN_TO_MIDDLE
# Return to middle
25RETURN_TO_MIDDLE 0 0 R 25RETURN_TO_MIDDLE
25RETURN_TO_MIDDLE 1 1 R 25RETURN_TO_MIDDLE
25RETURN_TO_MIDDLE 6 6 R 25RETURN_TO_MIDDLE
25RETURN_TO_MIDDLE 5 5 S 25END


#
### JMP L3
#


25END 5 5 S 26START
26START 5 5 S LABEL_L3

#
### L2:
#

LABEL_L2 5 5 S END_27

#
### L3:
#

LABEL_L3 5 5 S END_28

#
### LOAD S13 A
#


28END 5 5 S 29START

# Start of loading
29START 5 5 R 29TO_A_END_R
# To end of number A
29TO_A_END_R 0 0 R 29TO_A_END_R
29TO_A_END_R 1 1 R 29TO_A_END_R
29TO_A_END_R 2 2 R 29TO_A_END_R
29TO_A_END_R 3 3 L 29SET_TO_7

# Move to the start of number A, and set all values to 7
29SET_TO_7 0 7 L 29SET_TO_7
29SET_TO_7 1 7 L 29SET_TO_7
29SET_TO_7 2 2 L 29TO_MIDDLE_L
# Find the middle
29TO_MIDDLE_L 1 1 L 29TO_MIDDLE_L
29TO_MIDDLE_L 0 0 L 29TO_MIDDLE_L
29TO_MIDDLE_L 7 7 L 29TO_MIDDLE_L
29TO_MIDDLE_L 2 2 L 29TO_MIDDLE_L
29TO_MIDDLE_L 3 3 L 29TO_MIDDLE_L
29TO_MIDDLE_L 4 4 L 29TO_MIDDLE_L
29TO_MIDDLE_L 5 5 L 29TO_S1_END
# To end of S1
29TO_S1_END 6 6 L 29TO_S2_END
# To end of S2
29TO_S2_END 0 0 L 29TO_S2_END
29TO_S2_END 1 1 L 29TO_S2_END
29TO_S2_END 6 6 L 29TO_S3_END
# To end of S3
29TO_S3_END 0 0 L 29TO_S3_END
29TO_S3_END 1 1 L 29TO_S3_END
29TO_S3_END 6 6 L 29TO_S4_END
# To end of S4
29TO_S4_END 0 0 L 29TO_S4_END
29TO_S4_END 1 1 L 29TO_S4_END
29TO_S4_END 6 6 L 29TO_S5_END
# To end of S5
29TO_S5_END 0 0 L 29TO_S5_END
29TO_S5_END 1 1 L 29TO_S5_END
29TO_S5_END 6 6 L 29TO_S6_END
# To end of S6
29TO_S6_END 0 0 L 29TO_S6_END
29TO_S6_END 1 1 L 29TO_S6_END
29TO_S6_END 6 6 L 29TO_S7_END
# To end of S7
29TO_S7_END 0 0 L 29TO_S7_END
29TO_S7_END 1 1 L 29TO_S7_END
29TO_S7_END 6 6 L 29TO_S8_END
# To end of S8
29TO_S8_END 0 0 L 29TO_S8_END
29TO_S8_END 1 1 L 29TO_S8_END
29TO_S8_END 6 6 L 29TO_S9_END
# To end of S9
29TO_S9_END 0 0 L 29TO_S9_END
29TO_S9_END 1 1 L 29TO_S9_END
29TO_S9_END 6 6 L 29TO_S10_END
# To end of S10
29TO_S10_END 0 0 L 29TO_S10_END
29TO_S10_END 1 1 L 29TO_S10_END
29TO_S10_END 6 6 L 29TO_S11_END
# To end of S11
29TO_S11_END 0 0 L 29TO_S11_END
29TO_S11_END 1 1 L 29TO_S11_END
29TO_S11_END 6 6 L 29TO_S12_END
# To end of S12
29TO_S12_END 0 0 L 29TO_S12_END
29TO_S12_END 1 1 L 29TO_S12_END
29TO_S12_END 6 6 L 29TO_S13_END
# To end of S13
29TO_S13_END 0 0 L 29TO_S13_END
29TO_S13_END 1 1 L 29TO_S13_END
29TO_S13_END 6 6 L 29COPY_VALUE
# Move Left until start of S13
# Copy the first non-7/8 value
29COPY_VALUE 0 7 R 29MOVE_ZERO
29COPY_VALUE 1 8 R 29MOVE_ONE
29COPY_VALUE 7 7 L 29COPY_VALUE
29COPY_VALUE 8 8 L 29COPY_VALUE
29COPY_VALUE 6 6 R 29RESTORE_VALUE

# Move a 0 to number A
29MOVE_ZERO 0 0 R 29MOVE_ZERO
29MOVE_ZERO 1 1 R 29MOVE_ZERO
29MOVE_ZERO 2 2 R 29MOVE_ZERO
29MOVE_ZERO 3 3 L 29MOVE_ZERO_2
29MOVE_ZERO 4 4 R 29MOVE_ZERO
29MOVE_ZERO 5 5 R 29MOVE_ZERO
29MOVE_ZERO 6 6 R 29MOVE_ZERO
29MOVE_ZERO 7 7 R 29MOVE_ZERO
29MOVE_ZERO 8 8 R 29MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
29MOVE_ZERO_2 0 0 L 29MOVE_ZERO_2
29MOVE_ZERO_2 1 1 L 29MOVE_ZERO_2
29MOVE_ZERO_2 7 0 S 29TO_MIDDLE_L
# Move a 1 to number A
29MOVE_ONE 0 0 R 29MOVE_ONE
29MOVE_ONE 1 1 R 29MOVE_ONE
29MOVE_ONE 2 2 R 29MOVE_ONE
29MOVE_ONE 3 3 L 29MOVE_ONE_2
29MOVE_ONE 4 4 R 29MOVE_ONE
29MOVE_ONE 5 5 R 29MOVE_ONE
29MOVE_ONE 6 6 R 29MOVE_ONE
29MOVE_ONE 7 7 R 29MOVE_ONE
29MOVE_ONE 8 8 R 29MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
29MOVE_ONE_2 0 0 L 29MOVE_ONE_2
29MOVE_ONE_2 1 1 L 29MOVE_ONE_2
29MOVE_ONE_2 7 1 S 29TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
29RESTORE_VALUE 7 0 R 29RESTORE_VALUE
29RESTORE_VALUE 8 1 R 29RESTORE_VALUE
29RESTORE_VALUE 6 6 S 29TO_START
# Go back to the start
29TO_START 0 0 R 29TO_START
29TO_START 1 1 R 29TO_START
29TO_START 6 6 R 29TO_START
29TO_START 5 5 S 29END



#
### LOAD S7 B
#


29END 5 5 S 30START

# Start of loading
30START 5 5 R 30TO_B_END_R
# To end of number B
30TO_B_END_R 0 0 R 30TO_B_END_R
30TO_B_END_R 1 1 R 30TO_B_END_R
30TO_B_END_R 2 2 R 30TO_B_END_R
30TO_B_END_R 3 3 R 30TO_B_END_R
30TO_B_END_R 4 4 L 30SET_TO_7

# Move to the start of number B, and set all values to 7
30SET_TO_7 0 7 L 30SET_TO_7
30SET_TO_7 1 7 L 30SET_TO_7
30SET_TO_7 3 3 L 30TO_MIDDLE_L
# Find the middle
30TO_MIDDLE_L 1 1 L 30TO_MIDDLE_L
30TO_MIDDLE_L 0 0 L 30TO_MIDDLE_L
30TO_MIDDLE_L 7 7 L 30TO_MIDDLE_L
30TO_MIDDLE_L 2 2 L 30TO_MIDDLE_L
30TO_MIDDLE_L 3 3 L 30TO_MIDDLE_L
30TO_MIDDLE_L 4 4 L 30TO_MIDDLE_L
30TO_MIDDLE_L 5 5 L 30TO_S1_END
# To end of S1
30TO_S1_END 6 6 L 30TO_S2_END
# To end of S2
30TO_S2_END 0 0 L 30TO_S2_END
30TO_S2_END 1 1 L 30TO_S2_END
30TO_S2_END 6 6 L 30TO_S3_END
# To end of S3
30TO_S3_END 0 0 L 30TO_S3_END
30TO_S3_END 1 1 L 30TO_S3_END
30TO_S3_END 6 6 L 30TO_S4_END
# To end of S4
30TO_S4_END 0 0 L 30TO_S4_END
30TO_S4_END 1 1 L 30TO_S4_END
30TO_S4_END 6 6 L 30TO_S5_END
# To end of S5
30TO_S5_END 0 0 L 30TO_S5_END
30TO_S5_END 1 1 L 30TO_S5_END
30TO_S5_END 6 6 L 30TO_S6_END
# To end of S6
30TO_S6_END 0 0 L 30TO_S6_END
30TO_S6_END 1 1 L 30TO_S6_END
30TO_S6_END 6 6 L 30TO_S7_END
# To end of S7
30TO_S7_END 0 0 L 30TO_S7_END
30TO_S7_END 1 1 L 30TO_S7_END
30TO_S7_END 6 6 L 30COPY_VALUE
# Move Left until start of S7
# Copy the first non-7/8 value
30COPY_VALUE 0 7 R 30MOVE_ZERO
30COPY_VALUE 1 8 R 30MOVE_ONE
30COPY_VALUE 7 7 L 30COPY_VALUE
30COPY_VALUE 8 8 L 30COPY_VALUE
30COPY_VALUE 6 6 R 30RESTORE_VALUE

# Move a 0 to number B
30MOVE_ZERO 0 0 R 30MOVE_ZERO
30MOVE_ZERO 1 1 R 30MOVE_ZERO
30MOVE_ZERO 2 2 R 30MOVE_ZERO
30MOVE_ZERO 3 3 R 30MOVE_ZERO
30MOVE_ZERO 4 4 L 30MOVE_ZERO_2
30MOVE_ZERO 5 5 R 30MOVE_ZERO
30MOVE_ZERO 6 6 R 30MOVE_ZERO
30MOVE_ZERO 7 7 R 30MOVE_ZERO
30MOVE_ZERO 8 8 R 30MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
30MOVE_ZERO_2 0 0 L 30MOVE_ZERO_2
30MOVE_ZERO_2 1 1 L 30MOVE_ZERO_2
30MOVE_ZERO_2 7 0 S 30TO_MIDDLE_L
# Move a 1 to number B
30MOVE_ONE 0 0 R 30MOVE_ONE
30MOVE_ONE 1 1 R 30MOVE_ONE
30MOVE_ONE 2 2 R 30MOVE_ONE
30MOVE_ONE 3 3 R 30MOVE_ONE
30MOVE_ONE 4 4 L 30MOVE_ONE_2
30MOVE_ONE 5 5 R 30MOVE_ONE
30MOVE_ONE 6 6 R 30MOVE_ONE
30MOVE_ONE 7 7 R 30MOVE_ONE
30MOVE_ONE 8 8 R 30MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
30MOVE_ONE_2 0 0 L 30MOVE_ONE_2
30MOVE_ONE_2 1 1 L 30MOVE_ONE_2
30MOVE_ONE_2 7 1 S 30TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
30RESTORE_VALUE 7 0 R 30RESTORE_VALUE
30RESTORE_VALUE 8 1 R 30RESTORE_VALUE
30RESTORE_VALUE 6 6 S 30TO_START
# Go back to the start
30TO_START 0 0 R 30TO_START
30TO_START 1 1 R 30TO_START
30TO_START 6 6 R 30TO_START
30TO_START 5 5 S 30END



#
### ADD
#


30END 5 5 S 31START

# Start of the addition program
31START 5 5 R 31FIND_B_END

# Find the end of the second number
31FIND_B_END 0 0 R 31FIND_B_END
31FIND_B_END 1 1 R 31FIND_B_END
31FIND_B_END 2 2 R 31FIND_B_END
31FIND_B_END 3 3 R 31FIND_B_END
31FIND_B_END 7 7 R 31FIND_B_END
31FIND_B_END 8 8 R 31FIND_B_END
31FIND_B_END 4 4 L 31ADD_DIGIT

# Find first non-added digit
31ADD_DIGIT 7 7 L 31ADD_DIGIT
31ADD_DIGIT 8 8 L 31ADD_DIGIT
31ADD_DIGIT 0 7 L 31ADD_DIGIT_ZERO
31ADD_DIGIT 1 7 L 31ADD_DIGIT_ONE
31ADD_DIGIT 3 3 R 31RESTORE

# Add a zero
31ADD_DIGIT_ZERO 0 0 L 31ADD_DIGIT_ZERO
31ADD_DIGIT_ZERO 1 1 L 31ADD_DIGIT_ZERO
31ADD_DIGIT_ZERO 3 3 L 31ADD_DIGIT_ZERO_1
31ADD_DIGIT_ZERO_1 7 7 L 31ADD_DIGIT_ZERO_1
31ADD_DIGIT_ZERO_1 8 8 L 31ADD_DIGIT_ZERO_1
31ADD_DIGIT_ZERO_1 0 7 L 31FIND_B_END
31ADD_DIGIT_ZERO_1 1 8 L 31FIND_B_END

# Add a one
31ADD_DIGIT_ONE 0 0 L 31ADD_DIGIT_ONE
31ADD_DIGIT_ONE 1 1 L 31ADD_DIGIT_ONE
31ADD_DIGIT_ONE 3 3 L 31ADD_DIGIT_ONE_1
31ADD_DIGIT_ONE_1 7 7 L 31ADD_DIGIT_ONE_1
31ADD_DIGIT_ONE_1 8 8 L 31ADD_DIGIT_ONE_1
31ADD_DIGIT_ONE_1 0 8 L 31FIND_B_END
31ADD_DIGIT_ONE_1 1 7 L 31ADD_DIGIT_ONE_2

31ADD_DIGIT_ONE_2 0 1 R 31FIND_B_END
31ADD_DIGIT_ONE_2 1 0 L 31ADD_DIGIT_ONE_2

# Return to the middle of the tape
31RESTORE 7 0 R 31RESTORE
31RESTORE 8 1 R 31RESTORE
31RESTORE 4 4 L 31RESTORE_1

31RESTORE_1 0 0 L 31RESTORE_1
31RESTORE_1 1 1 L 31RESTORE_1
31RESTORE_1 2 2 L 31RESTORE_1
31RESTORE_1 3 3 L 31RESTORE_1
31RESTORE_1 7 0 L 31RESTORE_1
31RESTORE_1 8 1 L 31RESTORE_1
31RESTORE_1 5 5 S 31END



#
### STORE S14 A
#


31END 5 5 S 32START

32START 5 5 L 32TO_S1_END
# To end of S1
32TO_S1_END 6 6 L 32TO_S2_END
# To end of S2
32TO_S2_END 0 0 L 32TO_S2_END
32TO_S2_END 1 1 L 32TO_S2_END
32TO_S2_END 6 6 L 32TO_S3_END
# To end of S3
32TO_S3_END 0 0 L 32TO_S3_END
32TO_S3_END 1 1 L 32TO_S3_END
32TO_S3_END 6 6 L 32TO_S4_END
# To end of S4
32TO_S4_END 0 0 L 32TO_S4_END
32TO_S4_END 1 1 L 32TO_S4_END
32TO_S4_END 6 6 L 32TO_S5_END
# To end of S5
32TO_S5_END 0 0 L 32TO_S5_END
32TO_S5_END 1 1 L 32TO_S5_END
32TO_S5_END 6 6 L 32TO_S6_END
# To end of S6
32TO_S6_END 0 0 L 32TO_S6_END
32TO_S6_END 1 1 L 32TO_S6_END
32TO_S6_END 6 6 L 32TO_S7_END
# To end of S7
32TO_S7_END 0 0 L 32TO_S7_END
32TO_S7_END 1 1 L 32TO_S7_END
32TO_S7_END 6 6 L 32TO_S8_END
# To end of S8
32TO_S8_END 0 0 L 32TO_S8_END
32TO_S8_END 1 1 L 32TO_S8_END
32TO_S8_END 6 6 L 32TO_S9_END
# To end of S9
32TO_S9_END 0 0 L 32TO_S9_END
32TO_S9_END 1 1 L 32TO_S9_END
32TO_S9_END 6 6 L 32TO_S10_END
# To end of S10
32TO_S10_END 0 0 L 32TO_S10_END
32TO_S10_END 1 1 L 32TO_S10_END
32TO_S10_END 6 6 L 32TO_S11_END
# To end of S11
32TO_S11_END 0 0 L 32TO_S11_END
32TO_S11_END 1 1 L 32TO_S11_END
32TO_S11_END 6 6 L 32TO_S12_END
# To end of S12
32TO_S12_END 0 0 L 32TO_S12_END
32TO_S12_END 1 1 L 32TO_S12_END
32TO_S12_END 6 6 L 32TO_S13_END
# To end of S13
32TO_S13_END 0 0 L 32TO_S13_END
32TO_S13_END 1 1 L 32TO_S13_END
32TO_S13_END 6 6 L 32TO_S14_END
# To end of S14
32TO_S14_END 0 0 L 32TO_S14_END
32TO_S14_END 1 1 L 32TO_S14_END
32TO_S14_END 6 6 L 32SET_TO_7

# Set all the values to 7 untill the start of S1
32SET_TO_7 0 7 L 32SET_TO_7
32SET_TO_7 1 7 L 32SET_TO_7
32SET_TO_7 6 9 R 32TO_MIDDLE_R
# Find the middle
32TO_MIDDLE_R 1 1 R 32TO_MIDDLE_R
32TO_MIDDLE_R 0 0 R 32TO_MIDDLE_R
32TO_MIDDLE_R 7 7 R 32TO_MIDDLE_R
32TO_MIDDLE_R 2 2 R 32TO_MIDDLE_R
32TO_MIDDLE_R 6 6 R 32TO_MIDDLE_R
32TO_MIDDLE_R 5 5 R 32COPY_VALUE
# Move Left until start of A
# Copy the first non-7/MovH8 value
32COPY_VALUE 0 7 L 32MOVE_ZERO
32COPY_VALUE 1 8 L 32MOVE_ONE
32COPY_VALUE 2 2 R 32COPY_VALUE
32COPY_VALUE 7 7 R 32COPY_VALUE
32COPY_VALUE 8 8 R 32COPY_VALUE
32COPY_VALUE 3 3 L 32RESTORE_VALUE

# Move a 0 to number 9
32MOVE_ZERO 0 0 L 32MOVE_ZERO
32MOVE_ZERO 1 1 L 32MOVE_ZERO
32MOVE_ZERO 2 2 L 32MOVE_ZERO
32MOVE_ZERO 3 3 L 32MOVE_ZERO
32MOVE_ZERO 4 4 L 32MOVE_ZERO
32MOVE_ZERO 9 9 R 32MOVE_ZERO_2
32MOVE_ZERO 5 5 L 32MOVE_ZERO
32MOVE_ZERO 6 6 L 32MOVE_ZERO
32MOVE_ZERO 7 7 L 32MOVE_ZERO
32MOVE_ZERO 8 8 L 32MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
32MOVE_ZERO_2 0 0 R 32MOVE_ZERO_2
32MOVE_ZERO_2 1 1 R 32MOVE_ZERO_2
32MOVE_ZERO_2 7 0 S 32TO_MIDDLE_R
# Move a 1 to number 9
32MOVE_ONE 0 0 L 32MOVE_ONE
32MOVE_ONE 1 1 L 32MOVE_ONE
32MOVE_ONE 2 2 L 32MOVE_ONE
32MOVE_ONE 3 3 L 32MOVE_ONE
32MOVE_ONE 4 4 L 32MOVE_ONE
32MOVE_ONE 9 9 R 32MOVE_ONE_2
32MOVE_ONE 5 5 L 32MOVE_ONE
32MOVE_ONE 6 6 L 32MOVE_ONE
32MOVE_ONE 7 7 L 32MOVE_ONE
32MOVE_ONE 8 8 L 32MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
32MOVE_ONE_2 0 0 R 32MOVE_ONE_2
32MOVE_ONE_2 1 1 R 32MOVE_ONE_2
32MOVE_ONE_2 7 1 S 32TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
32RESTORE_VALUE 7 0 L 32RESTORE_VALUE
32RESTORE_VALUE 8 1 L 32RESTORE_VALUE
32RESTORE_VALUE 2 2 L 32RESET_STORAGE_MARKER
# Reset 9 to 6
32RESET_STORAGE_MARKER 0 0 L 32RESET_STORAGE_MARKER
32RESET_STORAGE_MARKER 1 1 L 32RESET_STORAGE_MARKER
32RESET_STORAGE_MARKER 5 5 L 32RESET_STORAGE_MARKER
32RESET_STORAGE_MARKER 6 6 L 32RESET_STORAGE_MARKER
32RESET_STORAGE_MARKER 9 6 R 32RETURN_TO_MIDDLE
# Return to middle
32RETURN_TO_MIDDLE 0 0 R 32RETURN_TO_MIDDLE
32RETURN_TO_MIDDLE 1 1 R 32RETURN_TO_MIDDLE
32RETURN_TO_MIDDLE 6 6 R 32RETURN_TO_MIDDLE
32RETURN_TO_MIDDLE 5 5 S 32END

32END 5 5 S END