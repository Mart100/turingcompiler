6 0 1 0 1 1 0 0 1 6 !5 2 0 0 0 0 0 0 0 1 3 0 0 0 0 0 0 0 0 4

START 5 5 R TO_B_END_R

# To end of number B
TO_B_END_R 0 0 R TO_B_END_R
TO_B_END_R 1 1 R TO_B_END_R
TO_B_END_R 2 2 R TO_B_END_R
TO_B_END_R 3 3 R TO_B_END_R
TO_B_END_R 4 4 L SET_TO_7

# Move to the start of number B, and set all values to 7
SET_TO_7 0 7 L SET_TO_7
SET_TO_7 1 7 L SET_TO_7
SET_TO_7 3 3 L TO_MIDDLE_L

# Find the middle
TO_MIDDLE_L 7 7 L TO_MIDDLE_L
TO_MIDDLE_L 1 1 L TO_MIDDLE_L
TO_MIDDLE_L 0 0 L TO_MIDDLE_L
TO_MIDDLE_L 2 2 L TO_MIDDLE_L
TO_MIDDLE_L 3 3 L TO_MIDDLE_L
TO_MIDDLE_L 5 5 L TO_S1_END

# To end of S1
TO_S1_END 6 6 L COPY_VALUE

# Move Left until start of S1
# Copy the first non-7/8 value
COPY_VALUE 0 7 R MOVE_ZERO
COPY_VALUE 1 8 R MOVE_ONE
COPY_VALUE 7 7 L COPY_VALUE
COPY_VALUE 8 8 L COPY_VALUE
COPY_VALUE 6 6 R RESTORE_VALUE

## MOVE IF VALUE IS 0

# Move a 0 to the end of number A
MOVE_ZERO 0 0 R MOVE_ZERO
MOVE_ZERO 1 1 R MOVE_ZERO
MOVE_ZERO 2 2 R MOVE_ZERO
MOVE_ZERO 3 3 R MOVE_ZERO
MOVE_ZERO 4 4 L MOVE_ZERO_2
MOVE_ZERO 5 5 R MOVE_ZERO
MOVE_ZERO 6 6 R MOVE_ZERO
MOVE_ZERO 7 7 R MOVE_ZERO
MOVE_ZERO 8 8 R MOVE_ZERO

# Move a 0 to the left until the first 7, and replace it
MOVE_ZERO_2 0 0 L MOVE_ZERO_2
MOVE_ZERO_2 1 1 L MOVE_ZERO_2
MOVE_ZERO_2 7 0 S TO_MIDDLE_L

## MOVE IF VALUE IS 1
# Move a 1 to the start of the first number
MOVE_ONE 0 0 R MOVE_ONE
MOVE_ONE 1 1 R MOVE_ONE
MOVE_ONE 2 2 R MOVE_ONE
MOVE_ONE 3 3 R MOVE_ONE
MOVE_ONE 4 4 L MOVE_ONE_2
MOVE_ONE 5 5 R MOVE_ONE
MOVE_ONE 6 6 R MOVE_ONE
MOVE_ONE 7 7 R MOVE_ONE
MOVE_ONE 8 8 R MOVE_ONE

# Move a 1 to the left until the first 7, and replace it
MOVE_ONE_2 0 0 L MOVE_ONE_2
MOVE_ONE_2 1 1 L MOVE_ONE_2
MOVE_ONE_2 7 1 S TO_MIDDLE_L

# Restore number A, translate 7 to 0 and 8 to 1
RESTORE_VALUE 7 0 R RESTORE_VALUE
RESTORE_VALUE 8 1 R RESTORE_VALUE
RESTORE_VALUE 6 6 S TO_START

# Go back to the start
TO_START 6 6 R END