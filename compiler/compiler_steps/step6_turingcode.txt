6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 !5 2 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4 0 0 0 0 0 0 0 0 10

# Original program

#program let a = (22 - 8) * 4 + 5;
#program let b = a == 61;
#program let c = 0;
#program if b {
#program     c = 12;
#program } else {
#program     c = 0;
#program };
#program return c;

#Code does not include main function


START 5 5 S 0END

#
#asm SET S9 22
#


0END 5 5 S 1START

1START 5 5 L 1TO_9_S1
#GO_TO_Sn: 9

1TO_9_S1 6 6 L 1TO_9_S2
1TO_9_S1 9 9 L 1TO_9_S2
1TO_9_S2 0 0 L 1TO_9_S2
1TO_9_S2 1 1 L 1TO_9_S2
1TO_9_S2 7 7 L 1TO_9_S2
1TO_9_S2 8 8 L 1TO_9_S2
1TO_9_S2 6 6 L 1TO_9_S3
1TO_9_S2 9 9 L 1TO_9_S3
1TO_9_S3 0 0 L 1TO_9_S3
1TO_9_S3 1 1 L 1TO_9_S3
1TO_9_S3 7 7 L 1TO_9_S3
1TO_9_S3 8 8 L 1TO_9_S3
1TO_9_S3 6 6 L 1TO_9_S4
1TO_9_S3 9 9 L 1TO_9_S4
1TO_9_S4 0 0 L 1TO_9_S4
1TO_9_S4 1 1 L 1TO_9_S4
1TO_9_S4 7 7 L 1TO_9_S4
1TO_9_S4 8 8 L 1TO_9_S4
1TO_9_S4 6 6 L 1TO_9_S5
1TO_9_S4 9 9 L 1TO_9_S5
1TO_9_S5 0 0 L 1TO_9_S5
1TO_9_S5 1 1 L 1TO_9_S5
1TO_9_S5 7 7 L 1TO_9_S5
1TO_9_S5 8 8 L 1TO_9_S5
1TO_9_S5 6 6 L 1TO_9_S6
1TO_9_S5 9 9 L 1TO_9_S6
1TO_9_S6 0 0 L 1TO_9_S6
1TO_9_S6 1 1 L 1TO_9_S6
1TO_9_S6 7 7 L 1TO_9_S6
1TO_9_S6 8 8 L 1TO_9_S6
1TO_9_S6 6 6 L 1TO_9_S7
1TO_9_S6 9 9 L 1TO_9_S7
1TO_9_S7 0 0 L 1TO_9_S7
1TO_9_S7 1 1 L 1TO_9_S7
1TO_9_S7 7 7 L 1TO_9_S7
1TO_9_S7 8 8 L 1TO_9_S7
1TO_9_S7 6 6 L 1TO_9_S8
1TO_9_S7 9 9 L 1TO_9_S8
1TO_9_S8 0 0 L 1TO_9_S8
1TO_9_S8 1 1 L 1TO_9_S8
1TO_9_S8 7 7 L 1TO_9_S8
1TO_9_S8 8 8 L 1TO_9_S8
1TO_9_S8 6 6 L 1TO_9_S9
1TO_9_S8 9 9 L 1TO_9_S9
1TO_9_S9 0 0 L 1TO_9_S9
1TO_9_S9 1 1 L 1TO_9_S9
1TO_9_S9 7 7 L 1TO_9_S9
1TO_9_S9 8 8 L 1TO_9_S9
1TO_9_S9 6 6 L 1RESET_S
1TO_9_S9 9 6 L 1RESET_S

# Reset to 0
1RESET_S 0 0 L 1RESET_S
1RESET_S 1 0 L 1RESET_S
1RESET_S 6 6 R 1SET_1D
1SET_1D 0 0 R 1SET_2D
1SET_2D 0 0 R 1SET_3D
1SET_3D 0 0 R 1SET_4D
1SET_4D 0 1 R 1SET_5D
1SET_5D 0 0 R 1SET_6D
1SET_6D 0 1 R 1SET_7D
1SET_7D 0 1 R 1SET_8D
1SET_8D 0 0 R 1RETURN

# Return to middle
1RETURN 0 0 R 1RETURN
1RETURN 1 1 R 1RETURN
1RETURN 6 6 R 1RETURN
1RETURN 5 5 S 1END


#
#asm SET S5 8
#


1END 5 5 S 2START

2START 5 5 L 2TO_5_S1
#GO_TO_Sn: 5

2TO_5_S1 6 6 L 2TO_5_S2
2TO_5_S1 9 9 L 2TO_5_S2
2TO_5_S2 0 0 L 2TO_5_S2
2TO_5_S2 1 1 L 2TO_5_S2
2TO_5_S2 7 7 L 2TO_5_S2
2TO_5_S2 8 8 L 2TO_5_S2
2TO_5_S2 6 6 L 2TO_5_S3
2TO_5_S2 9 9 L 2TO_5_S3
2TO_5_S3 0 0 L 2TO_5_S3
2TO_5_S3 1 1 L 2TO_5_S3
2TO_5_S3 7 7 L 2TO_5_S3
2TO_5_S3 8 8 L 2TO_5_S3
2TO_5_S3 6 6 L 2TO_5_S4
2TO_5_S3 9 9 L 2TO_5_S4
2TO_5_S4 0 0 L 2TO_5_S4
2TO_5_S4 1 1 L 2TO_5_S4
2TO_5_S4 7 7 L 2TO_5_S4
2TO_5_S4 8 8 L 2TO_5_S4
2TO_5_S4 6 6 L 2TO_5_S5
2TO_5_S4 9 9 L 2TO_5_S5
2TO_5_S5 0 0 L 2TO_5_S5
2TO_5_S5 1 1 L 2TO_5_S5
2TO_5_S5 7 7 L 2TO_5_S5
2TO_5_S5 8 8 L 2TO_5_S5
2TO_5_S5 6 6 L 2RESET_S
2TO_5_S5 9 6 L 2RESET_S

# Reset to 0
2RESET_S 0 0 L 2RESET_S
2RESET_S 1 0 L 2RESET_S
2RESET_S 6 6 R 2SET_1D
2SET_1D 0 0 R 2SET_2D
2SET_2D 0 0 R 2SET_3D
2SET_3D 0 0 R 2SET_4D
2SET_4D 0 0 R 2SET_5D
2SET_5D 0 1 R 2SET_6D
2SET_6D 0 0 R 2SET_7D
2SET_7D 0 0 R 2SET_8D
2SET_8D 0 0 R 2RETURN

# Return to middle
2RETURN 0 0 R 2RETURN
2RETURN 1 1 R 2RETURN
2RETURN 6 6 R 2RETURN
2RETURN 5 5 S 2END


#
#asm LOAD S9 A
#


2END 5 5 S 3START

# Start of loading
3START 5 5 R 3TO_A_END_R
# To end of number A
3TO_A_END_R 0 0 R 3TO_A_END_R
3TO_A_END_R 1 1 R 3TO_A_END_R
3TO_A_END_R 2 2 R 3TO_A_END_R
3TO_A_END_R 3 3 L 3SET_TO_7

# Move to the start of number A, and set all values to 7
3SET_TO_7 0 7 L 3SET_TO_7
3SET_TO_7 1 7 L 3SET_TO_7
3SET_TO_7 2 2 L 3TO_MIDDLE_L
# Find the middle
3TO_MIDDLE_L 1 1 L 3TO_MIDDLE_L
3TO_MIDDLE_L 0 0 L 3TO_MIDDLE_L
3TO_MIDDLE_L 7 7 L 3TO_MIDDLE_L
3TO_MIDDLE_L 2 2 L 3TO_MIDDLE_L
3TO_MIDDLE_L 3 3 L 3TO_MIDDLE_L
3TO_MIDDLE_L 4 4 L 3TO_MIDDLE_L
3TO_MIDDLE_L 5 5 L 3TO_9_S1
#GO_TO_Sn: 9

3TO_9_S1 6 6 L 3TO_9_S2
3TO_9_S1 9 9 L 3TO_9_S2
3TO_9_S2 0 0 L 3TO_9_S2
3TO_9_S2 1 1 L 3TO_9_S2
3TO_9_S2 7 7 L 3TO_9_S2
3TO_9_S2 8 8 L 3TO_9_S2
3TO_9_S2 6 6 L 3TO_9_S3
3TO_9_S2 9 9 L 3TO_9_S3
3TO_9_S3 0 0 L 3TO_9_S3
3TO_9_S3 1 1 L 3TO_9_S3
3TO_9_S3 7 7 L 3TO_9_S3
3TO_9_S3 8 8 L 3TO_9_S3
3TO_9_S3 6 6 L 3TO_9_S4
3TO_9_S3 9 9 L 3TO_9_S4
3TO_9_S4 0 0 L 3TO_9_S4
3TO_9_S4 1 1 L 3TO_9_S4
3TO_9_S4 7 7 L 3TO_9_S4
3TO_9_S4 8 8 L 3TO_9_S4
3TO_9_S4 6 6 L 3TO_9_S5
3TO_9_S4 9 9 L 3TO_9_S5
3TO_9_S5 0 0 L 3TO_9_S5
3TO_9_S5 1 1 L 3TO_9_S5
3TO_9_S5 7 7 L 3TO_9_S5
3TO_9_S5 8 8 L 3TO_9_S5
3TO_9_S5 6 6 L 3TO_9_S6
3TO_9_S5 9 9 L 3TO_9_S6
3TO_9_S6 0 0 L 3TO_9_S6
3TO_9_S6 1 1 L 3TO_9_S6
3TO_9_S6 7 7 L 3TO_9_S6
3TO_9_S6 8 8 L 3TO_9_S6
3TO_9_S6 6 6 L 3TO_9_S7
3TO_9_S6 9 9 L 3TO_9_S7
3TO_9_S7 0 0 L 3TO_9_S7
3TO_9_S7 1 1 L 3TO_9_S7
3TO_9_S7 7 7 L 3TO_9_S7
3TO_9_S7 8 8 L 3TO_9_S7
3TO_9_S7 6 6 L 3TO_9_S8
3TO_9_S7 9 9 L 3TO_9_S8
3TO_9_S8 0 0 L 3TO_9_S8
3TO_9_S8 1 1 L 3TO_9_S8
3TO_9_S8 7 7 L 3TO_9_S8
3TO_9_S8 8 8 L 3TO_9_S8
3TO_9_S8 6 6 L 3TO_9_S9
3TO_9_S8 9 9 L 3TO_9_S9
3TO_9_S9 0 0 L 3TO_9_S9
3TO_9_S9 1 1 L 3TO_9_S9
3TO_9_S9 7 7 L 3TO_9_S9
3TO_9_S9 8 8 L 3TO_9_S9
3TO_9_S9 6 6 L 3COPY_VALUE
3TO_9_S9 9 6 L 3COPY_VALUE
# Move Left until start of S9
# Copy the first non-7/8 value
3COPY_VALUE 0 7 R 3MOVE_ZERO
3COPY_VALUE 1 8 R 3MOVE_ONE
3COPY_VALUE 7 7 L 3COPY_VALUE
3COPY_VALUE 8 8 L 3COPY_VALUE
3COPY_VALUE 6 6 R 3RESTORE_VALUE

# Move a 0 to number A
3MOVE_ZERO 0 0 R 3MOVE_ZERO
3MOVE_ZERO 1 1 R 3MOVE_ZERO
3MOVE_ZERO 2 2 R 3MOVE_ZERO
3MOVE_ZERO 3 3 L 3MOVE_ZERO_2
3MOVE_ZERO 4 4 R 3MOVE_ZERO
3MOVE_ZERO 5 5 R 3MOVE_ZERO
3MOVE_ZERO 6 6 R 3MOVE_ZERO
3MOVE_ZERO 7 7 R 3MOVE_ZERO
3MOVE_ZERO 8 8 R 3MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
3MOVE_ZERO_2 0 0 L 3MOVE_ZERO_2
3MOVE_ZERO_2 1 1 L 3MOVE_ZERO_2
3MOVE_ZERO_2 7 0 S 3TO_MIDDLE_L
# Move a 1 to number A
3MOVE_ONE 0 0 R 3MOVE_ONE
3MOVE_ONE 1 1 R 3MOVE_ONE
3MOVE_ONE 2 2 R 3MOVE_ONE
3MOVE_ONE 3 3 L 3MOVE_ONE_2
3MOVE_ONE 4 4 R 3MOVE_ONE
3MOVE_ONE 5 5 R 3MOVE_ONE
3MOVE_ONE 6 6 R 3MOVE_ONE
3MOVE_ONE 7 7 R 3MOVE_ONE
3MOVE_ONE 8 8 R 3MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
3MOVE_ONE_2 0 0 L 3MOVE_ONE_2
3MOVE_ONE_2 1 1 L 3MOVE_ONE_2
3MOVE_ONE_2 7 1 S 3TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
3RESTORE_VALUE 7 0 R 3RESTORE_VALUE
3RESTORE_VALUE 8 1 R 3RESTORE_VALUE
3RESTORE_VALUE 6 6 S 3TO_START
# Go back to the start
3TO_START 0 0 R 3TO_START
3TO_START 1 1 R 3TO_START
3TO_START 6 6 R 3TO_START
3TO_START 5 5 S 3END



#
#asm LOAD S5 B
#


3END 5 5 S 4START

# Start of loading
4START 5 5 R 4TO_B_END_R
# To end of number B
4TO_B_END_R 0 0 R 4TO_B_END_R
4TO_B_END_R 1 1 R 4TO_B_END_R
4TO_B_END_R 2 2 R 4TO_B_END_R
4TO_B_END_R 3 3 R 4TO_B_END_R
4TO_B_END_R 4 4 L 4SET_TO_7

# Move to the start of number B, and set all values to 7
4SET_TO_7 0 7 L 4SET_TO_7
4SET_TO_7 1 7 L 4SET_TO_7
4SET_TO_7 3 3 L 4TO_MIDDLE_L
# Find the middle
4TO_MIDDLE_L 1 1 L 4TO_MIDDLE_L
4TO_MIDDLE_L 0 0 L 4TO_MIDDLE_L
4TO_MIDDLE_L 7 7 L 4TO_MIDDLE_L
4TO_MIDDLE_L 2 2 L 4TO_MIDDLE_L
4TO_MIDDLE_L 3 3 L 4TO_MIDDLE_L
4TO_MIDDLE_L 4 4 L 4TO_MIDDLE_L
4TO_MIDDLE_L 5 5 L 4TO_5_S1
#GO_TO_Sn: 5

4TO_5_S1 6 6 L 4TO_5_S2
4TO_5_S1 9 9 L 4TO_5_S2
4TO_5_S2 0 0 L 4TO_5_S2
4TO_5_S2 1 1 L 4TO_5_S2
4TO_5_S2 7 7 L 4TO_5_S2
4TO_5_S2 8 8 L 4TO_5_S2
4TO_5_S2 6 6 L 4TO_5_S3
4TO_5_S2 9 9 L 4TO_5_S3
4TO_5_S3 0 0 L 4TO_5_S3
4TO_5_S3 1 1 L 4TO_5_S3
4TO_5_S3 7 7 L 4TO_5_S3
4TO_5_S3 8 8 L 4TO_5_S3
4TO_5_S3 6 6 L 4TO_5_S4
4TO_5_S3 9 9 L 4TO_5_S4
4TO_5_S4 0 0 L 4TO_5_S4
4TO_5_S4 1 1 L 4TO_5_S4
4TO_5_S4 7 7 L 4TO_5_S4
4TO_5_S4 8 8 L 4TO_5_S4
4TO_5_S4 6 6 L 4TO_5_S5
4TO_5_S4 9 9 L 4TO_5_S5
4TO_5_S5 0 0 L 4TO_5_S5
4TO_5_S5 1 1 L 4TO_5_S5
4TO_5_S5 7 7 L 4TO_5_S5
4TO_5_S5 8 8 L 4TO_5_S5
4TO_5_S5 6 6 L 4COPY_VALUE
4TO_5_S5 9 6 L 4COPY_VALUE
# Move Left until start of S5
# Copy the first non-7/8 value
4COPY_VALUE 0 7 R 4MOVE_ZERO
4COPY_VALUE 1 8 R 4MOVE_ONE
4COPY_VALUE 7 7 L 4COPY_VALUE
4COPY_VALUE 8 8 L 4COPY_VALUE
4COPY_VALUE 6 6 R 4RESTORE_VALUE

# Move a 0 to number B
4MOVE_ZERO 0 0 R 4MOVE_ZERO
4MOVE_ZERO 1 1 R 4MOVE_ZERO
4MOVE_ZERO 2 2 R 4MOVE_ZERO
4MOVE_ZERO 3 3 R 4MOVE_ZERO
4MOVE_ZERO 4 4 L 4MOVE_ZERO_2
4MOVE_ZERO 5 5 R 4MOVE_ZERO
4MOVE_ZERO 6 6 R 4MOVE_ZERO
4MOVE_ZERO 7 7 R 4MOVE_ZERO
4MOVE_ZERO 8 8 R 4MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
4MOVE_ZERO_2 0 0 L 4MOVE_ZERO_2
4MOVE_ZERO_2 1 1 L 4MOVE_ZERO_2
4MOVE_ZERO_2 7 0 S 4TO_MIDDLE_L
# Move a 1 to number B
4MOVE_ONE 0 0 R 4MOVE_ONE
4MOVE_ONE 1 1 R 4MOVE_ONE
4MOVE_ONE 2 2 R 4MOVE_ONE
4MOVE_ONE 3 3 R 4MOVE_ONE
4MOVE_ONE 4 4 L 4MOVE_ONE_2
4MOVE_ONE 5 5 R 4MOVE_ONE
4MOVE_ONE 6 6 R 4MOVE_ONE
4MOVE_ONE 7 7 R 4MOVE_ONE
4MOVE_ONE 8 8 R 4MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
4MOVE_ONE_2 0 0 L 4MOVE_ONE_2
4MOVE_ONE_2 1 1 L 4MOVE_ONE_2
4MOVE_ONE_2 7 1 S 4TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
4RESTORE_VALUE 7 0 R 4RESTORE_VALUE
4RESTORE_VALUE 8 1 R 4RESTORE_VALUE
4RESTORE_VALUE 6 6 S 4TO_START
# Go back to the start
4TO_START 0 0 R 4TO_START
4TO_START 1 1 R 4TO_START
4TO_START 6 6 R 4TO_START
4TO_START 5 5 S 4END



#
#asm SUB
#


4END 5 5 S 5START

# Start of the subtraction program
5START 5 5 R 5FIND_B_END

# Find the end of the second number
5FIND_B_END 0 0 R 5FIND_B_END
5FIND_B_END 1 1 R 5FIND_B_END
5FIND_B_END 2 2 R 5FIND_B_END
5FIND_B_END 3 3 R 5FIND_B_END
5FIND_B_END 7 7 R 5FIND_B_END
5FIND_B_END 8 8 R 5FIND_B_END
5FIND_B_END 4 4 L 5SUB_DIGIT

# Find first non-subtracted digit
5SUB_DIGIT 7 7 L 5SUB_DIGIT
5SUB_DIGIT 8 8 L 5SUB_DIGIT
5SUB_DIGIT 0 7 L 5SUB_DIGIT_ZERO
5SUB_DIGIT 1 7 L 5SUB_DIGIT_ONE
5SUB_DIGIT 3 3 R 5RESTORE

# Subtract a zero
5SUB_DIGIT_ZERO 0 0 L 5SUB_DIGIT_ZERO
5SUB_DIGIT_ZERO 1 1 L 5SUB_DIGIT_ZERO
5SUB_DIGIT_ZERO 3 3 L 5SUB_DIGIT_ZERO_1

5SUB_DIGIT_ZERO_1 7 7 L 5SUB_DIGIT_ZERO_1
5SUB_DIGIT_ZERO_1 8 8 L 5SUB_DIGIT_ZERO_1
5SUB_DIGIT_ZERO_1 0 7 L 5FIND_B_END
5SUB_DIGIT_ZERO_1 1 8 R 5FIND_B_END

# Subtract a one
5SUB_DIGIT_ONE 0 0 L 5SUB_DIGIT_ONE
5SUB_DIGIT_ONE 1 1 L 5SUB_DIGIT_ONE
5SUB_DIGIT_ONE 3 3 L 5SUB_DIGIT_ONE_1

5SUB_DIGIT_ONE_1 7 7 L 5SUB_DIGIT_ONE_1
5SUB_DIGIT_ONE_1 8 8 L 5SUB_DIGIT_ONE_1
5SUB_DIGIT_ONE_1 0 8 L 5SUB_DIGIT_ONE_2
5SUB_DIGIT_ONE_1 1 7 R 5FIND_B_END

5SUB_DIGIT_ONE_2 1 0 R 5FIND_B_END
5SUB_DIGIT_ONE_2 2 2 R 5OVERFLOW
5SUB_DIGIT_ONE_2 0 1 L 5SUB_DIGIT_ONE_2

# Unsigned overflow
5OVERFLOW 0 1 R 5OVERFLOW
5OVERFLOW 1 1 R 5OVERFLOW
5OVERFLOW 7 7 R 5FIND_B_END
5OVERFLOW 8 8 R 5FIND_B_END
5OVERFLOW 3 3 R 5FIND_B_END

# Return to the middle of the tape
5RESTORE 7 0 R 5RESTORE
5RESTORE 8 1 R 5RESTORE
5RESTORE 4 4 L 5RESTORE_1

5RESTORE_1 0 0 L 5RESTORE_1
5RESTORE_1 1 1 L 5RESTORE_1
5RESTORE_1 2 2 L 5RESTORE_1
5RESTORE_1 3 3 L 5RESTORE_1
5RESTORE_1 7 0 L 5RESTORE_1
5RESTORE_1 8 1 L 5RESTORE_1
5RESTORE_1 5 5 S 5END


#
#asm STORE S3 A
#


5END 5 5 S 6START

6START 5 5 L 6TO_3_S1
#GO_TO_Sn: 3

6TO_3_S1 6 6 L 6TO_3_S2
6TO_3_S1 9 9 L 6TO_3_S2
6TO_3_S2 0 0 L 6TO_3_S2
6TO_3_S2 1 1 L 6TO_3_S2
6TO_3_S2 7 7 L 6TO_3_S2
6TO_3_S2 8 8 L 6TO_3_S2
6TO_3_S2 6 6 L 6TO_3_S3
6TO_3_S2 9 9 L 6TO_3_S3
6TO_3_S3 0 0 L 6TO_3_S3
6TO_3_S3 1 1 L 6TO_3_S3
6TO_3_S3 7 7 L 6TO_3_S3
6TO_3_S3 8 8 L 6TO_3_S3
6TO_3_S3 6 9 L 6SET_TO_7
6TO_3_S3 9 9 L 6SET_TO_7

# Set all the values to 7 untill the start of S1
6SET_TO_7 0 7 L 6SET_TO_7
6SET_TO_7 1 7 L 6SET_TO_7
6SET_TO_7 6 6 R 6TO_MIDDLE_R
# Find the middle
6TO_MIDDLE_R 1 1 R 6TO_MIDDLE_R
6TO_MIDDLE_R 0 0 R 6TO_MIDDLE_R
6TO_MIDDLE_R 7 7 R 6TO_MIDDLE_R
6TO_MIDDLE_R 2 2 R 6TO_MIDDLE_R
6TO_MIDDLE_R 6 6 R 6TO_MIDDLE_R
6TO_MIDDLE_R 9 9 R 6TO_MIDDLE_R
6TO_MIDDLE_R 5 5 R 6A_END

# to end of A
6A_END 0 0 R 6A_END
6A_END 1 1 R 6A_END
6A_END 2 2 R 6A_END
6A_END 7 7 R 6A_END
6A_END 8 8 R 6A_END
6A_END 3 3 L 6COPY_VALUE

# Move Left until end of A
# Copy the first non-7/MovH8 value
6COPY_VALUE 0 7 L 6MOVE_ZERO
6COPY_VALUE 1 8 L 6MOVE_ONE
6COPY_VALUE EndA EndA L 6COPY_VALUE
6COPY_VALUE 7 7 L 6COPY_VALUE
6COPY_VALUE 8 8 L 6COPY_VALUE
6COPY_VALUE 2 2 R 6RESTORE_VALUE

# Move a 0 to number 9
6MOVE_ZERO 0 0 L 6MOVE_ZERO
6MOVE_ZERO 1 1 L 6MOVE_ZERO
6MOVE_ZERO 2 2 L 6MOVE_ZERO
6MOVE_ZERO 3 3 L 6MOVE_ZERO
6MOVE_ZERO 4 4 L 6MOVE_ZERO
6MOVE_ZERO 9 9 L 6MOVE_ZERO_2
6MOVE_ZERO 5 5 L 6MOVE_ZERO
6MOVE_ZERO 6 6 L 6MOVE_ZERO
6MOVE_ZERO 7 7 L 6MOVE_ZERO
6MOVE_ZERO 8 8 L 6MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
6MOVE_ZERO_2 0 0 L 6MOVE_ZERO_2
6MOVE_ZERO_2 1 1 L 6MOVE_ZERO_2
6MOVE_ZERO_2 7 0 S 6TO_MIDDLE_R
# Move a 1 to number 9
6MOVE_ONE 0 0 L 6MOVE_ONE
6MOVE_ONE 1 1 L 6MOVE_ONE
6MOVE_ONE 2 2 L 6MOVE_ONE
6MOVE_ONE 3 3 L 6MOVE_ONE
6MOVE_ONE 4 4 L 6MOVE_ONE
6MOVE_ONE 9 9 L 6MOVE_ONE_2
6MOVE_ONE 5 5 L 6MOVE_ONE
6MOVE_ONE 6 6 L 6MOVE_ONE
6MOVE_ONE 7 7 L 6MOVE_ONE
6MOVE_ONE 8 8 L 6MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
6MOVE_ONE_2 0 0 L 6MOVE_ONE_2
6MOVE_ONE_2 1 1 L 6MOVE_ONE_2
6MOVE_ONE_2 7 1 S 6TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
6RESTORE_VALUE 7 0 R 6RESTORE_VALUE
6RESTORE_VALUE 8 1 R 6RESTORE_VALUE
6RESTORE_VALUE 3 3 L 6RESET_STORAGE_MARKER
# Reset 9 to 6
6RESET_STORAGE_MARKER 0 0 L 6RESET_STORAGE_MARKER
6RESET_STORAGE_MARKER 1 1 L 6RESET_STORAGE_MARKER
6RESET_STORAGE_MARKER 5 5 L 6RESET_STORAGE_MARKER
6RESET_STORAGE_MARKER 6 6 L 6RESET_STORAGE_MARKER
6RESET_STORAGE_MARKER 2 2 L 6RESET_STORAGE_MARKER
6RESET_STORAGE_MARKER 9 6 R 6RETURN_TO_MIDDLE
# Return to middle
6RETURN_TO_MIDDLE 0 0 R 6RETURN_TO_MIDDLE
6RETURN_TO_MIDDLE 1 1 R 6RETURN_TO_MIDDLE
6RETURN_TO_MIDDLE 6 6 R 6RETURN_TO_MIDDLE
6RETURN_TO_MIDDLE 5 5 S 6END


#
#asm SET S8 4
#


6END 5 5 S 7START

7START 5 5 L 7TO_8_S1
#GO_TO_Sn: 8

7TO_8_S1 6 6 L 7TO_8_S2
7TO_8_S1 9 9 L 7TO_8_S2
7TO_8_S2 0 0 L 7TO_8_S2
7TO_8_S2 1 1 L 7TO_8_S2
7TO_8_S2 7 7 L 7TO_8_S2
7TO_8_S2 8 8 L 7TO_8_S2
7TO_8_S2 6 6 L 7TO_8_S3
7TO_8_S2 9 9 L 7TO_8_S3
7TO_8_S3 0 0 L 7TO_8_S3
7TO_8_S3 1 1 L 7TO_8_S3
7TO_8_S3 7 7 L 7TO_8_S3
7TO_8_S3 8 8 L 7TO_8_S3
7TO_8_S3 6 6 L 7TO_8_S4
7TO_8_S3 9 9 L 7TO_8_S4
7TO_8_S4 0 0 L 7TO_8_S4
7TO_8_S4 1 1 L 7TO_8_S4
7TO_8_S4 7 7 L 7TO_8_S4
7TO_8_S4 8 8 L 7TO_8_S4
7TO_8_S4 6 6 L 7TO_8_S5
7TO_8_S4 9 9 L 7TO_8_S5
7TO_8_S5 0 0 L 7TO_8_S5
7TO_8_S5 1 1 L 7TO_8_S5
7TO_8_S5 7 7 L 7TO_8_S5
7TO_8_S5 8 8 L 7TO_8_S5
7TO_8_S5 6 6 L 7TO_8_S6
7TO_8_S5 9 9 L 7TO_8_S6
7TO_8_S6 0 0 L 7TO_8_S6
7TO_8_S6 1 1 L 7TO_8_S6
7TO_8_S6 7 7 L 7TO_8_S6
7TO_8_S6 8 8 L 7TO_8_S6
7TO_8_S6 6 6 L 7TO_8_S7
7TO_8_S6 9 9 L 7TO_8_S7
7TO_8_S7 0 0 L 7TO_8_S7
7TO_8_S7 1 1 L 7TO_8_S7
7TO_8_S7 7 7 L 7TO_8_S7
7TO_8_S7 8 8 L 7TO_8_S7
7TO_8_S7 6 6 L 7TO_8_S8
7TO_8_S7 9 9 L 7TO_8_S8
7TO_8_S8 0 0 L 7TO_8_S8
7TO_8_S8 1 1 L 7TO_8_S8
7TO_8_S8 7 7 L 7TO_8_S8
7TO_8_S8 8 8 L 7TO_8_S8
7TO_8_S8 6 6 L 7RESET_S
7TO_8_S8 9 6 L 7RESET_S

# Reset to 0
7RESET_S 0 0 L 7RESET_S
7RESET_S 1 0 L 7RESET_S
7RESET_S 6 6 R 7SET_1D
7SET_1D 0 0 R 7SET_2D
7SET_2D 0 0 R 7SET_3D
7SET_3D 0 0 R 7SET_4D
7SET_4D 0 0 R 7SET_5D
7SET_5D 0 0 R 7SET_6D
7SET_6D 0 1 R 7SET_7D
7SET_7D 0 0 R 7SET_8D
7SET_8D 0 0 R 7RETURN

# Return to middle
7RETURN 0 0 R 7RETURN
7RETURN 1 1 R 7RETURN
7RETURN 6 6 R 7RETURN
7RETURN 5 5 S 7END


#
#asm LOAD S3 B
#


7END 5 5 S 8START

# Start of loading
8START 5 5 R 8TO_B_END_R
# To end of number B
8TO_B_END_R 0 0 R 8TO_B_END_R
8TO_B_END_R 1 1 R 8TO_B_END_R
8TO_B_END_R 2 2 R 8TO_B_END_R
8TO_B_END_R 3 3 R 8TO_B_END_R
8TO_B_END_R 4 4 L 8SET_TO_7

# Move to the start of number B, and set all values to 7
8SET_TO_7 0 7 L 8SET_TO_7
8SET_TO_7 1 7 L 8SET_TO_7
8SET_TO_7 3 3 L 8TO_MIDDLE_L
# Find the middle
8TO_MIDDLE_L 1 1 L 8TO_MIDDLE_L
8TO_MIDDLE_L 0 0 L 8TO_MIDDLE_L
8TO_MIDDLE_L 7 7 L 8TO_MIDDLE_L
8TO_MIDDLE_L 2 2 L 8TO_MIDDLE_L
8TO_MIDDLE_L 3 3 L 8TO_MIDDLE_L
8TO_MIDDLE_L 4 4 L 8TO_MIDDLE_L
8TO_MIDDLE_L 5 5 L 8TO_3_S1
#GO_TO_Sn: 3

8TO_3_S1 6 6 L 8TO_3_S2
8TO_3_S1 9 9 L 8TO_3_S2
8TO_3_S2 0 0 L 8TO_3_S2
8TO_3_S2 1 1 L 8TO_3_S2
8TO_3_S2 7 7 L 8TO_3_S2
8TO_3_S2 8 8 L 8TO_3_S2
8TO_3_S2 6 6 L 8TO_3_S3
8TO_3_S2 9 9 L 8TO_3_S3
8TO_3_S3 0 0 L 8TO_3_S3
8TO_3_S3 1 1 L 8TO_3_S3
8TO_3_S3 7 7 L 8TO_3_S3
8TO_3_S3 8 8 L 8TO_3_S3
8TO_3_S3 6 6 L 8COPY_VALUE
8TO_3_S3 9 6 L 8COPY_VALUE
# Move Left until start of S3
# Copy the first non-7/8 value
8COPY_VALUE 0 7 R 8MOVE_ZERO
8COPY_VALUE 1 8 R 8MOVE_ONE
8COPY_VALUE 7 7 L 8COPY_VALUE
8COPY_VALUE 8 8 L 8COPY_VALUE
8COPY_VALUE 6 6 R 8RESTORE_VALUE

# Move a 0 to number B
8MOVE_ZERO 0 0 R 8MOVE_ZERO
8MOVE_ZERO 1 1 R 8MOVE_ZERO
8MOVE_ZERO 2 2 R 8MOVE_ZERO
8MOVE_ZERO 3 3 R 8MOVE_ZERO
8MOVE_ZERO 4 4 L 8MOVE_ZERO_2
8MOVE_ZERO 5 5 R 8MOVE_ZERO
8MOVE_ZERO 6 6 R 8MOVE_ZERO
8MOVE_ZERO 7 7 R 8MOVE_ZERO
8MOVE_ZERO 8 8 R 8MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
8MOVE_ZERO_2 0 0 L 8MOVE_ZERO_2
8MOVE_ZERO_2 1 1 L 8MOVE_ZERO_2
8MOVE_ZERO_2 7 0 S 8TO_MIDDLE_L
# Move a 1 to number B
8MOVE_ONE 0 0 R 8MOVE_ONE
8MOVE_ONE 1 1 R 8MOVE_ONE
8MOVE_ONE 2 2 R 8MOVE_ONE
8MOVE_ONE 3 3 R 8MOVE_ONE
8MOVE_ONE 4 4 L 8MOVE_ONE_2
8MOVE_ONE 5 5 R 8MOVE_ONE
8MOVE_ONE 6 6 R 8MOVE_ONE
8MOVE_ONE 7 7 R 8MOVE_ONE
8MOVE_ONE 8 8 R 8MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
8MOVE_ONE_2 0 0 L 8MOVE_ONE_2
8MOVE_ONE_2 1 1 L 8MOVE_ONE_2
8MOVE_ONE_2 7 1 S 8TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
8RESTORE_VALUE 7 0 R 8RESTORE_VALUE
8RESTORE_VALUE 8 1 R 8RESTORE_VALUE
8RESTORE_VALUE 6 6 S 8TO_START
# Go back to the start
8TO_START 0 0 R 8TO_START
8TO_START 1 1 R 8TO_START
8TO_START 6 6 R 8TO_START
8TO_START 5 5 S 8END



#
#asm LOAD S8 C
#


8END 5 5 S 9START

# Start of loading
9START 5 5 R 9TO_C_END_R
# To end of number C
9TO_C_END_R 0 0 R 9TO_C_END_R
9TO_C_END_R 1 1 R 9TO_C_END_R
9TO_C_END_R 2 2 R 9TO_C_END_R
9TO_C_END_R 3 3 R 9TO_C_END_R
9TO_C_END_R 4 4 R 9TO_C_END_R
9TO_C_END_R 10 10 L 9SET_TO_7

# Move to the start of number C, and set all values to 7
9SET_TO_7 0 7 L 9SET_TO_7
9SET_TO_7 1 7 L 9SET_TO_7
9SET_TO_7 4 4 L 9TO_MIDDLE_L
# Find the middle
9TO_MIDDLE_L 1 1 L 9TO_MIDDLE_L
9TO_MIDDLE_L 0 0 L 9TO_MIDDLE_L
9TO_MIDDLE_L 7 7 L 9TO_MIDDLE_L
9TO_MIDDLE_L 2 2 L 9TO_MIDDLE_L
9TO_MIDDLE_L 3 3 L 9TO_MIDDLE_L
9TO_MIDDLE_L 4 4 L 9TO_MIDDLE_L
9TO_MIDDLE_L 5 5 L 9TO_8_S1
#GO_TO_Sn: 8

9TO_8_S1 6 6 L 9TO_8_S2
9TO_8_S1 9 9 L 9TO_8_S2
9TO_8_S2 0 0 L 9TO_8_S2
9TO_8_S2 1 1 L 9TO_8_S2
9TO_8_S2 7 7 L 9TO_8_S2
9TO_8_S2 8 8 L 9TO_8_S2
9TO_8_S2 6 6 L 9TO_8_S3
9TO_8_S2 9 9 L 9TO_8_S3
9TO_8_S3 0 0 L 9TO_8_S3
9TO_8_S3 1 1 L 9TO_8_S3
9TO_8_S3 7 7 L 9TO_8_S3
9TO_8_S3 8 8 L 9TO_8_S3
9TO_8_S3 6 6 L 9TO_8_S4
9TO_8_S3 9 9 L 9TO_8_S4
9TO_8_S4 0 0 L 9TO_8_S4
9TO_8_S4 1 1 L 9TO_8_S4
9TO_8_S4 7 7 L 9TO_8_S4
9TO_8_S4 8 8 L 9TO_8_S4
9TO_8_S4 6 6 L 9TO_8_S5
9TO_8_S4 9 9 L 9TO_8_S5
9TO_8_S5 0 0 L 9TO_8_S5
9TO_8_S5 1 1 L 9TO_8_S5
9TO_8_S5 7 7 L 9TO_8_S5
9TO_8_S5 8 8 L 9TO_8_S5
9TO_8_S5 6 6 L 9TO_8_S6
9TO_8_S5 9 9 L 9TO_8_S6
9TO_8_S6 0 0 L 9TO_8_S6
9TO_8_S6 1 1 L 9TO_8_S6
9TO_8_S6 7 7 L 9TO_8_S6
9TO_8_S6 8 8 L 9TO_8_S6
9TO_8_S6 6 6 L 9TO_8_S7
9TO_8_S6 9 9 L 9TO_8_S7
9TO_8_S7 0 0 L 9TO_8_S7
9TO_8_S7 1 1 L 9TO_8_S7
9TO_8_S7 7 7 L 9TO_8_S7
9TO_8_S7 8 8 L 9TO_8_S7
9TO_8_S7 6 6 L 9TO_8_S8
9TO_8_S7 9 9 L 9TO_8_S8
9TO_8_S8 0 0 L 9TO_8_S8
9TO_8_S8 1 1 L 9TO_8_S8
9TO_8_S8 7 7 L 9TO_8_S8
9TO_8_S8 8 8 L 9TO_8_S8
9TO_8_S8 6 6 L 9COPY_VALUE
9TO_8_S8 9 6 L 9COPY_VALUE
# Move Left until start of S8
# Copy the first non-7/8 value
9COPY_VALUE 0 7 R 9MOVE_ZERO
9COPY_VALUE 1 8 R 9MOVE_ONE
9COPY_VALUE 7 7 L 9COPY_VALUE
9COPY_VALUE 8 8 L 9COPY_VALUE
9COPY_VALUE 6 6 R 9RESTORE_VALUE

# Move a 0 to number C
9MOVE_ZERO 0 0 R 9MOVE_ZERO
9MOVE_ZERO 1 1 R 9MOVE_ZERO
9MOVE_ZERO 2 2 R 9MOVE_ZERO
9MOVE_ZERO 3 3 R 9MOVE_ZERO
9MOVE_ZERO 4 4 R 9MOVE_ZERO
9MOVE_ZERO 10 10 L 9MOVE_ZERO_2
9MOVE_ZERO 5 5 R 9MOVE_ZERO
9MOVE_ZERO 6 6 R 9MOVE_ZERO
9MOVE_ZERO 7 7 R 9MOVE_ZERO
9MOVE_ZERO 8 8 R 9MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
9MOVE_ZERO_2 0 0 L 9MOVE_ZERO_2
9MOVE_ZERO_2 1 1 L 9MOVE_ZERO_2
9MOVE_ZERO_2 7 0 S 9TO_MIDDLE_L
# Move a 1 to number C
9MOVE_ONE 0 0 R 9MOVE_ONE
9MOVE_ONE 1 1 R 9MOVE_ONE
9MOVE_ONE 2 2 R 9MOVE_ONE
9MOVE_ONE 3 3 R 9MOVE_ONE
9MOVE_ONE 4 4 R 9MOVE_ONE
9MOVE_ONE 10 10 L 9MOVE_ONE_2
9MOVE_ONE 5 5 R 9MOVE_ONE
9MOVE_ONE 6 6 R 9MOVE_ONE
9MOVE_ONE 7 7 R 9MOVE_ONE
9MOVE_ONE 8 8 R 9MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
9MOVE_ONE_2 0 0 L 9MOVE_ONE_2
9MOVE_ONE_2 1 1 L 9MOVE_ONE_2
9MOVE_ONE_2 7 1 S 9TO_MIDDLE_L
# Restore number C, translate 7 to 0 and 8 to 1
9RESTORE_VALUE 7 0 R 9RESTORE_VALUE
9RESTORE_VALUE 8 1 R 9RESTORE_VALUE
9RESTORE_VALUE 6 6 S 9TO_START
# Go back to the start
9TO_START 0 0 R 9TO_START
9TO_START 1 1 R 9TO_START
9TO_START 6 6 R 9TO_START
9TO_START 5 5 S 9END



#
#asm MUL
#


9END 5 5 S 10START

# Start of the binary multiplication
10START 5 5 R 10CLEAR_A

# Clear A
10CLEAR_A 1 0 R 10CLEAR_A
10CLEAR_A 0 0 R 10CLEAR_A
10CLEAR_A 2 2 R 10CLEAR_A
10CLEAR_A 3 3 R 10FIND_B_END

# Find the end of the B
10FIND_B_END 0 0 R 10FIND_B_END
10FIND_B_END 1 1 R 10FIND_B_END
10FIND_B_END 2 2 R 10FIND_B_END
10FIND_B_END 3 3 R 10FIND_B_END
10FIND_B_END 7 7 R 10FIND_B_END
10FIND_B_END 8 8 R 10FIND_B_END
10FIND_B_END 4 4 L 10CHECK_B

# Check last digit of B
# If last digit is 0, multiply C by 2
# If last digit is 1, Add C to A and then multiply C by 2
10CHECK_B 11 11 L 10CHECK_B
10CHECK_B 0 11 R 10SHIFT_C
10CHECK_B 1 11 R 10ADD_C_TO_A_0
10CHECK_B 3 3 R 10CLEAR_B

## Multiply C by shifting each bit to the left

# First go to end of C
10SHIFT_C 0 0 R 10SHIFT_C
10SHIFT_C 1 1 R 10SHIFT_C
10SHIFT_C 11 11 R 10SHIFT_C
10SHIFT_C 4 4 R 10SHIFT_C
10SHIFT_C 10 10 L 10SHIFT_C_ZERO

# Place a 0 and shift left
10SHIFT_C_ZERO 0 0 L 10SHIFT_C_ZERO
10SHIFT_C_ZERO 1 0 L 10SHIFT_C_ONE
10SHIFT_C_ZERO 4 4 L 10CHECK_B

# Place a 1 and shift left
10SHIFT_C_ONE 0 1 L 10SHIFT_C_ZERO
10SHIFT_C_ONE 1 1 L 10SHIFT_C_ONE
10SHIFT_C_ONE 4 4 L 10CHECK_B

## Add C to A

# First go to end of C
10ADD_C_TO_A_0 0 0 R 10ADD_C_TO_A_0
10ADD_C_TO_A_0 1 1 R 10ADD_C_TO_A_0
10ADD_C_TO_A_0 3 3 R 10ADD_C_TO_A_0
10ADD_C_TO_A_0 4 4 R 10ADD_C_TO_A_0
10ADD_C_TO_A_0 7 7 R 10ADD_C_TO_A_0
10ADD_C_TO_A_0 8 8 R 10ADD_C_TO_A_0
10ADD_C_TO_A_0 11 11 R 10ADD_C_TO_A_0
10ADD_C_TO_A_0 10 10 L 10ADD_C_TO_A_1

# Find first non-moved digit of C, and replace 0 with 7 and 1 with 8
10ADD_C_TO_A_1 0 7 L 10ADD_C_TO_A_ZERO
10ADD_C_TO_A_1 1 8 L 10ADD_C_TO_A_ONE
10ADD_C_TO_A_1 7 7 L 10ADD_C_TO_A_1
10ADD_C_TO_A_1 8 8 L 10ADD_C_TO_A_1
10ADD_C_TO_A_1 4 4 R 10ADD_C_TO_A_RESTORE_0

# Move a 0 from C to end of A
10ADD_C_TO_A_ZERO 0 0 L 10ADD_C_TO_A_ZERO
10ADD_C_TO_A_ZERO 1 1 L 10ADD_C_TO_A_ZERO
10ADD_C_TO_A_ZERO 4 4 L 10ADD_C_TO_A_ZERO
10ADD_C_TO_A_ZERO 7 7 L 10ADD_C_TO_A_ZERO
10ADD_C_TO_A_ZERO 8 8 L 10ADD_C_TO_A_ZERO
10ADD_C_TO_A_ZERO 11 11 L 10ADD_C_TO_A_ZERO
10ADD_C_TO_A_ZERO 3 3 L 10ADD_C_TO_A_ZERO_1

# Set the 0 in A to 7, except if its a 1
10ADD_C_TO_A_ZERO_1 7 7 L 10ADD_C_TO_A_ZERO_1
10ADD_C_TO_A_ZERO_1 8 8 L 10ADD_C_TO_A_ZERO_1
10ADD_C_TO_A_ZERO_1 0 7 R 10ADD_C_TO_A_0
10ADD_C_TO_A_ZERO_1 1 8 R 10ADD_C_TO_A_0

# Move a 1 from C to end of A
10ADD_C_TO_A_ONE 0 0 L 10ADD_C_TO_A_ONE
10ADD_C_TO_A_ONE 1 1 L 10ADD_C_TO_A_ONE
10ADD_C_TO_A_ONE 4 4 L 10ADD_C_TO_A_ONE
10ADD_C_TO_A_ONE 7 7 L 10ADD_C_TO_A_ONE
10ADD_C_TO_A_ONE 8 8 L 10ADD_C_TO_A_ONE
10ADD_C_TO_A_ONE 11 11 L 10ADD_C_TO_A_ONE
10ADD_C_TO_A_ONE 3 3 L 10ADD_C_TO_A_ONE_1

# Set the 1 in A to 8, unless if its already a 1
10ADD_C_TO_A_ONE_1 7 7 L 10ADD_C_TO_A_ONE_1
10ADD_C_TO_A_ONE_1 8 8 L 10ADD_C_TO_A_ONE_1
10ADD_C_TO_A_ONE_1 0 8 R 10ADD_C_TO_A_0
10ADD_C_TO_A_ONE_1 1 7 L 10ADD_C_TO_A_ONE_1_MOVE

# Move the 1 to the next digit, if its a 1, make it 0 and move to the next digit
10ADD_C_TO_A_ONE_1_MOVE 0 1 R 10ADD_C_TO_A_0
10ADD_C_TO_A_ONE_1_MOVE 1 0 L 10ADD_C_TO_A_ONE_1_MOVE

# Restore the number in C
10ADD_C_TO_A_RESTORE_0 7 0 R 10ADD_C_TO_A_RESTORE_0
10ADD_C_TO_A_RESTORE_0 8 1 R 10ADD_C_TO_A_RESTORE_0
10ADD_C_TO_A_RESTORE_0 10 10 L 10ADD_C_TO_A_RESTORE_1

# Move to the start of A
10ADD_C_TO_A_RESTORE_1 0 0 L 10ADD_C_TO_A_RESTORE_1
10ADD_C_TO_A_RESTORE_1 1 1 L 10ADD_C_TO_A_RESTORE_1
10ADD_C_TO_A_RESTORE_1 3 3 L 10ADD_C_TO_A_RESTORE_1
10ADD_C_TO_A_RESTORE_1 4 4 L 10ADD_C_TO_A_RESTORE_1
10ADD_C_TO_A_RESTORE_1 7 7 L 10ADD_C_TO_A_RESTORE_1
10ADD_C_TO_A_RESTORE_1 8 8 L 10ADD_C_TO_A_RESTORE_1
10ADD_C_TO_A_RESTORE_1 11 11 L 10ADD_C_TO_A_RESTORE_1
10ADD_C_TO_A_RESTORE_1 2 2 R 10ADD_C_TO_A_RESTORE_2

# Restore the number in A, and move to the end of B
10ADD_C_TO_A_RESTORE_2 0 0 R 10ADD_C_TO_A_RESTORE_2
10ADD_C_TO_A_RESTORE_2 1 1 R 10ADD_C_TO_A_RESTORE_2
10ADD_C_TO_A_RESTORE_2 11 11 R 10ADD_C_TO_A_RESTORE_2
10ADD_C_TO_A_RESTORE_2 3 3 R 10ADD_C_TO_A_RESTORE_2
10ADD_C_TO_A_RESTORE_2 7 0 R 10ADD_C_TO_A_RESTORE_2
10ADD_C_TO_A_RESTORE_2 8 1 R 10ADD_C_TO_A_RESTORE_2
10ADD_C_TO_A_RESTORE_2 4 4 L 10SHIFT_C

# Clear B, set all to 0
10CLEAR_B 11 0 R 10CLEAR_B
10CLEAR_B 4 4 L 10RETURN

# Return to the start of the program
10RETURN 0 0 L 10RETURN
10RETURN 1 1 L 10RETURN
10RETURN 2 2 L 10RETURN
10RETURN 3 3 L 10RETURN
10RETURN 5 5 S 10END


#
#asm STORE S6 A
#


10END 5 5 S 11START

11START 5 5 L 11TO_6_S1
#GO_TO_Sn: 6

11TO_6_S1 6 6 L 11TO_6_S2
11TO_6_S1 9 9 L 11TO_6_S2
11TO_6_S2 0 0 L 11TO_6_S2
11TO_6_S2 1 1 L 11TO_6_S2
11TO_6_S2 7 7 L 11TO_6_S2
11TO_6_S2 8 8 L 11TO_6_S2
11TO_6_S2 6 6 L 11TO_6_S3
11TO_6_S2 9 9 L 11TO_6_S3
11TO_6_S3 0 0 L 11TO_6_S3
11TO_6_S3 1 1 L 11TO_6_S3
11TO_6_S3 7 7 L 11TO_6_S3
11TO_6_S3 8 8 L 11TO_6_S3
11TO_6_S3 6 6 L 11TO_6_S4
11TO_6_S3 9 9 L 11TO_6_S4
11TO_6_S4 0 0 L 11TO_6_S4
11TO_6_S4 1 1 L 11TO_6_S4
11TO_6_S4 7 7 L 11TO_6_S4
11TO_6_S4 8 8 L 11TO_6_S4
11TO_6_S4 6 6 L 11TO_6_S5
11TO_6_S4 9 9 L 11TO_6_S5
11TO_6_S5 0 0 L 11TO_6_S5
11TO_6_S5 1 1 L 11TO_6_S5
11TO_6_S5 7 7 L 11TO_6_S5
11TO_6_S5 8 8 L 11TO_6_S5
11TO_6_S5 6 6 L 11TO_6_S6
11TO_6_S5 9 9 L 11TO_6_S6
11TO_6_S6 0 0 L 11TO_6_S6
11TO_6_S6 1 1 L 11TO_6_S6
11TO_6_S6 7 7 L 11TO_6_S6
11TO_6_S6 8 8 L 11TO_6_S6
11TO_6_S6 6 9 L 11SET_TO_7
11TO_6_S6 9 9 L 11SET_TO_7

# Set all the values to 7 untill the start of S1
11SET_TO_7 0 7 L 11SET_TO_7
11SET_TO_7 1 7 L 11SET_TO_7
11SET_TO_7 6 6 R 11TO_MIDDLE_R
# Find the middle
11TO_MIDDLE_R 1 1 R 11TO_MIDDLE_R
11TO_MIDDLE_R 0 0 R 11TO_MIDDLE_R
11TO_MIDDLE_R 7 7 R 11TO_MIDDLE_R
11TO_MIDDLE_R 2 2 R 11TO_MIDDLE_R
11TO_MIDDLE_R 6 6 R 11TO_MIDDLE_R
11TO_MIDDLE_R 9 9 R 11TO_MIDDLE_R
11TO_MIDDLE_R 5 5 R 11A_END

# to end of A
11A_END 0 0 R 11A_END
11A_END 1 1 R 11A_END
11A_END 2 2 R 11A_END
11A_END 7 7 R 11A_END
11A_END 8 8 R 11A_END
11A_END 3 3 L 11COPY_VALUE

# Move Left until end of A
# Copy the first non-7/MovH8 value
11COPY_VALUE 0 7 L 11MOVE_ZERO
11COPY_VALUE 1 8 L 11MOVE_ONE
11COPY_VALUE EndA EndA L 11COPY_VALUE
11COPY_VALUE 7 7 L 11COPY_VALUE
11COPY_VALUE 8 8 L 11COPY_VALUE
11COPY_VALUE 2 2 R 11RESTORE_VALUE

# Move a 0 to number 9
11MOVE_ZERO 0 0 L 11MOVE_ZERO
11MOVE_ZERO 1 1 L 11MOVE_ZERO
11MOVE_ZERO 2 2 L 11MOVE_ZERO
11MOVE_ZERO 3 3 L 11MOVE_ZERO
11MOVE_ZERO 4 4 L 11MOVE_ZERO
11MOVE_ZERO 9 9 L 11MOVE_ZERO_2
11MOVE_ZERO 5 5 L 11MOVE_ZERO
11MOVE_ZERO 6 6 L 11MOVE_ZERO
11MOVE_ZERO 7 7 L 11MOVE_ZERO
11MOVE_ZERO 8 8 L 11MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
11MOVE_ZERO_2 0 0 L 11MOVE_ZERO_2
11MOVE_ZERO_2 1 1 L 11MOVE_ZERO_2
11MOVE_ZERO_2 7 0 S 11TO_MIDDLE_R
# Move a 1 to number 9
11MOVE_ONE 0 0 L 11MOVE_ONE
11MOVE_ONE 1 1 L 11MOVE_ONE
11MOVE_ONE 2 2 L 11MOVE_ONE
11MOVE_ONE 3 3 L 11MOVE_ONE
11MOVE_ONE 4 4 L 11MOVE_ONE
11MOVE_ONE 9 9 L 11MOVE_ONE_2
11MOVE_ONE 5 5 L 11MOVE_ONE
11MOVE_ONE 6 6 L 11MOVE_ONE
11MOVE_ONE 7 7 L 11MOVE_ONE
11MOVE_ONE 8 8 L 11MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
11MOVE_ONE_2 0 0 L 11MOVE_ONE_2
11MOVE_ONE_2 1 1 L 11MOVE_ONE_2
11MOVE_ONE_2 7 1 S 11TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
11RESTORE_VALUE 7 0 R 11RESTORE_VALUE
11RESTORE_VALUE 8 1 R 11RESTORE_VALUE
11RESTORE_VALUE 3 3 L 11RESET_STORAGE_MARKER
# Reset 9 to 6
11RESET_STORAGE_MARKER 0 0 L 11RESET_STORAGE_MARKER
11RESET_STORAGE_MARKER 1 1 L 11RESET_STORAGE_MARKER
11RESET_STORAGE_MARKER 5 5 L 11RESET_STORAGE_MARKER
11RESET_STORAGE_MARKER 6 6 L 11RESET_STORAGE_MARKER
11RESET_STORAGE_MARKER 2 2 L 11RESET_STORAGE_MARKER
11RESET_STORAGE_MARKER 9 6 R 11RETURN_TO_MIDDLE
# Return to middle
11RETURN_TO_MIDDLE 0 0 R 11RETURN_TO_MIDDLE
11RETURN_TO_MIDDLE 1 1 R 11RETURN_TO_MIDDLE
11RETURN_TO_MIDDLE 6 6 R 11RETURN_TO_MIDDLE
11RETURN_TO_MIDDLE 5 5 S 11END


#
#asm SET S7 5
#


11END 5 5 S 12START

12START 5 5 L 12TO_7_S1
#GO_TO_Sn: 7

12TO_7_S1 6 6 L 12TO_7_S2
12TO_7_S1 9 9 L 12TO_7_S2
12TO_7_S2 0 0 L 12TO_7_S2
12TO_7_S2 1 1 L 12TO_7_S2
12TO_7_S2 7 7 L 12TO_7_S2
12TO_7_S2 8 8 L 12TO_7_S2
12TO_7_S2 6 6 L 12TO_7_S3
12TO_7_S2 9 9 L 12TO_7_S3
12TO_7_S3 0 0 L 12TO_7_S3
12TO_7_S3 1 1 L 12TO_7_S3
12TO_7_S3 7 7 L 12TO_7_S3
12TO_7_S3 8 8 L 12TO_7_S3
12TO_7_S3 6 6 L 12TO_7_S4
12TO_7_S3 9 9 L 12TO_7_S4
12TO_7_S4 0 0 L 12TO_7_S4
12TO_7_S4 1 1 L 12TO_7_S4
12TO_7_S4 7 7 L 12TO_7_S4
12TO_7_S4 8 8 L 12TO_7_S4
12TO_7_S4 6 6 L 12TO_7_S5
12TO_7_S4 9 9 L 12TO_7_S5
12TO_7_S5 0 0 L 12TO_7_S5
12TO_7_S5 1 1 L 12TO_7_S5
12TO_7_S5 7 7 L 12TO_7_S5
12TO_7_S5 8 8 L 12TO_7_S5
12TO_7_S5 6 6 L 12TO_7_S6
12TO_7_S5 9 9 L 12TO_7_S6
12TO_7_S6 0 0 L 12TO_7_S6
12TO_7_S6 1 1 L 12TO_7_S6
12TO_7_S6 7 7 L 12TO_7_S6
12TO_7_S6 8 8 L 12TO_7_S6
12TO_7_S6 6 6 L 12TO_7_S7
12TO_7_S6 9 9 L 12TO_7_S7
12TO_7_S7 0 0 L 12TO_7_S7
12TO_7_S7 1 1 L 12TO_7_S7
12TO_7_S7 7 7 L 12TO_7_S7
12TO_7_S7 8 8 L 12TO_7_S7
12TO_7_S7 6 6 L 12RESET_S
12TO_7_S7 9 6 L 12RESET_S

# Reset to 0
12RESET_S 0 0 L 12RESET_S
12RESET_S 1 0 L 12RESET_S
12RESET_S 6 6 R 12SET_1D
12SET_1D 0 0 R 12SET_2D
12SET_2D 0 0 R 12SET_3D
12SET_3D 0 0 R 12SET_4D
12SET_4D 0 0 R 12SET_5D
12SET_5D 0 0 R 12SET_6D
12SET_6D 0 1 R 12SET_7D
12SET_7D 0 0 R 12SET_8D
12SET_8D 0 1 R 12RETURN

# Return to middle
12RETURN 0 0 R 12RETURN
12RETURN 1 1 R 12RETURN
12RETURN 6 6 R 12RETURN
12RETURN 5 5 S 12END


#
#asm LOAD S6 A
#


12END 5 5 S 13START

# Start of loading
13START 5 5 R 13TO_A_END_R
# To end of number A
13TO_A_END_R 0 0 R 13TO_A_END_R
13TO_A_END_R 1 1 R 13TO_A_END_R
13TO_A_END_R 2 2 R 13TO_A_END_R
13TO_A_END_R 3 3 L 13SET_TO_7

# Move to the start of number A, and set all values to 7
13SET_TO_7 0 7 L 13SET_TO_7
13SET_TO_7 1 7 L 13SET_TO_7
13SET_TO_7 2 2 L 13TO_MIDDLE_L
# Find the middle
13TO_MIDDLE_L 1 1 L 13TO_MIDDLE_L
13TO_MIDDLE_L 0 0 L 13TO_MIDDLE_L
13TO_MIDDLE_L 7 7 L 13TO_MIDDLE_L
13TO_MIDDLE_L 2 2 L 13TO_MIDDLE_L
13TO_MIDDLE_L 3 3 L 13TO_MIDDLE_L
13TO_MIDDLE_L 4 4 L 13TO_MIDDLE_L
13TO_MIDDLE_L 5 5 L 13TO_6_S1
#GO_TO_Sn: 6

13TO_6_S1 6 6 L 13TO_6_S2
13TO_6_S1 9 9 L 13TO_6_S2
13TO_6_S2 0 0 L 13TO_6_S2
13TO_6_S2 1 1 L 13TO_6_S2
13TO_6_S2 7 7 L 13TO_6_S2
13TO_6_S2 8 8 L 13TO_6_S2
13TO_6_S2 6 6 L 13TO_6_S3
13TO_6_S2 9 9 L 13TO_6_S3
13TO_6_S3 0 0 L 13TO_6_S3
13TO_6_S3 1 1 L 13TO_6_S3
13TO_6_S3 7 7 L 13TO_6_S3
13TO_6_S3 8 8 L 13TO_6_S3
13TO_6_S3 6 6 L 13TO_6_S4
13TO_6_S3 9 9 L 13TO_6_S4
13TO_6_S4 0 0 L 13TO_6_S4
13TO_6_S4 1 1 L 13TO_6_S4
13TO_6_S4 7 7 L 13TO_6_S4
13TO_6_S4 8 8 L 13TO_6_S4
13TO_6_S4 6 6 L 13TO_6_S5
13TO_6_S4 9 9 L 13TO_6_S5
13TO_6_S5 0 0 L 13TO_6_S5
13TO_6_S5 1 1 L 13TO_6_S5
13TO_6_S5 7 7 L 13TO_6_S5
13TO_6_S5 8 8 L 13TO_6_S5
13TO_6_S5 6 6 L 13TO_6_S6
13TO_6_S5 9 9 L 13TO_6_S6
13TO_6_S6 0 0 L 13TO_6_S6
13TO_6_S6 1 1 L 13TO_6_S6
13TO_6_S6 7 7 L 13TO_6_S6
13TO_6_S6 8 8 L 13TO_6_S6
13TO_6_S6 6 6 L 13COPY_VALUE
13TO_6_S6 9 6 L 13COPY_VALUE
# Move Left until start of S6
# Copy the first non-7/8 value
13COPY_VALUE 0 7 R 13MOVE_ZERO
13COPY_VALUE 1 8 R 13MOVE_ONE
13COPY_VALUE 7 7 L 13COPY_VALUE
13COPY_VALUE 8 8 L 13COPY_VALUE
13COPY_VALUE 6 6 R 13RESTORE_VALUE

# Move a 0 to number A
13MOVE_ZERO 0 0 R 13MOVE_ZERO
13MOVE_ZERO 1 1 R 13MOVE_ZERO
13MOVE_ZERO 2 2 R 13MOVE_ZERO
13MOVE_ZERO 3 3 L 13MOVE_ZERO_2
13MOVE_ZERO 4 4 R 13MOVE_ZERO
13MOVE_ZERO 5 5 R 13MOVE_ZERO
13MOVE_ZERO 6 6 R 13MOVE_ZERO
13MOVE_ZERO 7 7 R 13MOVE_ZERO
13MOVE_ZERO 8 8 R 13MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
13MOVE_ZERO_2 0 0 L 13MOVE_ZERO_2
13MOVE_ZERO_2 1 1 L 13MOVE_ZERO_2
13MOVE_ZERO_2 7 0 S 13TO_MIDDLE_L
# Move a 1 to number A
13MOVE_ONE 0 0 R 13MOVE_ONE
13MOVE_ONE 1 1 R 13MOVE_ONE
13MOVE_ONE 2 2 R 13MOVE_ONE
13MOVE_ONE 3 3 L 13MOVE_ONE_2
13MOVE_ONE 4 4 R 13MOVE_ONE
13MOVE_ONE 5 5 R 13MOVE_ONE
13MOVE_ONE 6 6 R 13MOVE_ONE
13MOVE_ONE 7 7 R 13MOVE_ONE
13MOVE_ONE 8 8 R 13MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
13MOVE_ONE_2 0 0 L 13MOVE_ONE_2
13MOVE_ONE_2 1 1 L 13MOVE_ONE_2
13MOVE_ONE_2 7 1 S 13TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
13RESTORE_VALUE 7 0 R 13RESTORE_VALUE
13RESTORE_VALUE 8 1 R 13RESTORE_VALUE
13RESTORE_VALUE 6 6 S 13TO_START
# Go back to the start
13TO_START 0 0 R 13TO_START
13TO_START 1 1 R 13TO_START
13TO_START 6 6 R 13TO_START
13TO_START 5 5 S 13END



#
#asm LOAD S7 B
#


13END 5 5 S 14START

# Start of loading
14START 5 5 R 14TO_B_END_R
# To end of number B
14TO_B_END_R 0 0 R 14TO_B_END_R
14TO_B_END_R 1 1 R 14TO_B_END_R
14TO_B_END_R 2 2 R 14TO_B_END_R
14TO_B_END_R 3 3 R 14TO_B_END_R
14TO_B_END_R 4 4 L 14SET_TO_7

# Move to the start of number B, and set all values to 7
14SET_TO_7 0 7 L 14SET_TO_7
14SET_TO_7 1 7 L 14SET_TO_7
14SET_TO_7 3 3 L 14TO_MIDDLE_L
# Find the middle
14TO_MIDDLE_L 1 1 L 14TO_MIDDLE_L
14TO_MIDDLE_L 0 0 L 14TO_MIDDLE_L
14TO_MIDDLE_L 7 7 L 14TO_MIDDLE_L
14TO_MIDDLE_L 2 2 L 14TO_MIDDLE_L
14TO_MIDDLE_L 3 3 L 14TO_MIDDLE_L
14TO_MIDDLE_L 4 4 L 14TO_MIDDLE_L
14TO_MIDDLE_L 5 5 L 14TO_7_S1
#GO_TO_Sn: 7

14TO_7_S1 6 6 L 14TO_7_S2
14TO_7_S1 9 9 L 14TO_7_S2
14TO_7_S2 0 0 L 14TO_7_S2
14TO_7_S2 1 1 L 14TO_7_S2
14TO_7_S2 7 7 L 14TO_7_S2
14TO_7_S2 8 8 L 14TO_7_S2
14TO_7_S2 6 6 L 14TO_7_S3
14TO_7_S2 9 9 L 14TO_7_S3
14TO_7_S3 0 0 L 14TO_7_S3
14TO_7_S3 1 1 L 14TO_7_S3
14TO_7_S3 7 7 L 14TO_7_S3
14TO_7_S3 8 8 L 14TO_7_S3
14TO_7_S3 6 6 L 14TO_7_S4
14TO_7_S3 9 9 L 14TO_7_S4
14TO_7_S4 0 0 L 14TO_7_S4
14TO_7_S4 1 1 L 14TO_7_S4
14TO_7_S4 7 7 L 14TO_7_S4
14TO_7_S4 8 8 L 14TO_7_S4
14TO_7_S4 6 6 L 14TO_7_S5
14TO_7_S4 9 9 L 14TO_7_S5
14TO_7_S5 0 0 L 14TO_7_S5
14TO_7_S5 1 1 L 14TO_7_S5
14TO_7_S5 7 7 L 14TO_7_S5
14TO_7_S5 8 8 L 14TO_7_S5
14TO_7_S5 6 6 L 14TO_7_S6
14TO_7_S5 9 9 L 14TO_7_S6
14TO_7_S6 0 0 L 14TO_7_S6
14TO_7_S6 1 1 L 14TO_7_S6
14TO_7_S6 7 7 L 14TO_7_S6
14TO_7_S6 8 8 L 14TO_7_S6
14TO_7_S6 6 6 L 14TO_7_S7
14TO_7_S6 9 9 L 14TO_7_S7
14TO_7_S7 0 0 L 14TO_7_S7
14TO_7_S7 1 1 L 14TO_7_S7
14TO_7_S7 7 7 L 14TO_7_S7
14TO_7_S7 8 8 L 14TO_7_S7
14TO_7_S7 6 6 L 14COPY_VALUE
14TO_7_S7 9 6 L 14COPY_VALUE
# Move Left until start of S7
# Copy the first non-7/8 value
14COPY_VALUE 0 7 R 14MOVE_ZERO
14COPY_VALUE 1 8 R 14MOVE_ONE
14COPY_VALUE 7 7 L 14COPY_VALUE
14COPY_VALUE 8 8 L 14COPY_VALUE
14COPY_VALUE 6 6 R 14RESTORE_VALUE

# Move a 0 to number B
14MOVE_ZERO 0 0 R 14MOVE_ZERO
14MOVE_ZERO 1 1 R 14MOVE_ZERO
14MOVE_ZERO 2 2 R 14MOVE_ZERO
14MOVE_ZERO 3 3 R 14MOVE_ZERO
14MOVE_ZERO 4 4 L 14MOVE_ZERO_2
14MOVE_ZERO 5 5 R 14MOVE_ZERO
14MOVE_ZERO 6 6 R 14MOVE_ZERO
14MOVE_ZERO 7 7 R 14MOVE_ZERO
14MOVE_ZERO 8 8 R 14MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
14MOVE_ZERO_2 0 0 L 14MOVE_ZERO_2
14MOVE_ZERO_2 1 1 L 14MOVE_ZERO_2
14MOVE_ZERO_2 7 0 S 14TO_MIDDLE_L
# Move a 1 to number B
14MOVE_ONE 0 0 R 14MOVE_ONE
14MOVE_ONE 1 1 R 14MOVE_ONE
14MOVE_ONE 2 2 R 14MOVE_ONE
14MOVE_ONE 3 3 R 14MOVE_ONE
14MOVE_ONE 4 4 L 14MOVE_ONE_2
14MOVE_ONE 5 5 R 14MOVE_ONE
14MOVE_ONE 6 6 R 14MOVE_ONE
14MOVE_ONE 7 7 R 14MOVE_ONE
14MOVE_ONE 8 8 R 14MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
14MOVE_ONE_2 0 0 L 14MOVE_ONE_2
14MOVE_ONE_2 1 1 L 14MOVE_ONE_2
14MOVE_ONE_2 7 1 S 14TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
14RESTORE_VALUE 7 0 R 14RESTORE_VALUE
14RESTORE_VALUE 8 1 R 14RESTORE_VALUE
14RESTORE_VALUE 6 6 S 14TO_START
# Go back to the start
14TO_START 0 0 R 14TO_START
14TO_START 1 1 R 14TO_START
14TO_START 6 6 R 14TO_START
14TO_START 5 5 S 14END



#
#asm ADD
#


14END 5 5 S 15START

# Start of the addition program
15START 5 5 R 15FIND_B_END

# Find the end of the second number
15FIND_B_END 0 0 R 15FIND_B_END
15FIND_B_END 1 1 R 15FIND_B_END
15FIND_B_END 2 2 R 15FIND_B_END
15FIND_B_END 3 3 R 15FIND_B_END
15FIND_B_END 7 7 R 15FIND_B_END
15FIND_B_END 8 8 R 15FIND_B_END
15FIND_B_END 4 4 L 15ADD_DIGIT

# Find first non-added digit
15ADD_DIGIT 7 7 L 15ADD_DIGIT
15ADD_DIGIT 8 8 L 15ADD_DIGIT
15ADD_DIGIT 0 7 L 15ADD_DIGIT_ZERO
15ADD_DIGIT 1 7 L 15ADD_DIGIT_ONE
15ADD_DIGIT 3 3 R 15RESTORE

# Add a zero
15ADD_DIGIT_ZERO 0 0 L 15ADD_DIGIT_ZERO
15ADD_DIGIT_ZERO 1 1 L 15ADD_DIGIT_ZERO
15ADD_DIGIT_ZERO 3 3 L 15ADD_DIGIT_ZERO_1
15ADD_DIGIT_ZERO_1 7 7 L 15ADD_DIGIT_ZERO_1
15ADD_DIGIT_ZERO_1 8 8 L 15ADD_DIGIT_ZERO_1
15ADD_DIGIT_ZERO_1 0 7 L 15FIND_B_END
15ADD_DIGIT_ZERO_1 1 8 L 15FIND_B_END

# Add a one
15ADD_DIGIT_ONE 0 0 L 15ADD_DIGIT_ONE
15ADD_DIGIT_ONE 1 1 L 15ADD_DIGIT_ONE
15ADD_DIGIT_ONE 3 3 L 15ADD_DIGIT_ONE_1
15ADD_DIGIT_ONE_1 7 7 L 15ADD_DIGIT_ONE_1
15ADD_DIGIT_ONE_1 8 8 L 15ADD_DIGIT_ONE_1
15ADD_DIGIT_ONE_1 0 8 L 15FIND_B_END
15ADD_DIGIT_ONE_1 1 7 L 15ADD_DIGIT_ONE_2

15ADD_DIGIT_ONE_2 0 1 R 15FIND_B_END
15ADD_DIGIT_ONE_2 1 0 L 15ADD_DIGIT_ONE_2

# Return to the middle of the tape
15RESTORE 7 0 R 15RESTORE
15RESTORE 8 1 R 15RESTORE
15RESTORE 4 4 L 15RESTORE_1

15RESTORE_1 0 0 L 15RESTORE_1
15RESTORE_1 1 1 L 15RESTORE_1
15RESTORE_1 2 2 L 15RESTORE_1
15RESTORE_1 3 3 L 15RESTORE_1
15RESTORE_1 7 0 L 15RESTORE_1
15RESTORE_1 8 1 L 15RESTORE_1
15RESTORE_1 5 5 S 15END



#
#asm STORE S4 A
#


15END 5 5 S 16START

16START 5 5 L 16TO_4_S1
#GO_TO_Sn: 4

16TO_4_S1 6 6 L 16TO_4_S2
16TO_4_S1 9 9 L 16TO_4_S2
16TO_4_S2 0 0 L 16TO_4_S2
16TO_4_S2 1 1 L 16TO_4_S2
16TO_4_S2 7 7 L 16TO_4_S2
16TO_4_S2 8 8 L 16TO_4_S2
16TO_4_S2 6 6 L 16TO_4_S3
16TO_4_S2 9 9 L 16TO_4_S3
16TO_4_S3 0 0 L 16TO_4_S3
16TO_4_S3 1 1 L 16TO_4_S3
16TO_4_S3 7 7 L 16TO_4_S3
16TO_4_S3 8 8 L 16TO_4_S3
16TO_4_S3 6 6 L 16TO_4_S4
16TO_4_S3 9 9 L 16TO_4_S4
16TO_4_S4 0 0 L 16TO_4_S4
16TO_4_S4 1 1 L 16TO_4_S4
16TO_4_S4 7 7 L 16TO_4_S4
16TO_4_S4 8 8 L 16TO_4_S4
16TO_4_S4 6 9 L 16SET_TO_7
16TO_4_S4 9 9 L 16SET_TO_7

# Set all the values to 7 untill the start of S1
16SET_TO_7 0 7 L 16SET_TO_7
16SET_TO_7 1 7 L 16SET_TO_7
16SET_TO_7 6 6 R 16TO_MIDDLE_R
# Find the middle
16TO_MIDDLE_R 1 1 R 16TO_MIDDLE_R
16TO_MIDDLE_R 0 0 R 16TO_MIDDLE_R
16TO_MIDDLE_R 7 7 R 16TO_MIDDLE_R
16TO_MIDDLE_R 2 2 R 16TO_MIDDLE_R
16TO_MIDDLE_R 6 6 R 16TO_MIDDLE_R
16TO_MIDDLE_R 9 9 R 16TO_MIDDLE_R
16TO_MIDDLE_R 5 5 R 16A_END

# to end of A
16A_END 0 0 R 16A_END
16A_END 1 1 R 16A_END
16A_END 2 2 R 16A_END
16A_END 7 7 R 16A_END
16A_END 8 8 R 16A_END
16A_END 3 3 L 16COPY_VALUE

# Move Left until end of A
# Copy the first non-7/MovH8 value
16COPY_VALUE 0 7 L 16MOVE_ZERO
16COPY_VALUE 1 8 L 16MOVE_ONE
16COPY_VALUE EndA EndA L 16COPY_VALUE
16COPY_VALUE 7 7 L 16COPY_VALUE
16COPY_VALUE 8 8 L 16COPY_VALUE
16COPY_VALUE 2 2 R 16RESTORE_VALUE

# Move a 0 to number 9
16MOVE_ZERO 0 0 L 16MOVE_ZERO
16MOVE_ZERO 1 1 L 16MOVE_ZERO
16MOVE_ZERO 2 2 L 16MOVE_ZERO
16MOVE_ZERO 3 3 L 16MOVE_ZERO
16MOVE_ZERO 4 4 L 16MOVE_ZERO
16MOVE_ZERO 9 9 L 16MOVE_ZERO_2
16MOVE_ZERO 5 5 L 16MOVE_ZERO
16MOVE_ZERO 6 6 L 16MOVE_ZERO
16MOVE_ZERO 7 7 L 16MOVE_ZERO
16MOVE_ZERO 8 8 L 16MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
16MOVE_ZERO_2 0 0 L 16MOVE_ZERO_2
16MOVE_ZERO_2 1 1 L 16MOVE_ZERO_2
16MOVE_ZERO_2 7 0 S 16TO_MIDDLE_R
# Move a 1 to number 9
16MOVE_ONE 0 0 L 16MOVE_ONE
16MOVE_ONE 1 1 L 16MOVE_ONE
16MOVE_ONE 2 2 L 16MOVE_ONE
16MOVE_ONE 3 3 L 16MOVE_ONE
16MOVE_ONE 4 4 L 16MOVE_ONE
16MOVE_ONE 9 9 L 16MOVE_ONE_2
16MOVE_ONE 5 5 L 16MOVE_ONE
16MOVE_ONE 6 6 L 16MOVE_ONE
16MOVE_ONE 7 7 L 16MOVE_ONE
16MOVE_ONE 8 8 L 16MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
16MOVE_ONE_2 0 0 L 16MOVE_ONE_2
16MOVE_ONE_2 1 1 L 16MOVE_ONE_2
16MOVE_ONE_2 7 1 S 16TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
16RESTORE_VALUE 7 0 R 16RESTORE_VALUE
16RESTORE_VALUE 8 1 R 16RESTORE_VALUE
16RESTORE_VALUE 3 3 L 16RESET_STORAGE_MARKER
# Reset 9 to 6
16RESET_STORAGE_MARKER 0 0 L 16RESET_STORAGE_MARKER
16RESET_STORAGE_MARKER 1 1 L 16RESET_STORAGE_MARKER
16RESET_STORAGE_MARKER 5 5 L 16RESET_STORAGE_MARKER
16RESET_STORAGE_MARKER 6 6 L 16RESET_STORAGE_MARKER
16RESET_STORAGE_MARKER 2 2 L 16RESET_STORAGE_MARKER
16RESET_STORAGE_MARKER 9 6 R 16RETURN_TO_MIDDLE
# Return to middle
16RETURN_TO_MIDDLE 0 0 R 16RETURN_TO_MIDDLE
16RETURN_TO_MIDDLE 1 1 R 16RETURN_TO_MIDDLE
16RETURN_TO_MIDDLE 6 6 R 16RETURN_TO_MIDDLE
16RETURN_TO_MIDDLE 5 5 S 16END


#
#asm SET S10 61
#


16END 5 5 S 17START

17START 5 5 L 17TO_10_S1
#GO_TO_Sn: 10

17TO_10_S1 6 6 L 17TO_10_S2
17TO_10_S1 9 9 L 17TO_10_S2
17TO_10_S2 0 0 L 17TO_10_S2
17TO_10_S2 1 1 L 17TO_10_S2
17TO_10_S2 7 7 L 17TO_10_S2
17TO_10_S2 8 8 L 17TO_10_S2
17TO_10_S2 6 6 L 17TO_10_S3
17TO_10_S2 9 9 L 17TO_10_S3
17TO_10_S3 0 0 L 17TO_10_S3
17TO_10_S3 1 1 L 17TO_10_S3
17TO_10_S3 7 7 L 17TO_10_S3
17TO_10_S3 8 8 L 17TO_10_S3
17TO_10_S3 6 6 L 17TO_10_S4
17TO_10_S3 9 9 L 17TO_10_S4
17TO_10_S4 0 0 L 17TO_10_S4
17TO_10_S4 1 1 L 17TO_10_S4
17TO_10_S4 7 7 L 17TO_10_S4
17TO_10_S4 8 8 L 17TO_10_S4
17TO_10_S4 6 6 L 17TO_10_S5
17TO_10_S4 9 9 L 17TO_10_S5
17TO_10_S5 0 0 L 17TO_10_S5
17TO_10_S5 1 1 L 17TO_10_S5
17TO_10_S5 7 7 L 17TO_10_S5
17TO_10_S5 8 8 L 17TO_10_S5
17TO_10_S5 6 6 L 17TO_10_S6
17TO_10_S5 9 9 L 17TO_10_S6
17TO_10_S6 0 0 L 17TO_10_S6
17TO_10_S6 1 1 L 17TO_10_S6
17TO_10_S6 7 7 L 17TO_10_S6
17TO_10_S6 8 8 L 17TO_10_S6
17TO_10_S6 6 6 L 17TO_10_S7
17TO_10_S6 9 9 L 17TO_10_S7
17TO_10_S7 0 0 L 17TO_10_S7
17TO_10_S7 1 1 L 17TO_10_S7
17TO_10_S7 7 7 L 17TO_10_S7
17TO_10_S7 8 8 L 17TO_10_S7
17TO_10_S7 6 6 L 17TO_10_S8
17TO_10_S7 9 9 L 17TO_10_S8
17TO_10_S8 0 0 L 17TO_10_S8
17TO_10_S8 1 1 L 17TO_10_S8
17TO_10_S8 7 7 L 17TO_10_S8
17TO_10_S8 8 8 L 17TO_10_S8
17TO_10_S8 6 6 L 17TO_10_S9
17TO_10_S8 9 9 L 17TO_10_S9
17TO_10_S9 0 0 L 17TO_10_S9
17TO_10_S9 1 1 L 17TO_10_S9
17TO_10_S9 7 7 L 17TO_10_S9
17TO_10_S9 8 8 L 17TO_10_S9
17TO_10_S9 6 6 L 17TO_10_S10
17TO_10_S9 9 9 L 17TO_10_S10
17TO_10_S10 0 0 L 17TO_10_S10
17TO_10_S10 1 1 L 17TO_10_S10
17TO_10_S10 7 7 L 17TO_10_S10
17TO_10_S10 8 8 L 17TO_10_S10
17TO_10_S10 6 6 L 17RESET_S
17TO_10_S10 9 6 L 17RESET_S

# Reset to 0
17RESET_S 0 0 L 17RESET_S
17RESET_S 1 0 L 17RESET_S
17RESET_S 6 6 R 17SET_1D
17SET_1D 0 0 R 17SET_2D
17SET_2D 0 0 R 17SET_3D
17SET_3D 0 1 R 17SET_4D
17SET_4D 0 1 R 17SET_5D
17SET_5D 0 1 R 17SET_6D
17SET_6D 0 1 R 17SET_7D
17SET_7D 0 0 R 17SET_8D
17SET_8D 0 1 R 17RETURN

# Return to middle
17RETURN 0 0 R 17RETURN
17RETURN 1 1 R 17RETURN
17RETURN 6 6 R 17RETURN
17RETURN 5 5 S 17END


#
#asm LOAD S4 A
#


17END 5 5 S 18START

# Start of loading
18START 5 5 R 18TO_A_END_R
# To end of number A
18TO_A_END_R 0 0 R 18TO_A_END_R
18TO_A_END_R 1 1 R 18TO_A_END_R
18TO_A_END_R 2 2 R 18TO_A_END_R
18TO_A_END_R 3 3 L 18SET_TO_7

# Move to the start of number A, and set all values to 7
18SET_TO_7 0 7 L 18SET_TO_7
18SET_TO_7 1 7 L 18SET_TO_7
18SET_TO_7 2 2 L 18TO_MIDDLE_L
# Find the middle
18TO_MIDDLE_L 1 1 L 18TO_MIDDLE_L
18TO_MIDDLE_L 0 0 L 18TO_MIDDLE_L
18TO_MIDDLE_L 7 7 L 18TO_MIDDLE_L
18TO_MIDDLE_L 2 2 L 18TO_MIDDLE_L
18TO_MIDDLE_L 3 3 L 18TO_MIDDLE_L
18TO_MIDDLE_L 4 4 L 18TO_MIDDLE_L
18TO_MIDDLE_L 5 5 L 18TO_4_S1
#GO_TO_Sn: 4

18TO_4_S1 6 6 L 18TO_4_S2
18TO_4_S1 9 9 L 18TO_4_S2
18TO_4_S2 0 0 L 18TO_4_S2
18TO_4_S2 1 1 L 18TO_4_S2
18TO_4_S2 7 7 L 18TO_4_S2
18TO_4_S2 8 8 L 18TO_4_S2
18TO_4_S2 6 6 L 18TO_4_S3
18TO_4_S2 9 9 L 18TO_4_S3
18TO_4_S3 0 0 L 18TO_4_S3
18TO_4_S3 1 1 L 18TO_4_S3
18TO_4_S3 7 7 L 18TO_4_S3
18TO_4_S3 8 8 L 18TO_4_S3
18TO_4_S3 6 6 L 18TO_4_S4
18TO_4_S3 9 9 L 18TO_4_S4
18TO_4_S4 0 0 L 18TO_4_S4
18TO_4_S4 1 1 L 18TO_4_S4
18TO_4_S4 7 7 L 18TO_4_S4
18TO_4_S4 8 8 L 18TO_4_S4
18TO_4_S4 6 6 L 18COPY_VALUE
18TO_4_S4 9 6 L 18COPY_VALUE
# Move Left until start of S4
# Copy the first non-7/8 value
18COPY_VALUE 0 7 R 18MOVE_ZERO
18COPY_VALUE 1 8 R 18MOVE_ONE
18COPY_VALUE 7 7 L 18COPY_VALUE
18COPY_VALUE 8 8 L 18COPY_VALUE
18COPY_VALUE 6 6 R 18RESTORE_VALUE

# Move a 0 to number A
18MOVE_ZERO 0 0 R 18MOVE_ZERO
18MOVE_ZERO 1 1 R 18MOVE_ZERO
18MOVE_ZERO 2 2 R 18MOVE_ZERO
18MOVE_ZERO 3 3 L 18MOVE_ZERO_2
18MOVE_ZERO 4 4 R 18MOVE_ZERO
18MOVE_ZERO 5 5 R 18MOVE_ZERO
18MOVE_ZERO 6 6 R 18MOVE_ZERO
18MOVE_ZERO 7 7 R 18MOVE_ZERO
18MOVE_ZERO 8 8 R 18MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
18MOVE_ZERO_2 0 0 L 18MOVE_ZERO_2
18MOVE_ZERO_2 1 1 L 18MOVE_ZERO_2
18MOVE_ZERO_2 7 0 S 18TO_MIDDLE_L
# Move a 1 to number A
18MOVE_ONE 0 0 R 18MOVE_ONE
18MOVE_ONE 1 1 R 18MOVE_ONE
18MOVE_ONE 2 2 R 18MOVE_ONE
18MOVE_ONE 3 3 L 18MOVE_ONE_2
18MOVE_ONE 4 4 R 18MOVE_ONE
18MOVE_ONE 5 5 R 18MOVE_ONE
18MOVE_ONE 6 6 R 18MOVE_ONE
18MOVE_ONE 7 7 R 18MOVE_ONE
18MOVE_ONE 8 8 R 18MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
18MOVE_ONE_2 0 0 L 18MOVE_ONE_2
18MOVE_ONE_2 1 1 L 18MOVE_ONE_2
18MOVE_ONE_2 7 1 S 18TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
18RESTORE_VALUE 7 0 R 18RESTORE_VALUE
18RESTORE_VALUE 8 1 R 18RESTORE_VALUE
18RESTORE_VALUE 6 6 S 18TO_START
# Go back to the start
18TO_START 0 0 R 18TO_START
18TO_START 1 1 R 18TO_START
18TO_START 6 6 R 18TO_START
18TO_START 5 5 S 18END



#
#asm LOAD S10 B
#


18END 5 5 S 19START

# Start of loading
19START 5 5 R 19TO_B_END_R
# To end of number B
19TO_B_END_R 0 0 R 19TO_B_END_R
19TO_B_END_R 1 1 R 19TO_B_END_R
19TO_B_END_R 2 2 R 19TO_B_END_R
19TO_B_END_R 3 3 R 19TO_B_END_R
19TO_B_END_R 4 4 L 19SET_TO_7

# Move to the start of number B, and set all values to 7
19SET_TO_7 0 7 L 19SET_TO_7
19SET_TO_7 1 7 L 19SET_TO_7
19SET_TO_7 3 3 L 19TO_MIDDLE_L
# Find the middle
19TO_MIDDLE_L 1 1 L 19TO_MIDDLE_L
19TO_MIDDLE_L 0 0 L 19TO_MIDDLE_L
19TO_MIDDLE_L 7 7 L 19TO_MIDDLE_L
19TO_MIDDLE_L 2 2 L 19TO_MIDDLE_L
19TO_MIDDLE_L 3 3 L 19TO_MIDDLE_L
19TO_MIDDLE_L 4 4 L 19TO_MIDDLE_L
19TO_MIDDLE_L 5 5 L 19TO_10_S1
#GO_TO_Sn: 10

19TO_10_S1 6 6 L 19TO_10_S2
19TO_10_S1 9 9 L 19TO_10_S2
19TO_10_S2 0 0 L 19TO_10_S2
19TO_10_S2 1 1 L 19TO_10_S2
19TO_10_S2 7 7 L 19TO_10_S2
19TO_10_S2 8 8 L 19TO_10_S2
19TO_10_S2 6 6 L 19TO_10_S3
19TO_10_S2 9 9 L 19TO_10_S3
19TO_10_S3 0 0 L 19TO_10_S3
19TO_10_S3 1 1 L 19TO_10_S3
19TO_10_S3 7 7 L 19TO_10_S3
19TO_10_S3 8 8 L 19TO_10_S3
19TO_10_S3 6 6 L 19TO_10_S4
19TO_10_S3 9 9 L 19TO_10_S4
19TO_10_S4 0 0 L 19TO_10_S4
19TO_10_S4 1 1 L 19TO_10_S4
19TO_10_S4 7 7 L 19TO_10_S4
19TO_10_S4 8 8 L 19TO_10_S4
19TO_10_S4 6 6 L 19TO_10_S5
19TO_10_S4 9 9 L 19TO_10_S5
19TO_10_S5 0 0 L 19TO_10_S5
19TO_10_S5 1 1 L 19TO_10_S5
19TO_10_S5 7 7 L 19TO_10_S5
19TO_10_S5 8 8 L 19TO_10_S5
19TO_10_S5 6 6 L 19TO_10_S6
19TO_10_S5 9 9 L 19TO_10_S6
19TO_10_S6 0 0 L 19TO_10_S6
19TO_10_S6 1 1 L 19TO_10_S6
19TO_10_S6 7 7 L 19TO_10_S6
19TO_10_S6 8 8 L 19TO_10_S6
19TO_10_S6 6 6 L 19TO_10_S7
19TO_10_S6 9 9 L 19TO_10_S7
19TO_10_S7 0 0 L 19TO_10_S7
19TO_10_S7 1 1 L 19TO_10_S7
19TO_10_S7 7 7 L 19TO_10_S7
19TO_10_S7 8 8 L 19TO_10_S7
19TO_10_S7 6 6 L 19TO_10_S8
19TO_10_S7 9 9 L 19TO_10_S8
19TO_10_S8 0 0 L 19TO_10_S8
19TO_10_S8 1 1 L 19TO_10_S8
19TO_10_S8 7 7 L 19TO_10_S8
19TO_10_S8 8 8 L 19TO_10_S8
19TO_10_S8 6 6 L 19TO_10_S9
19TO_10_S8 9 9 L 19TO_10_S9
19TO_10_S9 0 0 L 19TO_10_S9
19TO_10_S9 1 1 L 19TO_10_S9
19TO_10_S9 7 7 L 19TO_10_S9
19TO_10_S9 8 8 L 19TO_10_S9
19TO_10_S9 6 6 L 19TO_10_S10
19TO_10_S9 9 9 L 19TO_10_S10
19TO_10_S10 0 0 L 19TO_10_S10
19TO_10_S10 1 1 L 19TO_10_S10
19TO_10_S10 7 7 L 19TO_10_S10
19TO_10_S10 8 8 L 19TO_10_S10
19TO_10_S10 6 6 L 19COPY_VALUE
19TO_10_S10 9 6 L 19COPY_VALUE
# Move Left until start of S10
# Copy the first non-7/8 value
19COPY_VALUE 0 7 R 19MOVE_ZERO
19COPY_VALUE 1 8 R 19MOVE_ONE
19COPY_VALUE 7 7 L 19COPY_VALUE
19COPY_VALUE 8 8 L 19COPY_VALUE
19COPY_VALUE 6 6 R 19RESTORE_VALUE

# Move a 0 to number B
19MOVE_ZERO 0 0 R 19MOVE_ZERO
19MOVE_ZERO 1 1 R 19MOVE_ZERO
19MOVE_ZERO 2 2 R 19MOVE_ZERO
19MOVE_ZERO 3 3 R 19MOVE_ZERO
19MOVE_ZERO 4 4 L 19MOVE_ZERO_2
19MOVE_ZERO 5 5 R 19MOVE_ZERO
19MOVE_ZERO 6 6 R 19MOVE_ZERO
19MOVE_ZERO 7 7 R 19MOVE_ZERO
19MOVE_ZERO 8 8 R 19MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
19MOVE_ZERO_2 0 0 L 19MOVE_ZERO_2
19MOVE_ZERO_2 1 1 L 19MOVE_ZERO_2
19MOVE_ZERO_2 7 0 S 19TO_MIDDLE_L
# Move a 1 to number B
19MOVE_ONE 0 0 R 19MOVE_ONE
19MOVE_ONE 1 1 R 19MOVE_ONE
19MOVE_ONE 2 2 R 19MOVE_ONE
19MOVE_ONE 3 3 R 19MOVE_ONE
19MOVE_ONE 4 4 L 19MOVE_ONE_2
19MOVE_ONE 5 5 R 19MOVE_ONE
19MOVE_ONE 6 6 R 19MOVE_ONE
19MOVE_ONE 7 7 R 19MOVE_ONE
19MOVE_ONE 8 8 R 19MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
19MOVE_ONE_2 0 0 L 19MOVE_ONE_2
19MOVE_ONE_2 1 1 L 19MOVE_ONE_2
19MOVE_ONE_2 7 1 S 19TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
19RESTORE_VALUE 7 0 R 19RESTORE_VALUE
19RESTORE_VALUE 8 1 R 19RESTORE_VALUE
19RESTORE_VALUE 6 6 S 19TO_START
# Go back to the start
19TO_START 0 0 R 19TO_START
19TO_START 1 1 R 19TO_START
19TO_START 6 6 R 19TO_START
19TO_START 5 5 S 19END



#
#asm SUB
#


19END 5 5 S 20START

# Start of the subtraction program
20START 5 5 R 20FIND_B_END

# Find the end of the second number
20FIND_B_END 0 0 R 20FIND_B_END
20FIND_B_END 1 1 R 20FIND_B_END
20FIND_B_END 2 2 R 20FIND_B_END
20FIND_B_END 3 3 R 20FIND_B_END
20FIND_B_END 7 7 R 20FIND_B_END
20FIND_B_END 8 8 R 20FIND_B_END
20FIND_B_END 4 4 L 20SUB_DIGIT

# Find first non-subtracted digit
20SUB_DIGIT 7 7 L 20SUB_DIGIT
20SUB_DIGIT 8 8 L 20SUB_DIGIT
20SUB_DIGIT 0 7 L 20SUB_DIGIT_ZERO
20SUB_DIGIT 1 7 L 20SUB_DIGIT_ONE
20SUB_DIGIT 3 3 R 20RESTORE

# Subtract a zero
20SUB_DIGIT_ZERO 0 0 L 20SUB_DIGIT_ZERO
20SUB_DIGIT_ZERO 1 1 L 20SUB_DIGIT_ZERO
20SUB_DIGIT_ZERO 3 3 L 20SUB_DIGIT_ZERO_1

20SUB_DIGIT_ZERO_1 7 7 L 20SUB_DIGIT_ZERO_1
20SUB_DIGIT_ZERO_1 8 8 L 20SUB_DIGIT_ZERO_1
20SUB_DIGIT_ZERO_1 0 7 L 20FIND_B_END
20SUB_DIGIT_ZERO_1 1 8 R 20FIND_B_END

# Subtract a one
20SUB_DIGIT_ONE 0 0 L 20SUB_DIGIT_ONE
20SUB_DIGIT_ONE 1 1 L 20SUB_DIGIT_ONE
20SUB_DIGIT_ONE 3 3 L 20SUB_DIGIT_ONE_1

20SUB_DIGIT_ONE_1 7 7 L 20SUB_DIGIT_ONE_1
20SUB_DIGIT_ONE_1 8 8 L 20SUB_DIGIT_ONE_1
20SUB_DIGIT_ONE_1 0 8 L 20SUB_DIGIT_ONE_2
20SUB_DIGIT_ONE_1 1 7 R 20FIND_B_END

20SUB_DIGIT_ONE_2 1 0 R 20FIND_B_END
20SUB_DIGIT_ONE_2 2 2 R 20OVERFLOW
20SUB_DIGIT_ONE_2 0 1 L 20SUB_DIGIT_ONE_2

# Unsigned overflow
20OVERFLOW 0 1 R 20OVERFLOW
20OVERFLOW 1 1 R 20OVERFLOW
20OVERFLOW 7 7 R 20FIND_B_END
20OVERFLOW 8 8 R 20FIND_B_END
20OVERFLOW 3 3 R 20FIND_B_END

# Return to the middle of the tape
20RESTORE 7 0 R 20RESTORE
20RESTORE 8 1 R 20RESTORE
20RESTORE 4 4 L 20RESTORE_1

20RESTORE_1 0 0 L 20RESTORE_1
20RESTORE_1 1 1 L 20RESTORE_1
20RESTORE_1 2 2 L 20RESTORE_1
20RESTORE_1 3 3 L 20RESTORE_1
20RESTORE_1 7 0 L 20RESTORE_1
20RESTORE_1 8 1 L 20RESTORE_1
20RESTORE_1 5 5 S 20END


#
#asm ISZERO
#


20END 5 5 S 21START

# Start of the ISZERO program
21START 5 5 R 21START
21START 2 2 R 21CHECK_A

# Check for ones in A
21CHECK_A 0 0 R 21CHECK_A
21CHECK_A 1 0 R 21FOUND_ONE
21CHECK_A 3 3 L 21CHECK_A_1

# no ones found in A, set last digit of A to 1
21CHECK_A_1 0 1 L 21RETURN

# Found a 1 in A
21FOUND_ONE 0 0 R 21FOUND_ONE
21FOUND_ONE 1 0 R 21FOUND_ONE
21FOUND_ONE 3 3 L 21FOUND_ONE_1

# Found a 1 in A, return
21FOUND_ONE_1 0 0 L 21RETURN

# Return to middle
21RETURN 0 0 L 21RETURN
21RETURN 1 1 L 21RETURN
21RETURN 2 2 L 21RETURN
21RETURN 5 5 S 21END


#
#asm STORE S11 A
#


21END 5 5 S 22START

22START 5 5 L 22TO_11_S1
#GO_TO_Sn: 11

22TO_11_S1 6 6 L 22TO_11_S2
22TO_11_S1 9 9 L 22TO_11_S2
22TO_11_S2 0 0 L 22TO_11_S2
22TO_11_S2 1 1 L 22TO_11_S2
22TO_11_S2 7 7 L 22TO_11_S2
22TO_11_S2 8 8 L 22TO_11_S2
22TO_11_S2 6 6 L 22TO_11_S3
22TO_11_S2 9 9 L 22TO_11_S3
22TO_11_S3 0 0 L 22TO_11_S3
22TO_11_S3 1 1 L 22TO_11_S3
22TO_11_S3 7 7 L 22TO_11_S3
22TO_11_S3 8 8 L 22TO_11_S3
22TO_11_S3 6 6 L 22TO_11_S4
22TO_11_S3 9 9 L 22TO_11_S4
22TO_11_S4 0 0 L 22TO_11_S4
22TO_11_S4 1 1 L 22TO_11_S4
22TO_11_S4 7 7 L 22TO_11_S4
22TO_11_S4 8 8 L 22TO_11_S4
22TO_11_S4 6 6 L 22TO_11_S5
22TO_11_S4 9 9 L 22TO_11_S5
22TO_11_S5 0 0 L 22TO_11_S5
22TO_11_S5 1 1 L 22TO_11_S5
22TO_11_S5 7 7 L 22TO_11_S5
22TO_11_S5 8 8 L 22TO_11_S5
22TO_11_S5 6 6 L 22TO_11_S6
22TO_11_S5 9 9 L 22TO_11_S6
22TO_11_S6 0 0 L 22TO_11_S6
22TO_11_S6 1 1 L 22TO_11_S6
22TO_11_S6 7 7 L 22TO_11_S6
22TO_11_S6 8 8 L 22TO_11_S6
22TO_11_S6 6 6 L 22TO_11_S7
22TO_11_S6 9 9 L 22TO_11_S7
22TO_11_S7 0 0 L 22TO_11_S7
22TO_11_S7 1 1 L 22TO_11_S7
22TO_11_S7 7 7 L 22TO_11_S7
22TO_11_S7 8 8 L 22TO_11_S7
22TO_11_S7 6 6 L 22TO_11_S8
22TO_11_S7 9 9 L 22TO_11_S8
22TO_11_S8 0 0 L 22TO_11_S8
22TO_11_S8 1 1 L 22TO_11_S8
22TO_11_S8 7 7 L 22TO_11_S8
22TO_11_S8 8 8 L 22TO_11_S8
22TO_11_S8 6 6 L 22TO_11_S9
22TO_11_S8 9 9 L 22TO_11_S9
22TO_11_S9 0 0 L 22TO_11_S9
22TO_11_S9 1 1 L 22TO_11_S9
22TO_11_S9 7 7 L 22TO_11_S9
22TO_11_S9 8 8 L 22TO_11_S9
22TO_11_S9 6 6 L 22TO_11_S10
22TO_11_S9 9 9 L 22TO_11_S10
22TO_11_S10 0 0 L 22TO_11_S10
22TO_11_S10 1 1 L 22TO_11_S10
22TO_11_S10 7 7 L 22TO_11_S10
22TO_11_S10 8 8 L 22TO_11_S10
22TO_11_S10 6 6 L 22TO_11_S11
22TO_11_S10 9 9 L 22TO_11_S11
22TO_11_S11 0 0 L 22TO_11_S11
22TO_11_S11 1 1 L 22TO_11_S11
22TO_11_S11 7 7 L 22TO_11_S11
22TO_11_S11 8 8 L 22TO_11_S11
22TO_11_S11 6 9 L 22SET_TO_7
22TO_11_S11 9 9 L 22SET_TO_7

# Set all the values to 7 untill the start of S1
22SET_TO_7 0 7 L 22SET_TO_7
22SET_TO_7 1 7 L 22SET_TO_7
22SET_TO_7 6 6 R 22TO_MIDDLE_R
# Find the middle
22TO_MIDDLE_R 1 1 R 22TO_MIDDLE_R
22TO_MIDDLE_R 0 0 R 22TO_MIDDLE_R
22TO_MIDDLE_R 7 7 R 22TO_MIDDLE_R
22TO_MIDDLE_R 2 2 R 22TO_MIDDLE_R
22TO_MIDDLE_R 6 6 R 22TO_MIDDLE_R
22TO_MIDDLE_R 9 9 R 22TO_MIDDLE_R
22TO_MIDDLE_R 5 5 R 22A_END

# to end of A
22A_END 0 0 R 22A_END
22A_END 1 1 R 22A_END
22A_END 2 2 R 22A_END
22A_END 7 7 R 22A_END
22A_END 8 8 R 22A_END
22A_END 3 3 L 22COPY_VALUE

# Move Left until end of A
# Copy the first non-7/MovH8 value
22COPY_VALUE 0 7 L 22MOVE_ZERO
22COPY_VALUE 1 8 L 22MOVE_ONE
22COPY_VALUE EndA EndA L 22COPY_VALUE
22COPY_VALUE 7 7 L 22COPY_VALUE
22COPY_VALUE 8 8 L 22COPY_VALUE
22COPY_VALUE 2 2 R 22RESTORE_VALUE

# Move a 0 to number 9
22MOVE_ZERO 0 0 L 22MOVE_ZERO
22MOVE_ZERO 1 1 L 22MOVE_ZERO
22MOVE_ZERO 2 2 L 22MOVE_ZERO
22MOVE_ZERO 3 3 L 22MOVE_ZERO
22MOVE_ZERO 4 4 L 22MOVE_ZERO
22MOVE_ZERO 9 9 L 22MOVE_ZERO_2
22MOVE_ZERO 5 5 L 22MOVE_ZERO
22MOVE_ZERO 6 6 L 22MOVE_ZERO
22MOVE_ZERO 7 7 L 22MOVE_ZERO
22MOVE_ZERO 8 8 L 22MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
22MOVE_ZERO_2 0 0 L 22MOVE_ZERO_2
22MOVE_ZERO_2 1 1 L 22MOVE_ZERO_2
22MOVE_ZERO_2 7 0 S 22TO_MIDDLE_R
# Move a 1 to number 9
22MOVE_ONE 0 0 L 22MOVE_ONE
22MOVE_ONE 1 1 L 22MOVE_ONE
22MOVE_ONE 2 2 L 22MOVE_ONE
22MOVE_ONE 3 3 L 22MOVE_ONE
22MOVE_ONE 4 4 L 22MOVE_ONE
22MOVE_ONE 9 9 L 22MOVE_ONE_2
22MOVE_ONE 5 5 L 22MOVE_ONE
22MOVE_ONE 6 6 L 22MOVE_ONE
22MOVE_ONE 7 7 L 22MOVE_ONE
22MOVE_ONE 8 8 L 22MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
22MOVE_ONE_2 0 0 L 22MOVE_ONE_2
22MOVE_ONE_2 1 1 L 22MOVE_ONE_2
22MOVE_ONE_2 7 1 S 22TO_MIDDLE_R
# Restore number A, translate 7 to 0 and 8 to 1
22RESTORE_VALUE 7 0 R 22RESTORE_VALUE
22RESTORE_VALUE 8 1 R 22RESTORE_VALUE
22RESTORE_VALUE 3 3 L 22RESET_STORAGE_MARKER
# Reset 9 to 6
22RESET_STORAGE_MARKER 0 0 L 22RESET_STORAGE_MARKER
22RESET_STORAGE_MARKER 1 1 L 22RESET_STORAGE_MARKER
22RESET_STORAGE_MARKER 5 5 L 22RESET_STORAGE_MARKER
22RESET_STORAGE_MARKER 6 6 L 22RESET_STORAGE_MARKER
22RESET_STORAGE_MARKER 2 2 L 22RESET_STORAGE_MARKER
22RESET_STORAGE_MARKER 9 6 R 22RETURN_TO_MIDDLE
# Return to middle
22RETURN_TO_MIDDLE 0 0 R 22RETURN_TO_MIDDLE
22RETURN_TO_MIDDLE 1 1 R 22RETURN_TO_MIDDLE
22RETURN_TO_MIDDLE 6 6 R 22RETURN_TO_MIDDLE
22RETURN_TO_MIDDLE 5 5 S 22END


#
#asm SET S2 0
#


22END 5 5 S 23START

23START 5 5 L 23TO_2_S1
#GO_TO_Sn: 2

23TO_2_S1 6 6 L 23TO_2_S2
23TO_2_S1 9 9 L 23TO_2_S2
23TO_2_S2 0 0 L 23TO_2_S2
23TO_2_S2 1 1 L 23TO_2_S2
23TO_2_S2 7 7 L 23TO_2_S2
23TO_2_S2 8 8 L 23TO_2_S2
23TO_2_S2 6 6 L 23RESET_S
23TO_2_S2 9 6 L 23RESET_S

# Reset to 0
23RESET_S 0 0 L 23RESET_S
23RESET_S 1 0 L 23RESET_S
23RESET_S 6 6 R 23SET_1D
23SET_1D 0 0 R 23SET_2D
23SET_2D 0 0 R 23SET_3D
23SET_3D 0 0 R 23SET_4D
23SET_4D 0 0 R 23SET_5D
23SET_5D 0 0 R 23SET_6D
23SET_6D 0 0 R 23SET_7D
23SET_7D 0 0 R 23SET_8D
23SET_8D 0 0 R 23RETURN

# Return to middle
23RETURN 0 0 R 23RETURN
23RETURN 1 1 R 23RETURN
23RETURN 6 6 R 23RETURN
23RETURN 5 5 S 23END


#
#asm LOAD S11 A
#


23END 5 5 S 24START

# Start of loading
24START 5 5 R 24TO_A_END_R
# To end of number A
24TO_A_END_R 0 0 R 24TO_A_END_R
24TO_A_END_R 1 1 R 24TO_A_END_R
24TO_A_END_R 2 2 R 24TO_A_END_R
24TO_A_END_R 3 3 L 24SET_TO_7

# Move to the start of number A, and set all values to 7
24SET_TO_7 0 7 L 24SET_TO_7
24SET_TO_7 1 7 L 24SET_TO_7
24SET_TO_7 2 2 L 24TO_MIDDLE_L
# Find the middle
24TO_MIDDLE_L 1 1 L 24TO_MIDDLE_L
24TO_MIDDLE_L 0 0 L 24TO_MIDDLE_L
24TO_MIDDLE_L 7 7 L 24TO_MIDDLE_L
24TO_MIDDLE_L 2 2 L 24TO_MIDDLE_L
24TO_MIDDLE_L 3 3 L 24TO_MIDDLE_L
24TO_MIDDLE_L 4 4 L 24TO_MIDDLE_L
24TO_MIDDLE_L 5 5 L 24TO_11_S1
#GO_TO_Sn: 11

24TO_11_S1 6 6 L 24TO_11_S2
24TO_11_S1 9 9 L 24TO_11_S2
24TO_11_S2 0 0 L 24TO_11_S2
24TO_11_S2 1 1 L 24TO_11_S2
24TO_11_S2 7 7 L 24TO_11_S2
24TO_11_S2 8 8 L 24TO_11_S2
24TO_11_S2 6 6 L 24TO_11_S3
24TO_11_S2 9 9 L 24TO_11_S3
24TO_11_S3 0 0 L 24TO_11_S3
24TO_11_S3 1 1 L 24TO_11_S3
24TO_11_S3 7 7 L 24TO_11_S3
24TO_11_S3 8 8 L 24TO_11_S3
24TO_11_S3 6 6 L 24TO_11_S4
24TO_11_S3 9 9 L 24TO_11_S4
24TO_11_S4 0 0 L 24TO_11_S4
24TO_11_S4 1 1 L 24TO_11_S4
24TO_11_S4 7 7 L 24TO_11_S4
24TO_11_S4 8 8 L 24TO_11_S4
24TO_11_S4 6 6 L 24TO_11_S5
24TO_11_S4 9 9 L 24TO_11_S5
24TO_11_S5 0 0 L 24TO_11_S5
24TO_11_S5 1 1 L 24TO_11_S5
24TO_11_S5 7 7 L 24TO_11_S5
24TO_11_S5 8 8 L 24TO_11_S5
24TO_11_S5 6 6 L 24TO_11_S6
24TO_11_S5 9 9 L 24TO_11_S6
24TO_11_S6 0 0 L 24TO_11_S6
24TO_11_S6 1 1 L 24TO_11_S6
24TO_11_S6 7 7 L 24TO_11_S6
24TO_11_S6 8 8 L 24TO_11_S6
24TO_11_S6 6 6 L 24TO_11_S7
24TO_11_S6 9 9 L 24TO_11_S7
24TO_11_S7 0 0 L 24TO_11_S7
24TO_11_S7 1 1 L 24TO_11_S7
24TO_11_S7 7 7 L 24TO_11_S7
24TO_11_S7 8 8 L 24TO_11_S7
24TO_11_S7 6 6 L 24TO_11_S8
24TO_11_S7 9 9 L 24TO_11_S8
24TO_11_S8 0 0 L 24TO_11_S8
24TO_11_S8 1 1 L 24TO_11_S8
24TO_11_S8 7 7 L 24TO_11_S8
24TO_11_S8 8 8 L 24TO_11_S8
24TO_11_S8 6 6 L 24TO_11_S9
24TO_11_S8 9 9 L 24TO_11_S9
24TO_11_S9 0 0 L 24TO_11_S9
24TO_11_S9 1 1 L 24TO_11_S9
24TO_11_S9 7 7 L 24TO_11_S9
24TO_11_S9 8 8 L 24TO_11_S9
24TO_11_S9 6 6 L 24TO_11_S10
24TO_11_S9 9 9 L 24TO_11_S10
24TO_11_S10 0 0 L 24TO_11_S10
24TO_11_S10 1 1 L 24TO_11_S10
24TO_11_S10 7 7 L 24TO_11_S10
24TO_11_S10 8 8 L 24TO_11_S10
24TO_11_S10 6 6 L 24TO_11_S11
24TO_11_S10 9 9 L 24TO_11_S11
24TO_11_S11 0 0 L 24TO_11_S11
24TO_11_S11 1 1 L 24TO_11_S11
24TO_11_S11 7 7 L 24TO_11_S11
24TO_11_S11 8 8 L 24TO_11_S11
24TO_11_S11 6 6 L 24COPY_VALUE
24TO_11_S11 9 6 L 24COPY_VALUE
# Move Left until start of S11
# Copy the first non-7/8 value
24COPY_VALUE 0 7 R 24MOVE_ZERO
24COPY_VALUE 1 8 R 24MOVE_ONE
24COPY_VALUE 7 7 L 24COPY_VALUE
24COPY_VALUE 8 8 L 24COPY_VALUE
24COPY_VALUE 6 6 R 24RESTORE_VALUE

# Move a 0 to number A
24MOVE_ZERO 0 0 R 24MOVE_ZERO
24MOVE_ZERO 1 1 R 24MOVE_ZERO
24MOVE_ZERO 2 2 R 24MOVE_ZERO
24MOVE_ZERO 3 3 L 24MOVE_ZERO_2
24MOVE_ZERO 4 4 R 24MOVE_ZERO
24MOVE_ZERO 5 5 R 24MOVE_ZERO
24MOVE_ZERO 6 6 R 24MOVE_ZERO
24MOVE_ZERO 7 7 R 24MOVE_ZERO
24MOVE_ZERO 8 8 R 24MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
24MOVE_ZERO_2 0 0 L 24MOVE_ZERO_2
24MOVE_ZERO_2 1 1 L 24MOVE_ZERO_2
24MOVE_ZERO_2 7 0 S 24TO_MIDDLE_L
# Move a 1 to number A
24MOVE_ONE 0 0 R 24MOVE_ONE
24MOVE_ONE 1 1 R 24MOVE_ONE
24MOVE_ONE 2 2 R 24MOVE_ONE
24MOVE_ONE 3 3 L 24MOVE_ONE_2
24MOVE_ONE 4 4 R 24MOVE_ONE
24MOVE_ONE 5 5 R 24MOVE_ONE
24MOVE_ONE 6 6 R 24MOVE_ONE
24MOVE_ONE 7 7 R 24MOVE_ONE
24MOVE_ONE 8 8 R 24MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
24MOVE_ONE_2 0 0 L 24MOVE_ONE_2
24MOVE_ONE_2 1 1 L 24MOVE_ONE_2
24MOVE_ONE_2 7 1 S 24TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
24RESTORE_VALUE 7 0 R 24RESTORE_VALUE
24RESTORE_VALUE 8 1 R 24RESTORE_VALUE
24RESTORE_VALUE 6 6 S 24TO_START
# Go back to the start
24TO_START 0 0 R 24TO_START
24TO_START 1 1 R 24TO_START
24TO_START 6 6 R 24TO_START
24TO_START 5 5 S 24END



#
#asm JNZ L11
#


24END 5 5 S 25START
# Start of the JUMP if NOT ZERO program
25START 5 5 R 25START
25START 2 2 R 25A_END

# Go to end of A
25A_END 0 0 R 25A_END
25A_END 1 1 R 25A_END
25A_END 3 3 L 25CHECK_A

# no ones found in A, set last digit of A to 1
25CHECK_A 0 1 S 25RETURN_ZERO
25CHECK_A 1 1 S 25RETURN_ONE

# Return to 5
25RETURN_ZERO 0 0 L 25RETURN_ZERO
25RETURN_ZERO 1 1 L 25RETURN_ZERO
25RETURN_ZERO 2 2 L 25RETURN_ZERO
25RETURN_ZERO 5 5 S 25END

25RETURN_ONE 0 0 L 25RETURN_ONE
25RETURN_ONE 1 1 L 25RETURN_ONE
25RETURN_ONE 2 2 L 25RETURN_ONE
25RETURN_ONE 5 5 S LABEL_L11


#
#asm JMP L12
#


25END 5 5 S 26START
26START 5 5 S LABEL_L12

#
#asm L11:
#

LABEL_L11 5 5 S 26END

#
#asm SET S2 12
#


26END 5 5 S 27START

27START 5 5 L 27TO_2_S1
#GO_TO_Sn: 2

27TO_2_S1 6 6 L 27TO_2_S2
27TO_2_S1 9 9 L 27TO_2_S2
27TO_2_S2 0 0 L 27TO_2_S2
27TO_2_S2 1 1 L 27TO_2_S2
27TO_2_S2 7 7 L 27TO_2_S2
27TO_2_S2 8 8 L 27TO_2_S2
27TO_2_S2 6 6 L 27RESET_S
27TO_2_S2 9 6 L 27RESET_S

# Reset to 0
27RESET_S 0 0 L 27RESET_S
27RESET_S 1 0 L 27RESET_S
27RESET_S 6 6 R 27SET_1D
27SET_1D 0 0 R 27SET_2D
27SET_2D 0 0 R 27SET_3D
27SET_3D 0 0 R 27SET_4D
27SET_4D 0 0 R 27SET_5D
27SET_5D 0 1 R 27SET_6D
27SET_6D 0 1 R 27SET_7D
27SET_7D 0 0 R 27SET_8D
27SET_8D 0 0 R 27RETURN

# Return to middle
27RETURN 0 0 R 27RETURN
27RETURN 1 1 R 27RETURN
27RETURN 6 6 R 27RETURN
27RETURN 5 5 S 27END


#
#asm JMP L13
#


27END 5 5 S 28START
28START 5 5 S LABEL_L13

#
#asm L12:
#

LABEL_L12 5 5 S 28END

#
#asm SET S2 0
#


28END 5 5 S 29START

29START 5 5 L 29TO_2_S1
#GO_TO_Sn: 2

29TO_2_S1 6 6 L 29TO_2_S2
29TO_2_S1 9 9 L 29TO_2_S2
29TO_2_S2 0 0 L 29TO_2_S2
29TO_2_S2 1 1 L 29TO_2_S2
29TO_2_S2 7 7 L 29TO_2_S2
29TO_2_S2 8 8 L 29TO_2_S2
29TO_2_S2 6 6 L 29RESET_S
29TO_2_S2 9 6 L 29RESET_S

# Reset to 0
29RESET_S 0 0 L 29RESET_S
29RESET_S 1 0 L 29RESET_S
29RESET_S 6 6 R 29SET_1D
29SET_1D 0 0 R 29SET_2D
29SET_2D 0 0 R 29SET_3D
29SET_3D 0 0 R 29SET_4D
29SET_4D 0 0 R 29SET_5D
29SET_5D 0 0 R 29SET_6D
29SET_6D 0 0 R 29SET_7D
29SET_7D 0 0 R 29SET_8D
29SET_8D 0 0 R 29RETURN

# Return to middle
29RETURN 0 0 R 29RETURN
29RETURN 1 1 R 29RETURN
29RETURN 6 6 R 29RETURN
29RETURN 5 5 S 29END


#
#asm L13:
#

LABEL_L13 5 5 S 29END

#
#asm LOAD S2 A
#


29END 5 5 S 30START

# Start of loading
30START 5 5 R 30TO_A_END_R
# To end of number A
30TO_A_END_R 0 0 R 30TO_A_END_R
30TO_A_END_R 1 1 R 30TO_A_END_R
30TO_A_END_R 2 2 R 30TO_A_END_R
30TO_A_END_R 3 3 L 30SET_TO_7

# Move to the start of number A, and set all values to 7
30SET_TO_7 0 7 L 30SET_TO_7
30SET_TO_7 1 7 L 30SET_TO_7
30SET_TO_7 2 2 L 30TO_MIDDLE_L
# Find the middle
30TO_MIDDLE_L 1 1 L 30TO_MIDDLE_L
30TO_MIDDLE_L 0 0 L 30TO_MIDDLE_L
30TO_MIDDLE_L 7 7 L 30TO_MIDDLE_L
30TO_MIDDLE_L 2 2 L 30TO_MIDDLE_L
30TO_MIDDLE_L 3 3 L 30TO_MIDDLE_L
30TO_MIDDLE_L 4 4 L 30TO_MIDDLE_L
30TO_MIDDLE_L 5 5 L 30TO_2_S1
#GO_TO_Sn: 2

30TO_2_S1 6 6 L 30TO_2_S2
30TO_2_S1 9 9 L 30TO_2_S2
30TO_2_S2 0 0 L 30TO_2_S2
30TO_2_S2 1 1 L 30TO_2_S2
30TO_2_S2 7 7 L 30TO_2_S2
30TO_2_S2 8 8 L 30TO_2_S2
30TO_2_S2 6 6 L 30COPY_VALUE
30TO_2_S2 9 6 L 30COPY_VALUE
# Move Left until start of S2
# Copy the first non-7/8 value
30COPY_VALUE 0 7 R 30MOVE_ZERO
30COPY_VALUE 1 8 R 30MOVE_ONE
30COPY_VALUE 7 7 L 30COPY_VALUE
30COPY_VALUE 8 8 L 30COPY_VALUE
30COPY_VALUE 6 6 R 30RESTORE_VALUE

# Move a 0 to number A
30MOVE_ZERO 0 0 R 30MOVE_ZERO
30MOVE_ZERO 1 1 R 30MOVE_ZERO
30MOVE_ZERO 2 2 R 30MOVE_ZERO
30MOVE_ZERO 3 3 L 30MOVE_ZERO_2
30MOVE_ZERO 4 4 R 30MOVE_ZERO
30MOVE_ZERO 5 5 R 30MOVE_ZERO
30MOVE_ZERO 6 6 R 30MOVE_ZERO
30MOVE_ZERO 7 7 R 30MOVE_ZERO
30MOVE_ZERO 8 8 R 30MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
30MOVE_ZERO_2 0 0 L 30MOVE_ZERO_2
30MOVE_ZERO_2 1 1 L 30MOVE_ZERO_2
30MOVE_ZERO_2 7 0 S 30TO_MIDDLE_L
# Move a 1 to number A
30MOVE_ONE 0 0 R 30MOVE_ONE
30MOVE_ONE 1 1 R 30MOVE_ONE
30MOVE_ONE 2 2 R 30MOVE_ONE
30MOVE_ONE 3 3 L 30MOVE_ONE_2
30MOVE_ONE 4 4 R 30MOVE_ONE
30MOVE_ONE 5 5 R 30MOVE_ONE
30MOVE_ONE 6 6 R 30MOVE_ONE
30MOVE_ONE 7 7 R 30MOVE_ONE
30MOVE_ONE 8 8 R 30MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
30MOVE_ONE_2 0 0 L 30MOVE_ONE_2
30MOVE_ONE_2 1 1 L 30MOVE_ONE_2
30MOVE_ONE_2 7 1 S 30TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
30RESTORE_VALUE 7 0 R 30RESTORE_VALUE
30RESTORE_VALUE 8 1 R 30RESTORE_VALUE
30RESTORE_VALUE 6 6 S 30TO_START
# Go back to the start
30TO_START 0 0 R 30TO_START
30TO_START 1 1 R 30TO_START
30TO_START 6 6 R 30TO_START
30TO_START 5 5 S 30END


30END 5 5 S END