6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 0 0 0 6 0 0 0 0 0 1 1 1 6 0 0 0 0 0 1 1 0 6 0 0 0 0 0 1 0 1 6 !5 2 0 0 0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 4

START 5 5 S 0START

#
# LOAD S2, A
#


0END 5 5 S 1START
# Start of loading
0START 5 5 R 0TO_A_END_R
# To end of number A
0TO_A_END_R 0 0 R 0TO_A_END_R
0TO_A_END_R 1 1 R 0TO_A_END_R
0TO_A_END_R 2 2 R 0TO_A_END_R
0TO_A_END_R 3 3 L 0SET_TO_7
# Move to the start of number A, and set all values to 7
0SET_TO_7 0 7 L 0SET_TO_7
0SET_TO_7 1 7 L 0SET_TO_7
0SET_TO_7 2 2 L 0TO_MIDDLE_L
# Find the middle
0TO_MIDDLE_L 7 7 L 0TO_MIDDLE_L
0TO_MIDDLE_L 1 1 L 0TO_MIDDLE_L
0TO_MIDDLE_L 0 0 L 0TO_MIDDLE_L
0TO_MIDDLE_L 2 2 L 0TO_MIDDLE_L
0TO_MIDDLE_L 3 3 L 0TO_MIDDLE_L
0TO_MIDDLE_L 5 5 L 0TO_S1_END
# To end of S1
0TO_S1_END 6 6 L 0TO_S2_END
# To end of S2
0TO_S2_END 0 0 L 0TO_S2_END
0TO_S2_END 1 1 L 0TO_S2_END
0TO_S2_END 6 6 L 0COPY_VALUE
# Move Left until start of S2
# Copy the first non-7/8 value
0COPY_VALUE 0 7 R 0MOVE_ZERO
0COPY_VALUE 1 8 R 0MOVE_ONE
0COPY_VALUE 7 7 L 0COPY_VALUE
0COPY_VALUE 8 8 L 0COPY_VALUE
0COPY_VALUE 6 6 R 0RESTORE_VALUE
# Move a 0 to the end of number A
0MOVE_ZERO 0 0 R 0MOVE_ZERO
0MOVE_ZERO 1 1 R 0MOVE_ZERO
0MOVE_ZERO 2 2 R 0MOVE_ZERO
0MOVE_ZERO 3 3 L 0MOVE_ZERO_2
0MOVE_ZERO 4 4 R 0MOVE_ZERO
0MOVE_ZERO 5 5 R 0MOVE_ZERO
0MOVE_ZERO 6 6 R 0MOVE_ZERO
0MOVE_ZERO 7 7 R 0MOVE_ZERO
0MOVE_ZERO 8 8 R 0MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
0MOVE_ZERO_2 0 0 L 0MOVE_ZERO_2
0MOVE_ZERO_2 1 1 L 0MOVE_ZERO_2
0MOVE_ZERO_2 7 0 S 0TO_MIDDLE_L
# Move a 1 to the end of number A
0MOVE_ONE 0 0 R 0MOVE_ONE
0MOVE_ONE 1 1 R 0MOVE_ONE
0MOVE_ONE 2 2 R 0MOVE_ONE
0MOVE_ONE 3 3 L 0MOVE_ONE_2
0MOVE_ONE 4 4 R 0MOVE_ONE
0MOVE_ONE 5 5 R 0MOVE_ONE
0MOVE_ONE 6 6 R 0MOVE_ONE
0MOVE_ONE 7 7 R 0MOVE_ONE
0MOVE_ONE 8 8 R 0MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
0MOVE_ONE_2 0 0 L 0MOVE_ONE_2
0MOVE_ONE_2 1 1 L 0MOVE_ONE_2
0MOVE_ONE_2 7 1 S 0TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
0RESTORE_VALUE 7 0 R 0RESTORE_VALUE
0RESTORE_VALUE 8 1 R 0RESTORE_VALUE
0RESTORE_VALUE 6 6 S 0TO_START
# Go back to the start
0TO_START 6 6 R 0TO_START
0TO_START 0 0 R 0TO_START
0TO_START 1 1 R 0TO_START
0TO_START 5 5 S 0END


#
# LOAD S3, B
#


1END 5 5 S 2START
# Start of loading
1START 5 5 R 1TO_B_END_R
# To end of number B
1TO_B_END_R 0 0 R 1TO_B_END_R
1TO_B_END_R 1 1 R 1TO_B_END_R
1TO_B_END_R 2 2 R 1TO_B_END_R
1TO_B_END_R 3 3 R 1TO_B_END_R
1TO_B_END_R 4 4 L 1SET_TO_7
# Move to the start of number B, and set all values to 7
1SET_TO_7 0 7 L 1SET_TO_7
1SET_TO_7 1 7 L 1SET_TO_7
1SET_TO_7 3 3 L 1TO_MIDDLE_L
# Find the middle
1TO_MIDDLE_L 7 7 L 1TO_MIDDLE_L
1TO_MIDDLE_L 1 1 L 1TO_MIDDLE_L
1TO_MIDDLE_L 0 0 L 1TO_MIDDLE_L
1TO_MIDDLE_L 2 2 L 1TO_MIDDLE_L
1TO_MIDDLE_L 3 3 L 1TO_MIDDLE_L
1TO_MIDDLE_L 5 5 L 1TO_S1_END
# To end of S1
1TO_S1_END 6 6 L 1TO_S2_END
# To end of S2
1TO_S2_END 0 0 L 1TO_S2_END
1TO_S2_END 1 1 L 1TO_S2_END
1TO_S2_END 6 6 L 1TO_S3_END
# To end of S3
1TO_S3_END 0 0 L 1TO_S3_END
1TO_S3_END 1 1 L 1TO_S3_END
1TO_S3_END 6 6 L 1COPY_VALUE
# Move Left until start of S3
# Copy the first non-7/8 value
1COPY_VALUE 0 7 R 1MOVE_ZERO
1COPY_VALUE 1 8 R 1MOVE_ONE
1COPY_VALUE 7 7 L 1COPY_VALUE
1COPY_VALUE 8 8 L 1COPY_VALUE
1COPY_VALUE 6 6 R 1RESTORE_VALUE
# Move a 0 to the end of number B
1MOVE_ZERO 0 0 R 1MOVE_ZERO
1MOVE_ZERO 1 1 R 1MOVE_ZERO
1MOVE_ZERO 2 2 R 1MOVE_ZERO
1MOVE_ZERO 3 3 R 1MOVE_ZERO
1MOVE_ZERO 4 4 L 1MOVE_ZERO_2
1MOVE_ZERO 5 5 R 1MOVE_ZERO
1MOVE_ZERO 6 6 R 1MOVE_ZERO
1MOVE_ZERO 7 7 R 1MOVE_ZERO
1MOVE_ZERO 8 8 R 1MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
1MOVE_ZERO_2 0 0 L 1MOVE_ZERO_2
1MOVE_ZERO_2 1 1 L 1MOVE_ZERO_2
1MOVE_ZERO_2 7 0 S 1TO_MIDDLE_L
# Move a 1 to the end of number B
1MOVE_ONE 0 0 R 1MOVE_ONE
1MOVE_ONE 1 1 R 1MOVE_ONE
1MOVE_ONE 2 2 R 1MOVE_ONE
1MOVE_ONE 3 3 R 1MOVE_ONE
1MOVE_ONE 4 4 L 1MOVE_ONE_2
1MOVE_ONE 5 5 R 1MOVE_ONE
1MOVE_ONE 6 6 R 1MOVE_ONE
1MOVE_ONE 7 7 R 1MOVE_ONE
1MOVE_ONE 8 8 R 1MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
1MOVE_ONE_2 0 0 L 1MOVE_ONE_2
1MOVE_ONE_2 1 1 L 1MOVE_ONE_2
1MOVE_ONE_2 7 1 S 1TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
1RESTORE_VALUE 7 0 R 1RESTORE_VALUE
1RESTORE_VALUE 8 1 R 1RESTORE_VALUE
1RESTORE_VALUE 6 6 S 1TO_START
# Go back to the start
1TO_START 6 6 R 1TO_START
1TO_START 0 0 R 1TO_START
1TO_START 1 1 R 1TO_START
1TO_START 5 5 S 1END


#
# LOAD S1, A
#


2END 5 5 S 3START
# Start of loading
2START 5 5 R 2TO_A_END_R
# To end of number A
2TO_A_END_R 0 0 R 2TO_A_END_R
2TO_A_END_R 1 1 R 2TO_A_END_R
2TO_A_END_R 2 2 R 2TO_A_END_R
2TO_A_END_R 3 3 L 2SET_TO_7
# Move to the start of number A, and set all values to 7
2SET_TO_7 0 7 L 2SET_TO_7
2SET_TO_7 1 7 L 2SET_TO_7
2SET_TO_7 2 2 L 2TO_MIDDLE_L
# Find the middle
2TO_MIDDLE_L 7 7 L 2TO_MIDDLE_L
2TO_MIDDLE_L 1 1 L 2TO_MIDDLE_L
2TO_MIDDLE_L 0 0 L 2TO_MIDDLE_L
2TO_MIDDLE_L 2 2 L 2TO_MIDDLE_L
2TO_MIDDLE_L 3 3 L 2TO_MIDDLE_L
2TO_MIDDLE_L 5 5 L 2TO_S1_END
# To end of S1
2TO_S1_END 6 6 L 2COPY_VALUE
# Move Left until start of S1
# Copy the first non-7/8 value
2COPY_VALUE 0 7 R 2MOVE_ZERO
2COPY_VALUE 1 8 R 2MOVE_ONE
2COPY_VALUE 7 7 L 2COPY_VALUE
2COPY_VALUE 8 8 L 2COPY_VALUE
2COPY_VALUE 6 6 R 2RESTORE_VALUE
# Move a 0 to the end of number A
2MOVE_ZERO 0 0 R 2MOVE_ZERO
2MOVE_ZERO 1 1 R 2MOVE_ZERO
2MOVE_ZERO 2 2 R 2MOVE_ZERO
2MOVE_ZERO 3 3 L 2MOVE_ZERO_2
2MOVE_ZERO 4 4 R 2MOVE_ZERO
2MOVE_ZERO 5 5 R 2MOVE_ZERO
2MOVE_ZERO 6 6 R 2MOVE_ZERO
2MOVE_ZERO 7 7 R 2MOVE_ZERO
2MOVE_ZERO 8 8 R 2MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
2MOVE_ZERO_2 0 0 L 2MOVE_ZERO_2
2MOVE_ZERO_2 1 1 L 2MOVE_ZERO_2
2MOVE_ZERO_2 7 0 S 2TO_MIDDLE_L
# Move a 1 to the end of number A
2MOVE_ONE 0 0 R 2MOVE_ONE
2MOVE_ONE 1 1 R 2MOVE_ONE
2MOVE_ONE 2 2 R 2MOVE_ONE
2MOVE_ONE 3 3 L 2MOVE_ONE_2
2MOVE_ONE 4 4 R 2MOVE_ONE
2MOVE_ONE 5 5 R 2MOVE_ONE
2MOVE_ONE 6 6 R 2MOVE_ONE
2MOVE_ONE 7 7 R 2MOVE_ONE
2MOVE_ONE 8 8 R 2MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
2MOVE_ONE_2 0 0 L 2MOVE_ONE_2
2MOVE_ONE_2 1 1 L 2MOVE_ONE_2
2MOVE_ONE_2 7 1 S 2TO_MIDDLE_L
# Restore number A, translate 7 to 0 and 8 to 1
2RESTORE_VALUE 7 0 R 2RESTORE_VALUE
2RESTORE_VALUE 8 1 R 2RESTORE_VALUE
2RESTORE_VALUE 6 6 S 2TO_START
# Go back to the start
2TO_START 6 6 R 2TO_START
2TO_START 0 0 R 2TO_START
2TO_START 1 1 R 2TO_START
2TO_START 5 5 S 2END


#
# LOAD S4, B
#


3END 5 5 S 4START
# Start of loading
3START 5 5 R 3TO_B_END_R
# To end of number B
3TO_B_END_R 0 0 R 3TO_B_END_R
3TO_B_END_R 1 1 R 3TO_B_END_R
3TO_B_END_R 2 2 R 3TO_B_END_R
3TO_B_END_R 3 3 R 3TO_B_END_R
3TO_B_END_R 4 4 L 3SET_TO_7
# Move to the start of number B, and set all values to 7
3SET_TO_7 0 7 L 3SET_TO_7
3SET_TO_7 1 7 L 3SET_TO_7
3SET_TO_7 3 3 L 3TO_MIDDLE_L
# Find the middle
3TO_MIDDLE_L 7 7 L 3TO_MIDDLE_L
3TO_MIDDLE_L 1 1 L 3TO_MIDDLE_L
3TO_MIDDLE_L 0 0 L 3TO_MIDDLE_L
3TO_MIDDLE_L 2 2 L 3TO_MIDDLE_L
3TO_MIDDLE_L 3 3 L 3TO_MIDDLE_L
3TO_MIDDLE_L 5 5 L 3TO_S1_END
# To end of S1
3TO_S1_END 6 6 L 3TO_S2_END
# To end of S2
3TO_S2_END 0 0 L 3TO_S2_END
3TO_S2_END 1 1 L 3TO_S2_END
3TO_S2_END 6 6 L 3TO_S3_END
# To end of S3
3TO_S3_END 0 0 L 3TO_S3_END
3TO_S3_END 1 1 L 3TO_S3_END
3TO_S3_END 6 6 L 3TO_S4_END
# To end of S4
3TO_S4_END 0 0 L 3TO_S4_END
3TO_S4_END 1 1 L 3TO_S4_END
3TO_S4_END 6 6 L 3COPY_VALUE
# Move Left until start of S4
# Copy the first non-7/8 value
3COPY_VALUE 0 7 R 3MOVE_ZERO
3COPY_VALUE 1 8 R 3MOVE_ONE
3COPY_VALUE 7 7 L 3COPY_VALUE
3COPY_VALUE 8 8 L 3COPY_VALUE
3COPY_VALUE 6 6 R 3RESTORE_VALUE
# Move a 0 to the end of number B
3MOVE_ZERO 0 0 R 3MOVE_ZERO
3MOVE_ZERO 1 1 R 3MOVE_ZERO
3MOVE_ZERO 2 2 R 3MOVE_ZERO
3MOVE_ZERO 3 3 R 3MOVE_ZERO
3MOVE_ZERO 4 4 L 3MOVE_ZERO_2
3MOVE_ZERO 5 5 R 3MOVE_ZERO
3MOVE_ZERO 6 6 R 3MOVE_ZERO
3MOVE_ZERO 7 7 R 3MOVE_ZERO
3MOVE_ZERO 8 8 R 3MOVE_ZERO
# Move a 0 to the left until the first 7, and replace it
3MOVE_ZERO_2 0 0 L 3MOVE_ZERO_2
3MOVE_ZERO_2 1 1 L 3MOVE_ZERO_2
3MOVE_ZERO_2 7 0 S 3TO_MIDDLE_L
# Move a 1 to the end of number B
3MOVE_ONE 0 0 R 3MOVE_ONE
3MOVE_ONE 1 1 R 3MOVE_ONE
3MOVE_ONE 2 2 R 3MOVE_ONE
3MOVE_ONE 3 3 R 3MOVE_ONE
3MOVE_ONE 4 4 L 3MOVE_ONE_2
3MOVE_ONE 5 5 R 3MOVE_ONE
3MOVE_ONE 6 6 R 3MOVE_ONE
3MOVE_ONE 7 7 R 3MOVE_ONE
3MOVE_ONE 8 8 R 3MOVE_ONE
# Move a 1 to the left until the first 7, and replace it
3MOVE_ONE_2 0 0 L 3MOVE_ONE_2
3MOVE_ONE_2 1 1 L 3MOVE_ONE_2
3MOVE_ONE_2 7 1 S 3TO_MIDDLE_L
# Restore number B, translate 7 to 0 and 8 to 1
3RESTORE_VALUE 7 0 R 3RESTORE_VALUE
3RESTORE_VALUE 8 1 R 3RESTORE_VALUE
3RESTORE_VALUE 6 6 S 3TO_START
# Go back to the start
3TO_START 6 6 R 3TO_START
3TO_START 0 0 R 3TO_START
3TO_START 1 1 R 3TO_START
3TO_START 5 5 S 3END


#
# ADD A, B
#


4END 5 5 S 5START

# Start of addition
4START 5 5 R 4FIND_SECOND_END
# Find the end of B
4FIND_SECOND_END 0 0 R 4FIND_SECOND_END
4FIND_SECOND_END 1 1 R 4FIND_SECOND_END
4FIND_SECOND_END 2 2 R 4FIND_SECOND_END
4FIND_SECOND_END 3 3 R 4FIND_SECOND_END
4FIND_SECOND_END 4 4 L 4SUBTRACT_ONE
# Subtract one from B
4SUBTRACT_ONE 0 1 L 4SUBTRACT_ONE
4SUBTRACT_ONE 1 0 L 4FIND_FIRST_END
4SUBTRACT_ONE 3 3 L 4TO_MIDDLE
# Find the end of the A
4FIND_FIRST_END 0 0 L 4FIND_FIRST_END
4FIND_FIRST_END 1 1 L 4FIND_FIRST_END
4FIND_FIRST_END 4 4 L 4ADD_ONE
# Add one to A
4ADD_ONE 0 1 L 4FIND_FIRST_END
4ADD_ONE 1 0 L 4ADD_ONE
4ADD_ONE 3 3 L 4TO_MIDDLE
# Return to the middle of the tape
4TO_MIDDLE 0 0 L 4TO_MIDDLE
4TO_MIDDLE 1 1 L 4TO_MIDDLE
4TO_MIDDLE 2 2 L 4TO_MIDDLE
4TO_MIDDLE 5 5 S 4END

4END 5 5 S END